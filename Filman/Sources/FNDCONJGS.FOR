      SUBROUTINE FNDCONJGS(A,LEN,NCHANS,INDX)
C      DOUBLE COMPLEX A(LEN,NCHANS)
      DOUBLE COMPLEX A(NCHANS,LEN)
      INTEGER INDX(LEN,NCHANS)
      
      INDX=0
      J=1
      DO 1,ICH=1,NCHANS
      J=1
      DO 1,I=1,LEN
      IF(INDX(I,ICH).NE.0)GOTO 1
      WHERE(ABS(IMAG(A(:,ICH))).EQ.ABS(IMAG(A(I,ICH)))) INDX(:,ICH)=J
      J=J+1
1     CONTINUE
      
      RETURN
      END
      
      SUBROUTINE VOMEGA(ALPHA,LEN,NCHANS,BETA,OMEGA,LENI,INDX,IS)
      DOUBLE COMPLEX ALPHA(LEN,NCHANS)
      DOUBLE PRECISION OMEGA(LENI,NCHANS),BETA(LENI,NCHANS),FMX
      INTEGER INDX(LEN,NCHANS),NUMB(:)
      ALLOCATABLE NUMB
	PARAMETER (PI=3.14159265358979323846264338328D0)
      
      ALLOCATE(NUMB(LENI))
      OMEGA=0D0
      BETA=0D0
      FMX=5D-1*DBLE(IS)
      DO 1,ICH=1,NCHANS
      NUMB=0
      DO 2,I=1,LEN
      OMEGA(INDX(I,ICH),ICH)=ABS(IMAG(ALPHA(I,ICH))/PI*FMX)
      BETA(INDX(I,ICH),ICH)=BETA(INDX(I,ICH),ICH)+
     $                                           ABS(REAL(ALPHA(I,ICH)))
2     NUMB(INDX(I,ICH))=NUMB(INDX(I,ICH))+1
1     BETA(:,ICH)=BETA(:,ICH)/NUMB      
      DEALLOCATE(NUMB)
      RETURN
      END
      
      SUBROUTINE VFB(C,NCHANS,LEN,B,LENI,INDX)
      DOUBLE COMPLEX C(NCHANS,NCHANS,LEN,NCHANS)
      DOUBLE PRECISION B(NCHANS,NCHANS,LENI,NCHANS)
      INTEGER INDX(LEN,NCHANS)
C      INTEGER NUMB(:)
C      ALLOCATABLE NUMB

C      ALLOCATE(NUMB(LENI))
      B=0D0
      DO 1,IC=1,NCHANS
      DO 1,JC=1,NCHANS
      DO 1,ICH=1,NCHANS
C      NUMB=0
      DO 2,I=1,LEN
      B(IC,JC,INDX(I,ICH),ICH)=B(IC,JC,INDX(I,ICH),ICH)+
     $                       CDABS(C(IC,JC,I,ICH))
C2     NUMB(INDX(I,ICH))=NUMB(INDX(I,ICH))+1
C1     B(IC,JC,:,ICH)=B(IC,JC,:,ICH)/NUMB      
2     CONTINUE
1     CONTINUE
C      DEALLOCATE(NUMB)
      RETURN
      END