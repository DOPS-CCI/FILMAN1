C AVRGRP.FOR- COMPUTES MEANS AND VARIANCES ACROSS RECORD-SETS WITHIN
C LEVELS OF A SELECTED GROUP-VAR, FOR ALL SELECTED CHANNELS. INPUT
C LEVELS OF THE GROUP VAR CAN BE REASSIGNED ARBITRARILY TO UP TO 10
C OUTPUT LEVELS, AND RAW DATA VALUES CAN BE TRANSFORMED IN THE STANDARD
C WAYS. PRINT OUTPUT IS AUTOMATIC AND INCLUDES 1-WAY ANOVA FOR EACH
C SELECTED DATA POINT. OUTPUT FILE CAN ALSO BE WRITTEN FOR SUBSEQUENT
C PLOTTING. IT CONTAINS 1 RECORD PER CHANNEL, EACH RECORD WITH VECTORS
C OF MEANS THEN SD'S FOR EACH GROUP IN TURN. REVISED FOR PC 10/92.
C STILL NEEDS ALLOCATED WORKSPACE FOR FULL GENERALITY 8/93.      

	SUBROUTINE AVRGRP
      INCLUDE 'MAX.INC'
	CHARACTER*64 INPFIL,OUTFIL
	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(ICHMAX)
	COMMON/FLDES/NG,NA,NC,ND,NF,NP,NR,IS,IBUF(IOMAX)
	COMMON/FLDESO/NGO,NAO,NCO,NDO,NFO,NPO,NRO,ISO,IBUFO(IOMAX)
	COMMON/DEV/ITI,IOX
	COMMON/STDFIL/INPFIL,OUTFIL
	COMMON/PTLST/NLIST,LIST(2,72)
      COMMON /SELGVS/ SELGRPS,LINESEL
	DIMENSION LBLS(6,20),IGLAB(5),NUMBS(20),XBAR(10),SSQD(10)
	DIMENSION TITLE(18),ICLABS(6,ICHMAX),ILAB(6*ICHMAX)
	INTEGER*4, SAVE :: NXEQ,NSO,ICHDIFF,IDGRP,NIN,IGRP(20),IGRPNS(10)
	INTEGER*4, SAVE :: IGRPF,IVECF,IBLKF,NLEVL,NPERCHAN,NGO1,IT,NDP
	INTEGER*4, SAVE :: ICHOFF
	REAL*4, SAVE :: ATOT,ANPB
	EQUIVALENCE (LBLS(1,1),IBUF(1)),(X,IX),(Y,IY),(ICLABS,ILAB)
	DATA ISL,IYES,IYES0/'/','Y','y'/
	DATA IGLAB/'    ','NUMB','ER F','OR G','ROUP'/
	DATA NUMBS/'1 ','2 ','3 ','4 ','5 ','6 ','7 ','8 ','9 ','10',
     + '11','12','13','14','15','16','17','18','19','20'/
	character*255 ALINE
	character*4 ans
	equivalence (ans,ians)
	save igo
      INTEGER SELGRPS(20)
	CHARACTER*24 LINESEL(20)
	CHARACTER*128 CTITLE*128
      EQUIVALENCE (TITLE,CTITLE)
      LOGICAL LWSO,LTPF,LBLOCK
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME
      CHARACTER*1024 OUTNAME
      CHARACTER*1024 OUTFNM
      SAVE ndo1,npb,J0,lwso,LTPF

	IF(IFLAG1)10,30,60

10    NFO=3
      CURPROCNAME='AVRGRP'
      IOX=100
      OUTNAME=OUTFNM(CURPROCNAME)
      LTRO=LEN_TRIM(OUTNAME)
      OUTNAME(LTRO-2:LTRO)='txt'
	OPEN(UNIT=IOX,FILE=OUTNAME,MODE='WRITE')
	IF(NG-2)1,1001,1
1001  CALL ShowInfoText('Info',' NO GROUPS AVAILABLE; EXITING')
	KNT=-1
	RETURN

1     CALL DoAVRGRPDialog(IIDGRP,ININ,INDP,IIGO,INDO1,INPB,IIT,
     +                    LWSO,LTPF,LBLOCK,CTITLE)
     
      NIN=ININ
      IDGRP=IIDGRP

      do 20201,I=1,NIN
      READ(LINESEL(I),*,end=20202,err=20202)IGRP(I)
      goto 20201
20202 IGRP(I)=0 !blank ones should be skipped
20201 CONTINUE

! Find maximum of newly assigned GV values = NLEVL
      
      NLEVL=1
	DO 2 I=1,NIN
	IF(IGRP(I).EQ.0)GO TO 3 !skip
	IF(IGRP(I).GT.NLEVL)NLEVL=IGRP(I)
2     CONTINUE
3     J=109+6*NGO
	NGO1=NGO+1
	NGO=NGO+NLEVL
	NDO1=INDO1        ! NDO1=# BLOCKS, NPB=# POINTS/BLOCK
	NPB=INPB          ! DEFAULTS IN ABSENCE OF BLOCKING
	IF(NDO1*NPB-NDO)1002,1002,1003
1003  CALL ShowInfoText('Error',
     + ' TOO MANY POINTS REQUESTED; RE-SPECIFY BLOCKING')
	GO TO 1
1002  CONTINUE
      IGO=IIGO
	GO TO(1008,1009,1008)IGO
1008  ISO=ISO/NPB
	NDO=NDO1
	GO TO 1020
1009  IF(LIST(1,1).EQ.1)GO TO 1010
      CALLShowInfoText('Error',
     + 'ERROR; FOR SPECTRA POINTS MUST START AT DC')
	KNT=-1
	RETURN

1010  NDO=NDO1+1
	IF(NDO1*NPB.EQ.ND-1)GO TO 1020
	DF=FLOAT(IS)/(ND-1)
	ISO=NDO1*NPB*DF
1020  ANPB=FLOAT(NPB)
      IT=IIT+1
	ISZ=2*NCO*NDO*NLEVL+NGO+NAO
	IF(ISZ.LE.IOMAX)GO TO 32
31    CONTINUE
      WRITE(ALINE,205)ISZ
205   FORMAT(' TOO MANY (',I7,') WORDS REQUESTED; TRY AGAIN')
      CALL ShowInfoText('Error',ALINE)
	GO TO 1
32    CONTINUE
      IF(LWSO)GO TO 4
      IFLAG3=0

C ADD NEW GROUP-VAR LABELS

4     DO 6 I=1,NLEVL
	DO 5 K=1,5
	IBUFO(J)=IGLAB(K)
5     J=J+1
	IBUFO(J)=NUMBS(I)

C MOVE CHANNEL LABELS

6     J=J+1
	M=1
	DO 8 I=1,NCO
	L=J+5
	K=6*(NG+ICHAN(I))-5
	DO 7 I1=J,L
	IBUFO(I1)=IBUF(K)
	ILAB(M)=IBUF(K)
	M=M+1
7     K=K+1
8     J=J+6
	WRITE(IOX,300)IDGRP,INPFIL
300   FORMAT(' AVRGRP ANALYSIS OF GROUP VAR ',I2,' FROM FILE ',A)
	WRITE(IOX,599)(IBUFO(I),I=1,108)
599   FORMAT(1X,18A4)
	WRITE(IOX,600)IDGRP,(LBLS(I,IDGRP),I=1,6)
600   FORMAT(/' GROUP VAR ',I2,' ID=',6A4)
	WRITE(IOX,603)(TITLE(I),I=1,18)
603   FORMAT(/' ',18A4)
	WRITE(IOX,301)(I,I=1,NIN)
301   FORMAT(//' INPUT GROUP LEVELS:',20I3)
	WRITE(IOX,302)(IGRP(I),I=1,NIN)
302   FORMAT(' OUTPUT EQUIVALENTS:',20I3)
      IF(.NOT.LTPF)GOTO 1500
      NDP=INDP
1500  NSO=NGO+NAO+1
	ICHOFF=0
	IGRPF=2*NDO
	IVECF=NDO
	IBLKF=NLEVL*IGRPF
	DO 13 I=1,NLEVL
13    IGRPNS(I)=0
	ATOT=0.0
	NPERCHAN=NDO      ! LOOP LIMIT FOR TERMINAL PHASE
	NDO=2*NDO*NLEVL   ! # DATA POINTS IN OUTPUT RECORD
	NXEQ=0
	RETURN

C EXECUTION PHASE

30    IF(NXEQ)3001,3001,3002
C FIRST TIME IN, INITIALIZE WORK STORAGE TO ZERO AND FILL GV VALUES
3001  DO 1501 I=NSO,ISZ
1501  IBUFO(I)=0
	NXEQ=1
3002  IVAL=IBUF(IDGRP)
      
C GET & CHECK LEVEL INDEX FOR THIS NEW RECSET
!NOTE: this is done this wierd way because we only want to write the
! error message once per recordset, but we still need to scan through 
! all the records in the recordset to get to the next one
	
	IF(IVAL)33,33,34
33    IF(ICHOFF.GT.0) GO TO 34 !Skip writing the error message
331   WRITE(IOX,500)KNT,IVAL
	WRITE(*,500)KNT,IVAL
500   FORMAT(' RECORD-SET ',I4,' CONTAINS WILD VALUE=',I3)
	GO TO 50
34    IF(IVAL-NIN)35,35,341
341   IF(ICHOFF.EQ.0) GO TO 331 !Write the error message
35    IF(ICHOFF.GT.0) GO TO 40
      NGRP=IGRP(IVAL)
	IGRPNS(NGRP)=IGRPNS(NGRP)+1
	ATOT=ATOT+1.0
	J0=NSO+(NGRP-1)*IGRPF   ! START POINT FOR STORAGE AREA, THIS LEVEL
40    J1=J0+ICHOFF*IBLKF      ! START POINT FOR MEANS, THIS CHANNEL
	J2=J1+IVECF             ! START POINT FOR SD'S, THIS CHANNEL
C ADD THE NEW VALUES          
45    L=0                     ! INDEX TO POINTS IN INPUT LIST
	GO TO (452,451,452)IGO
C HANDLE THE DC POINT FOR SPECTRA SEPARATELY
451   IX=IBUFO(J1)
	L=L+1
	CALL XVAL(L,XV,XI)
	Y=RECODE(XV,IT)
	X=X+Y
	IBUFO(J1)=IX
	IX=IBUFO(J2)
	X=X+Y*Y
	IBUFO(J2)=IX
	J1=J1+1
	J2=J2+1
452   DO 46 I=1,NDO1      ! NDO1 IS # OF BLOCKS, EACH OF LENGTH NPB
	IX=IBUFO(J1)
	Y=0.
	DO 47 J=1,NPB
	L=L+1
	CALL XVAL(L,XV,XI)
47    Y=Y+XV
	Y=RECODE(Y/ANPB,IT)     ! RECODE THE BLOCK AVERAGE OF RAW VALUES
	X=X+Y
	IBUFO(J1)=IX
	Y=Y*Y
	IX=IBUFO(J2)
	X=X+Y
	IBUFO(J2)=IX
	J1=J1+1
46    J2=J2+1
50    ICHOFF=ICHOFF+1
	IF(ICHOFF-NCO)51,52,52
52    ICHOFF=0
51    RETURN

C TERMINAL PHASE; CALCULATE STATS & WRITE OUTPUT RECORDS

60    WRITE(IOX,303)(I,IGRPNS(I),I=1,NLEVL)
303   FORMAT(//(' OUTPUT GROUP ',I2,' N=',I3))
	IF(IFLAG3)62,62,61
61    DO 610 I=1,NLEVL
	IBUFO(NGO1)=IGRPNS(I)
610   NGO1=NGO1+1
62    ANG=FLOAT(NLEVL)
	IDF1=NLEVL-1
	IDF2=ATOT-ANG
	DO 90 I=1,NCO
	IBUFO(1)=I
	J0=NSO+(I-1)*IBLKF
	WRITE(IOX,304)ICHAN(I),(ICLABS(J,I),J=1,6)
304   FORMAT(//' ANALYSIS OF CHANNEL ',I3,', ID=',6A4)
	WRITE(IOX,305)IDF1,IDF2,(J,J=1,NLEVL)
305   FORMAT(/'  VAR',' F(',I2,',',I3,')',(T15,10(5XI2,4X)))
	DO 70 K=1,NPERCHAN
	SSB=0.0
	SST=0.0
	FRAT=0.0
	J1=J0+(K-1)     
	DO 65 L=1,NLEVL
	J2=J1+IVECF
	IX=IBUFO(J1)
	FRAT=FRAT+X
	ANL=FLOAT(IGRPNS(L))
	SXS=X*X
	IY=IBUFO(J2)
	SST=SST+Y
	SSB=SSB+SXS/ANL
	VARL=(ANL*Y-SXS)/(ANL*(ANL-1.0))
	IF(VARL)71,72,72
71    VARL=0.
	WRITE(*,604)K,L
604   FORMAT(' WARNING: BLOCK ',I4,', GROUP-LEVEL ',I2,
     1  ' HAS VARIANCE <0.')
72    Y=SQRT(VARL)
	SSQD(L)=Y
	X=X/ANL
	XBAR(L)=X
	IF(IFLAG3)65,65,63
63    IBUFO(J1)=IX
	IBUFO(J2)=IY
65    J1=J1+IGRPF
      IF(.NOT.LTPF) GOTO 66 !PRINT THEM ALL
	IF(K-NDP)66,66,70
66    ADJ=FRAT*FRAT/ATOT
	IF(NLEVL-1)660,660,661
660   FRAT=0.0
	GO TO 662
661   SSB=SSB-ADJ
	SST=SST-ADJ
	SSW=SST-SSB
	FRAT=(FLOAT(IDF2)*SSB)/(FLOAT(IDF1)*SSW)
	IF(FRAT.LT.0.)FRAT=0.
662   WRITE(IOX,307)K,FRAT,(XBAR(L),L=1,NLEVL)
307   FORMAT(/1H ,I4,3XF6.2,10(1PE11.3)/(14X,10(1PE11.3)))
	WRITE(IOX,308)(SSQD(L),L=1,NLEVL)
308   FORMAT(14X,10(1PE11.3)/(14X,10(1PE11.3)))
70    CONTINUE
	IF(IFLAG3)90,90,80
80    JB=J0-NSO+1
	IF(I.EQ.1)GO TO 89
	L=1
	JB1=J0-1
	DO 85 K=JB,JB1
	IBUFO(K)=IBUFO(L)
85    L=L+1
89    CALL PUTSTD(IBUFO(JB))
90    CONTINUE
	WRITE(IOX,309)
309   FORMAT(//' END OF OUTPUT')
95    CLOSE(UNIT=IOX)
	RETURN
	END



