C ARPLOT.FOR-
	include 'fgraph.fi'
      include 'flib.fi'

	SUBROUTINE AR_PLOT(WYN,NPTS,ICHANS,KN,IORD,IRS,IRE,ICS,ICE,CLABEL,ICRN,
     $                   ZerBoot,ZWYN,NLEVS,NLV,IKS,IKE,XSPECMX,IMODI,
     $                   Fill,WYN2,StdDev,WAITKEY)
c	use ifcore
	use ifqwin    ! Maciek
	include 'fgraph.fd'
      include 'flib.fd'
C      PARAMETER (MAXAR=20,MCHANS=64,MNPTS=33,MKN=6,IFADNR=4)
C MAXAR  - MAXIMAL AR MODEL ORDER
C MCHANS - MAXIMAL NUMBER OF CHANNELS (SOME SUBROUTINES
C          REQUIRE WORKARRAY)
C MNPTS  - NUMBER OF CALCULATION POINTS IN FREQUENCY DOMAIN (POWER SP)
C MKN    - NUMBER OF FUNCTIONS CALCULATED IN AR_SPECT
C IFADNR - NUMBER OF FAD PARAMETERS (B,BETA,OMEGA,FI)
C      PARAMETER (INTBMX=10)
C INTBMX - MAXIMAL NUMBER OF BORDERS OF DTF INTEGRATION RANGES

C IMODI = 0 - REGULAR PLOT
C         1 - AVERAGED RESULTS
      INCLUDE 'MULTAR.INC'
	DOUBLE PRECISION RMINF,RMXF
	REAL WYN(NPTS,ICHANS,ICHANS,KN),FINDMAXSPECT,XSPECMX
	REAL ZERVEC(MNPTS)
	CHARACTER*1 key
	CHARACTER*20 FNNAME(MKN)
	LOGICAL WHICH(MKN+1)
	CHARACTER*24 CLABEL(ICHANS)
	CHARACTER*24 INPFIL
	CHARACTER*3  ARORD,SRECN*4
	CHARACTER*10 SFMIN,SFMAX
	RECORD /XYCOORD/ XY    !  Maciek
	COMMON/DEV/ITI,ILP,IGRAPH
	COMMON /COHPAR/ WHICH,RMINF,RMXF
	COMMON /ARERR/ IERR
	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(1)
	COMMON/FLDES/ NG,NA,NC,NP,NF,NL,NR,IS,IBUF(1)
	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(1)
	COMMON/STDFIL/INPFIL
	INTRINSIC ABS
	EXTERNAL FUN,FINDMAXSPECT
	DATA FNNAME /'Power spectra','(im)','Cohs: ord.mult.part.','(im)',
     1'DTFs','V','Not normalized DTF','direct DTF'/
      REAL ZWYN(NLEVS,ICHANS,ICHANS,KN)
      LOGICAL ZerBoot,USEOTHMX
      COMPLEX ZW
      INTEGER*2 IIPOS,IIY,IXPOS,IYPOS,IWDT,IHGH,MAXX,MAXY
      CHARACTER*30 ADDTXT(6)
      COMMON /PLTXT/ ADDTXT
      LOGICAL Fill,StdDev,WAITKEY,USEGBM
      EXTERNAL IRKN
      REAL WYN2(NPTS,ICHANS,ICHANS,KN)
      COMMON /GBLMAX/ USEGBM,SMAX,DMAX,CURSMAX,CURDMAX
      LOGICAL EndPlot,CMMP,WTK
      INTEGER DECISION

	IF(IERR.NE.0)RETURN
	ENDPLOT=.FALSE.
	WTK=.FALSE.         ! Sprawdzic co to w ogole jest
	CALL INITGRAPH(MAXX,MAXY,NTR,NTC,NBBP,NCOLOR)
C	CALL GRAPHMODE_ON(MAXX,MAXY,NTR,NTC,NBBP,NCOLOR)
	IF(IERR.NE.0)RETURN
C	CALL ZEROF(ZERVEC,NPTS)
      USEOTHMX=.FALSE.
	ZERVEC=0.
	IROWS=IRE-IRS+1
	ICOLS=ICE-ICS+1
	ISIZE=MAX(IROWS,ICOLS)
	IHGH = INT((MAXY-8)/ISIZE)
	IWDT = IHGH
	IXM = 8
	WRITE(ARORD,'(I3)')IORD
	WRITE(SFMIN,'(F8.2)')RMINF
	WRITE(SFMAX,'(F8.2)')RMXF
C	WRITE(SRECN,'(I4)')KNT
	WRITE(SRECN,'(I4)')ICRN
	IF(XSPECMX.EQ.0.)THEN
	  SPECMX=FINDMAXSPECT(WYN,NPTS,ICHANS,KN,1,2,FUN,0)
	ELSE
	  SPECMX=XSPECMX
	ENDIF

	INDX=IKS-1
	IK=IKS-1
    1 IK=IK+1
	IF(IK.GT.IKE)GOTO 3
	USEOTHMX=.FALSE.
	IF(.NOT.WHICH(IK))GOTO 1
	IF(IK.EQ.2.OR.IK.EQ.4)THEN
	 INDX=INDX+1
	 GOTO 1
	ENDIF
	INDX=INDX+1
	othmx=1.0
	CALL SETGSCR(IRKN(IK))

   4  IF(USEOTHMX)GOTO 41
	IF(IK.EQ.1)THEN
	  IF(USEGBM)THEN
	      XMIN=0.0
	      XMAX=SMAX
	  ELSE
	      XMIN=0.0
C	      XMAX=FINDMAXSPECT(WYN,NPTS,ICHANS,KN,1,2,FUN)
	      XMAX=SPECMX
	      CURSMAX=XMAX
	  ENDIF
	ELSEIF(IK.EQ.7)THEN ! nnDTF
        XMIN=0.0
	  IF(USEGBM)THEN
	      XMAX=DMAX
	  ELSE
	      XMAX=FINDMAXSPECT(WYN,NPTS,ICHANS,KN,7,0,FUN,2)
	      CURDMAX=XMAX
	  ENDIF
	ELSEIF(IK.EQ.6)THEN ! V
	  XVM=FINDMAXSPECT(WYN,NPTS,ICHANS,KN,6,0,FUN,0)
	  XMAX=othmx
	  IF(XVM.GT.1.)XMAX=XVM*5.
	ELSE
41	 XMIN=0.0
C	 XMAX=0.5
	 XMAX=othmx
	ENDIF

      DO 2,IROW=IRS,IRE
	DO 2,ICOL=ICS,ICE
!      if(peekcharqq())then    ! interruptible display
!       key=getcharqq()
!       if(peekcharqq())then
!        key=getcharqq()
!       elseif(key.eq.'V'.or.key.eq.'v')then
!    6   call graphmode_off
!        write(iti,100)
!  100   format('$ENTER NEW MAXIMAL VALUE >'\)
!        read(5,*)othmx
!        call graphmode_on(maxx,maxy,NTR,NTC,NBBP,NCOLOR)
!        USEOTHMX=.TRUE.
!        goto 4
!       endif
!       goto 5
!      endif

! tu byla wstawka

	IXPOS = IWDT*(ICOL-ICS)+IXM
	IYPOS = IHGH*(IROW-IRS+1)
C     CALL SETLINESTYLE(2#1100110011001100)  ! DASHED LINE
C     ISTAT=RECTANGLE($GBORDER,IXPOS,IYPOS-IHGH,IXPOS+IWDT,IYPOS)
C     CALL SETLINESTYLE(2#1111111111111111)  ! SOLID LINE
	CALL SETVIEWPORT(IXPOS,IYPOS-IHGH,IXPOS+IWDT,IYPOS)
	IF(ZerBoot)THEN
	  IF(IK.EQ.1.OR.IK.EQ.3)THEN
	      ZW=CMPLX(ZWYN(NLV,IROW,ICOL,IK),ZWYN(NLV,IROW,ICOL,IK+1))
	  ELSE
	      ZW=CMPLX(ZWYN(NLV,IROW,ICOL,IK),0.)
	  ENDIF
	ELSE
	  ZW=(0.,0.)
	ENDIF
	IF(IK.EQ.1.OR.IK.EQ.3)THEN
	 CALL BOXGRAPH(IXPOS,IYPOS,IWDT,IHGH,WYN(1,IROW,ICOL,INDX),WYN(1,I
     $ ROW,ICOL,INDX+1),INT2(NPTS),XMIN,XMAX,FUN,ZerBoot,ZW,Fill,
     $ WYN2(1,IROW,ICOL,INDX),WYN2(1,IROW,ICOL,INDX+1),StdDev,
     $ .NOT.USEGBM)
	ELSE
	 IF(ANY(IK.EQ.(/5,7,8/)).AND.IROW.EQ.ICOL)THEN ! POWER SPECTRA ON (all) DTFS DIAGONALs
	  CALL BOXGRAPH(IXPOS,IYPOS,IWDT,IHGH,WYN(1,IROW,ICOL,INDX),ZERVEC
C	  CALL BOXGRAPH(IXPOS,IYPOS,IWDT,IHGH,WYN(1,IROW,ICOL,1),
C    $                                      WYN(1,IROW,ICOL,2)
     $  ,INT2(NPTS),XMIN,SPECMX,FUN,ZerBoot,ZW,Fill,
     $  WYN2(1,IROW,ICOL,INDX),ZERVEC,StdDev,.NOT.USEGBM)
       ELSE
	  CALL BOXGRAPH(IXPOS,IYPOS,IWDT,IHGH,WYN(1,IROW,ICOL,INDX),ZERVEC
     $  ,INT2(NPTS),XMIN,XMAX,FUN,ZerBoot,ZW,Fill,
     $  WYN2(1,IROW,ICOL,INDX),ZERVEC,StdDev,.NOT.USEGBM)
       ENDIF
	ENDIF 
      I=SETWRITEMODE($GPSET)
	CALL SETVIEWPORT(0,0,MAXX,MAXY)
	CALL SETLINESTYLE(2#1100110011001100)  ! DASHED LINE
	ISTAT=RECTANGLE($GBORDER,IXPOS,IYPOS-IHGH,IXPOS+IWDT,IYPOS)
	CALL SETLINESTYLE(2#1111111111111111)  ! SOLID LINE
	IF(IROW.EQ.IRE.OR.ICOL.EQ.ICE)THEN
C	 ISTAT=SETFONT("t'modern'h10w5")
	 ISTAT=SETFONT("t'Arial'h10w5")
	 CALL SETGTEXTVECTOR(0,1)
	 CALL MOVETO(0,IYPOS-IWDT/2+8,XY)
	 CALL OUTGTEXT(TRIM(CLABEL(IROW)(1:8))) ! Shorter labels
	 CALL SETGTEXTVECTOR(1,0)
	 CALL MOVETO(IXPOS+IWDT/2-8,MAXY-8,XY)
	 CALL OUTGTEXT(TRIM(CLABEL(ICOL)(1:8))) ! Shorter labels 
	ENDIF
    2 CONTINUE  
C    5 ISTAT = SETFONT("t'modern'h15w7")
    5 ISTAT = SETFONT("t'Arial'h18w7")
	IIPOS=IWDT*ISIZE+IXM+8
	CALL MOVETO(IIPOS,8,XY)
	CALL OUTGTEXT('File: '//INPFIL)
	CALL MOVETO(IIPOS,24,XY)
	CALL OUTGTEXT(FNNAME(IK))
	CALL MOVETO(IIPOS,40,XY)
	CALL OUTGTEXT('AR model order: '//ARORD)
	CALL MOVETO(IIPOS,56,XY)
	CALL OUTGTEXT('Frequency range (Hz): ')
	CALL MOVETO(IIPOS,72,XY)
	CALL OUTGTEXT('  '//SFMIN(1:LEN_TRIM(SFMIN))//' - '//SFMAX(1:))
	SELECTCASE(IMODI)
	  CASE(0)
40	    IF(ICRN.GT.0)THEN
	      CALL MOVETO(IIPOS,88,XY)
	      CALL OUTGTEXT('Record number: '//SRECN)
	    ENDIF
	  CASE(1)
	    CALL MOVETO(IIPOS,88,XY)
	    IF(ICRN.EQ.0)THEN
	      CALL OUTGTEXT('Averaged')
	    ELSE
	      CALL OUTGTEXT('Averaged over '//SRECN//' recs')
	    ENDIF
	  CASE DEFAULT
	    GOTO 40
	ENDSELECT
	DO 7,IL=1,5
	IIY=88+IL*16
	CALL MOVETO(IIPOS,IIY,XY)
7	CALL OUTGTEXT(ADDTXT(IL))
c	READ(ITI,'(A)')J
!      IF(WAITKEY)THEN
!        key=getcharqq()
!        if(peekcharqq())then
!         key=getcharqq()
!        elseif(key.eq.'V'.or.key.eq.'v')then
!         goto 6
!        endif
!      ENDIF
      OTHMX=XMAX
69    CALL DoMultarPlotAdvanceDialog(DECISION,OTHMX)
      SELECT CASE(DECISION)
        CASE(1)
            CONTINUE
        CASE(2)
            GOTO 3
        CASE(3)
            USEOTHMX=.TRUE.
            CALL CLEARSCREEN($GCLEARSCREEN)
            GOTO 4
        CASE(4)
!            Call ShowInfoText('Info',
!     +        'Press OK to hide this window. Press ENTER when done')
            read(IGRAPH,'(A)')KEY
            GOTO 69
      END SELECT
      
C     CALL SETVIEWPORT(0,0,VC.NUMXPIXELS,VC.NUMYPIXELS)
	IF(Fill)CALL CLEARSCREEN($GCLEARSCREEN)
	GOTO 1

C    3 CALL GRAPHMODE_OFF
    3 CALL CLOSEGRAPH
    
	RETURN
	END
	
	FUNCTION FUN(X)
	COMPLEX X
	FUN = ABS(X)
	RETURN
	END

	SUBROUTINE BOXGRAPH(IX,IY,IWDT,IHGT,D1,D2,LEN,XMIN,XMAX,FUNC,
     $                    ZerBoot,ZWYN,Fill,S1,S2,StdDev,WrtMax)
      USE IFQWIN
	INCLUDE 'FGRAPH.FD'
C      PARAMETER (MAXAR=20,MCHANS=64,MNPTS=33,MKN=6,IFADNR=4)
      include 'MULTAR.INC'
C MAXAR  - MAXIMAL AR MODEL ORDER
C MCHANS - MAXIMAL NUMBER OF CHANNELS (SOME SUBROUTINES
C          REQUIRE WORKARRAY)
C MNPTS  - NUMBER OF CALCULATION POINTS IN FREQUENCY DOMAIN (POWER SP)
C MKN    - NUMBER OF FUNCTIONS CALCULATED IN AR_SPECT
C IFADNR - NUMBER OF FAD PARAMETERS (B,BETA,OMEGA,FI)
!      PARAMETER (INTBMX=10)
C INTBMX - MAXIMAL NUMBER OF BORDERS OF DTF INTEGRATION RANGES
	DIMENSION D1(LEN),D2(LEN)
	DIMENSION S1(LEN),S2(LEN)
	DIMENSION DATA(MNPTS)
	DIMENSION SDATA(MNPTS)
C	COMPLEX DATA
      complex cdata(mnpts)
	REAL DATA
	INTEGER*2 CURCOLOR,gresult,scolor2,IX,IY,IWDT,IHGT,LEN,FILLMASK
	CHARACTER*10 NUMB
	RECORD /XYCOORD/ XY
	EXTERNAL FUNC
      COMPLEX ZWYN
      LOGICAL ZerBoot,Fill,StdDev,WrtMax
	record /xycoord/ ppoints(MNPTS+2)

C     SETVIEWPORT(IX,IY-IHGT,IX+IWDT,IY)
      FILLMASK=$GFILLINTERIOR
      IF(.NOT.Fill)FILLMASK=$GBORDER
!	DO 4,II=1,LEN
!    4 DATA(II)=CMPLX(D1(II),D2(II))
!	BXMIN=FUNC(DATA(1))
!	BXMAX=BXMIN
!	DO 1,INDX=2,LEN
!	IF(FUNC(DATA(INDX)).GT.BXMAX)BXMAX=FUNC(DATA(INDX))
!	IF(FUNC(DATA(INDX)).LT.BXMIN)BXMIN=FUNC(DATA(INDX))
!    1 CONTINUE
      CDATA=CMPLX(D1,D2)
      DO 4 II=1,LEN
    4 CDATA(II)=FUNC(CDATA(II))
      DATA=ABS(CDATA)
      BXMIN=MINVAL(DATA)
      BXMAX=MAXVAL(DATA)
      IF(StdDev)THEN
        CDATA=CMPLX(S1,S2)
        DO 1 II=1,LEN
    1   CDATA(II)=FUNC(CDATA(II))
        SDATA=ABS(CDATA)
        BXMIN=MINVAL(DATA-SDATA)
        BXMAX=MAXVAL(DATA+SDATA)
      ENDIF
	IF(XMIN.EQ.XMAX)THEN
	 XMIN=BXMIN
	 XMAX=BXMAX
	ENDIF
	IF(XMIN.EQ.XMAX)THEN
	 XMIN=XMIN-1.0
	 XMAX=XMAX+1.0
	ENDIF
	LCORNLFT=0
	LCORNDN=IHGT
	XSTEP=FLOAT(IWDT)/FLOAT(LEN-1)
	YSTEP=IHGT/(XMAX-XMIN)
	X=LCORNLFT
C	Y=YSTEP*(XMIN-FUNC(DATA(1)))+LCORNDN
	Y=YSTEP*(XMIN-DATA(1))+LCORNDN

	ppoints(1).xcoord=X
	ppoints(1).ycoord=Y
     
      I=SETWRITEMODE($GPSET)
	DO 2,I=2,LEN
C	Y2=YSTEP*(XMIN-FUNC(DATA(I)))+LCORNDN
	Y2=YSTEP*(XMIN-DATA(I))+LCORNDN
!	CALL MOVETO(INT2(X),INT2(Y),XY)
	IF(I.EQ.LEN) THEN
!	 ISTAT=LINETO(LCORNLFT+IWDT,INT2(Y2))
       ppoints(I).xcoord=LCORNLFT+IWDT
       ppoints(I).ycoord=INT2(Y2)
	ELSE
!	 ISTAT=LINETO(INT2(X+XSTEP),INT2(Y2))
       ppoints(I).xcoord=INT2(X+XSTEP)
       ppoints(I).ycoord=INT2(Y2)
	ENDIF
	X=X+XSTEP
    2 Y=Y2

C FILLING THE GRAPHS
	CURCOLOR=GETCOLOR()
!	X=LCORNLFT
!	DO 3,I=1,LEN-1
!	Y2=YSTEP*(XMIN-FUNC(DATA(I)))+LCORNDN
!	IF(Y2.LT.LCORNDN-1 .OR. Y.LT.LCORNDN-1)
!C     $        ISTAT=FLOODFILL(INT2(X+0.45*XSTEP),LCORNDN-1,CURCOLOR)
!c     $ ISTAT=FLOODFILL(INT2(X),LCORNDN-MIN((LCORNDN-Y2)/2,INT2(1)),
!     $ ISTAT=FLOODFILL(INT2(X),LCORNDN-MIN(int((LCORNDN-Y2)/2),1),      !  Maciek
!     $ CURCOLOR)
!	X=X+XSTEP
!    3 Y=Y2
C  Closing the polygon
      ppoints(LEN+1).xcoord=LCORNLFT+IWDT
      ppoints(LEN+1).ycoord=LCORNDN
      ppoints(LEN+2).xcoord=LCORNLFT
      ppoints(LEN+2).ycoord=LCORNDN
C  Drawing      
      gresult=polygon(FILLMASK,ppoints,LEN+2)
      
      IF(StdDev)THEN
C      upper standard deviation  
	X=LCORNLFT
	Y=YSTEP*(XMIN-(DATA(1)+SDATA(1)))+LCORNDN
	ppoints(1).xcoord=X
	ppoints(1).ycoord=Y
C      I=SETWRITEMODE($GPSET)
	DO 21,I=2,LEN
	Y2=YSTEP*(XMIN-(DATA(I)+SDATA(I)))+LCORNDN
	IF(I.EQ.LEN) THEN
       ppoints(I).xcoord=LCORNLFT+IWDT
       ppoints(I).ycoord=INT2(Y2)
	ELSE
       ppoints(I).xcoord=INT2(X+XSTEP)
       ppoints(I).ycoord=INT2(Y2)
	ENDIF
	X=X+XSTEP
   21 Y=Y2
      ppoints(LEN+1).xcoord=LCORNLFT+IWDT
      ppoints(LEN+1).ycoord=LCORNDN
      ppoints(LEN+2).xcoord=LCORNLFT
      ppoints(LEN+2).ycoord=LCORNDN
C      CALL SETLINESTYLE(PS_DOT)
      CALL SETLINESTYLE(Z'AAAA')
      gresult=polygon($GBORDER,ppoints,LEN+2)
C      lower standard deviation      
	X=LCORNLFT
	Y=YSTEP*(XMIN-(DATA(1)-SDATA(1)))+LCORNDN
	ppoints(1).xcoord=X
	ppoints(1).ycoord=Y
	DO 22,I=2,LEN
	Y2=YSTEP*(XMIN-(DATA(I)-SDATA(I)))+LCORNDN
	IF(I.EQ.LEN) THEN
       ppoints(I).xcoord=LCORNLFT+IWDT
       ppoints(I).ycoord=INT2(Y2)
	ELSE
       ppoints(I).xcoord=INT2(X+XSTEP)
       ppoints(I).ycoord=INT2(Y2)
	ENDIF
	X=X+XSTEP
   22 Y=Y2
      ppoints(LEN+1).xcoord=LCORNLFT+IWDT
      ppoints(LEN+1).ycoord=LCORNDN
      ppoints(LEN+2).xcoord=LCORNLFT
      ppoints(LEN+2).ycoord=LCORNDN
      CALL SETLINESTYLE(Z'AAAA')
      I=SETWRITEMODE($GXOR)
      gresult=polygon($GBORDER,ppoints,LEN+2)
      I=SETWRITEMODE($GPSET)
C      CALL SETLINESTYLE(PS_SOLID)
      CALL SETLINESTYLE(Z'FFFF')
      ENDIF
      
      if(ZerBoot)THEN
        scolor2=SETCOLOR($RED)
	  Y2=YSTEP*(XMIN-FUNC(ZWYN))+LCORNDN
        CALL MOVETO(INT2(LCORNLFT),INT2(Y2),XY)
        gresult=LINETO(INT2(LCORNLFT+IWDT),INT2(Y2))
        gresult=SETCOLOR(scolor2)
      ENDIF
	IF(WrtMax.AND.(BXMAX.GT.XMAX.OR.XMAX.GT.1.))THEN
	 ISTAT=SETWRITEMODE($GXOR)
C	 ISTAT=SETFONT("t'modern'h10w5")
	 ISTAT=SETFONT("t'Arial'h10w5")
	 CALL MOVETO(INT2(LCORNLFT+3),INT2(3),XY)
	 WRITE(NUMB,'(G9.4)')BXMAX
!	 CALL OUTGTEXT(NUMB)          ! Max value in every cell
	 ISTAT=SETWRITEMODE($GOR)
	ENDIF 
	gresult=SETCOLOR(CURCOLOR)

C     SETVIEWPORT(x1,y1,x2,y2)

	RETURN
	END                                          


	SUBROUTINE CSETUP(KN) 
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
	INCLUDE 'MAX.INC'
      INCLUDE 'MULTAR.INC'	
C      PARAMETER (MAXAR=20,MCHANS=ICHMAX,MNPTS=33,MKN=6,IFADNR=4)
C MAXAR  - MAXIMAL AR MODEL ORDER
C MCHANS - MAXIMAL NUMBER OF CHANNELS (SOME SUBROUTINES
C          REQUIRE WORKARRAY)
C MNPTS  - NUMBER OF CALCULATION POINTS IN FREQUENCY DOMAIN (POWER SP)
C MKN    - NUMBER OF FUNCTIONS CALCULATED IN AR_SPECT
C IFADNR - NUMBER OF FAD PARAMETERS (B,BETA,OMEGA,FI)
C      PARAMETER (INTBMX=10)
C INTBMX - MAXIMAL NUMBER OF BORDERS OF DTF INTEGRATION RANGES
	LOGICAL WHICH(MKN+1)
	COMMON /COHPAR/ WHICH,RMINF,RMXF
	COMMON/FLDES/ NG,NA,NC,ND,NF,NL,NR,IS,IBUF(1)
	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(1)

	RMXF = 5D-1*DBLE(IS)
	RMINF=  0D0
	DO 1,INDX=1,KN
    1 WHICH(INDX)=.TRUE.             ! SET ALL FUNCTIONS TO CALCULATE
	RETURN
	END
	
	FUNCTION FINDMAXSPECT(WYN,NPTS,ICHANS,KN,INDX1,INDX2,FUNC,MODE)
	REAL WYN(NPTS,ICHANS,ICHANS,KN)
	COMPLEX VALUE
	EXTERNAL FUNC
C MODE=0 max of the whole matrix
C MODE=1 max of the diagonal elements	
C MODE=2 max of the off-diagonal elements	
	IF(INDX2.EQ.0)GOTO 2
	VMAX=FUNC(CMPLX(WYN(1,1,1,INDX1),WYN(1,1,1,INDX2)))
	DO 1,II=1,NPTS
	DO 1,JJ=1,ICHANS
	DO 1,KK=1,ICHANS
	VALUE=CMPLX(WYN(II,JJ,KK,INDX1),WYN(II,JJ,KK,INDX2))
	VAL2=FUNC(VALUE)
	IF(VAL2.GT.VMAX)VMAX=VALUE
    1 CONTINUE
	FINDMAXSPECT=VMAX
	RETURN
2     SELECTCASE(MODE)
      CASE(0)
        FINDMAXSPECT=FUNC(MAXVAL(WYN(:,:,:,INDX1))) ! Maybe a shortcut, but...
      CASE(1)
        VV=FUNC(MAXVAL(WYN(:,1,1,INDX1)))
        DO 11,II=2,ICHANS
        VV2=FUNC(MAXVAL(WYN(:,II,II,INDX1)))
        IF(VV2.GT.VV)VV=VV2
11      CONTINUE
        FINDMAXSPECT=VV
      CASE(2)
        VV=FUNC(WYN(1,1,2,INDX1))
        DO 12,II=1,ICHANS
        IF(II.LT.ICHANS)THEN
            VV2=FUNC(MAXVAL(WYN(:,II,(II+1):ICHANS,INDX1)))
            IF(VV2.GT.VV)VV=VV2
        ENDIF
        IF(II.GT.1)THEN
            VV2=FUNC(MAXVAL(WYN(:,II,1:(II-1),INDX1)))
            IF(VV2.GT.VV)VV=VV2
        ENDIF    
12      CONTINUE
        FINDMAXSPECT=VV
      ENDSELECT
      RETURN
	END  

	SUBROUTINE BOXMAP2D(IXPOS,IYPOS,IWDT,IHGT,DAT,LENX,LENY,ZMIN,ZMAX)
	USE IFQWIN
	INCLUDE 'FGRAPH.FD'
	DIMENSION DAT(LENX,LENY)
	REAL DAT,D,VMIN,VMAX,ZMIN,ZMAX
	INTEGER*2 CURCOLOR,IGRES,IX1,IX2,IY1,IY2,SAVCOLOR,IXPOS,IYPOS,IWDT,IHGT
	INTEGER*4 CURCOLORRGB

	integer*2 gresult

C     SETVIEWPORT(IX,IY-IHGT,IX+IWDT,IY)
!	VMIN=DAT(1,1)
!	VMAX=VMIN
!	DO 1,INDX=1,LENX
!	DO 1,INDY=1,LENY
!	D=DAT(INDX,INDY)
!	IF(D.GT.VMAX)VMAX=D
!	IF(D.LT.VMIN)VMIN=D
!    1 CONTINUE
      IF(ZMIN.EQ.ZMAX)THEN
        VMAX=MAXVAL(DAT)
        VMIN=MINVAL(DAT)
	  IF(VMIN.EQ.VMAX)VMAX=VMIN+1.0
	  VSPAN=VMAX-VMIN
	ELSE
	  VMAX=ZMAX
	  VMIN=ZMIN
	ENDIF
	VSPAN=VMAX-VMIN
	VSTEP=255./VSPAN
	
	LCORNLFT=0
	LCORNDN=IHGT
	XSTEP=FLOAT(IWDT)/FLOAT(LENX)
	YSTEP=FLOAT(IHGT)/FLOAT(LENY)

      SAVCOLOR=GETCOLOR()
      I=SETWRITEMODE($GPSET)
	X1=LCORNLFT
	IX1=INT2(X1)
      Do 10,IX=1,LENX
	  X2=XSTEP*IX+LCORNLFT
	  IX2=INT2(X2)
	  Y1=LCORNDN
	  IY1=INT2(Y1)
	  DO 2,IY=1,LENY
	      Y2=-YSTEP*IY+LCORNDN
	      IY2=INT2(Y2)
	      D=DAT(IX,IY)
	      if(D.GT.VMAX)D=VMAX
	      if(D.LT.VMIN)D=VMIN
	      ICOLOR=255-(D-VMIN)*VSTEP
	      ICOLOR=ICOLOR+ISHFT(ICOLOR,8)+ISHFT(ICOLOR,16)
C	      CURCOLOR=SETCOLOR(INT2(256-(D-VMIN)*VSTEP))
	      CURCOLORRGB=SETCOLORRGB(ICOLOR)
	      IGRES=RECTANGLE($GFILLINTERIOR,IX1,IY1,IX2,IY2)
	      Y1=Y2
2           IY1=INT2(Y1)
        X1=X2
        IX1=INT2(X1)
10    CONTINUE    

C     SETVIEWPORT(x1,y1,x2,y2)
      CURCOLOR=SETCOLOR(SAVCOLOR)

	RETURN
	END                                          

	SUBROUTINE SDTF1PLOT(WYN,NPTS,ICHANS,KN,IORD,IRS,IRE,ICS,ICE,IWNMAX,
     $                     CLABEL,ICRN)
c	use ifcore
	use ifqwin    ! Maciek
	include 'fgraph.fd'
      include 'flib.fd'
      INCLUDE 'MULTAR.INC'
	REAL WYN(NPTS,ICHANS,ICHANS,IWNMAX,*)
	CHARACTER*1 key
	CHARACTER*20 FNNAME(MKN)
	LOGICAL WHICH(MKN+1)
	CHARACTER*24 CLABEL(ICHANS)
	CHARACTER*24 INPFIL
	CHARACTER*3  ARORD,SRECN*4
	CHARACTER*10 SFMIN,SFMAX
	RECORD /XYCOORD/ XY    !  Maciek
	COMMON /DEV/ ITI
	COMMON /COHPAR/ WHICH,RMINF,RMXF
	DOUBLE PRECISION RMINF,RMXF
	COMMON /ARERR/ IERR
	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(1)
	COMMON/FLDES/ NG,NA,NC,NP,NF,NL,NR,IS,IBUF(1)
	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(1)
	COMMON/STDFIL/INPFIL
	INTRINSIC ABS
	REAL DAT[ALLOCATABLE](:,:)
	DATA FNNAME /'Power spectra','(im)','Cohs: ord.mult.part.','(im)',
     1'DTFs','V','Not normalized DTF','direct DTF'/
      INTEGER*2 IIPOS,IIY,IXPOS,IYPOS,IHGH,IWDT,MAXX,MAXY
      CHARACTER*30 ADDTXT(6)
      COMMON /PLTXT/ ADDTXT
      LOGICAL EndPlot,CMMP,WTK

	IF(IERR.NE.0)RETURN                   
	ENDPLOT=.FALSE.
	WTK=.FALSE.         ! Sprawdzic co to w ogole jest
	CALL GRAPHMODE_ON(MAXX,MAXY,NTR,NTC,NBBP,NCOLOR,0)
	IF(IERR.NE.0)RETURN
	IROWS=IRE-IRS+1
	ICOLS=ICE-ICS+1
	ISIZE=MAX(IROWS,ICOLS)
	IHGH = INT((MAXY-8)/ISIZE)
	IWDT = IHGH
	IXM = 8
	WRITE(ARORD,'(I3)')IORD
	WRITE(SFMIN,'(F8.2)')RMINF
	WRITE(SFMAX,'(F8.2)')RMXF
C	WRITE(SRECN,'(I4)')KNT
	WRITE(SRECN,'(I4)')ICRN

	INDX=0
	IK=0
      IK=KN
	IF(IK.GT.MKN)GOTO 3
	IF(.NOT.WHICH(IK))RETURN
	IF(IK.EQ.2.OR.IK.EQ.4)RETURN
	ALLOCATE(DAT(NPTS,IWNMAX),STAT=ierr)
    4 DO 2,IROW=IRS,IRE
	DO 2,ICOL=ICS,ICE
!      if(peekcharqq())then    ! interruptible display
!       key=getcharqq()
!       if(peekcharqq())then
!        key=getcharqq()
!       elseif(key.eq.'V'.or.key.eq.'v')then
!    6   call graphmode_off
!        write(iti,100)
!  100   format('$ENTER NEW MAXIMAL VALUE >'\)
!        read(5,*)othmx
!        call graphmode_on(maxx,maxy,NTR,NTC,NBBP,NCOLOR)
!        goto 4
!       endif
!       goto 5
!      endif 
	IXPOS = IWDT*(ICOL-ICS)+IXM
	IYPOS = IHGH*(IROW-IRS+1)
	CALL SETVIEWPORT(IXPOS,IYPOS-IHGH,IXPOS+IWDT,IYPOS)
!	IF(IK.EQ.1)THEN
!	 XMIN=0.0
!	 XMAX=SPECMX
!	ELSE
!	 XMIN=0.0
!C	 XMAX=0.5
!	 XMAX=othmx
!	ENDIF 
      XMIN=0.
      XMAX=1.
      IF(IK.EQ.7)XMAX=0. ! nnDTF autoscaling
	IF(IK.EQ.1.OR.IK.EQ.3)THEN
	  Do 21,INQ=1,NPTS
	  Do 21,INW=1,IWNMAX
	  WR=WYN(INQ,IROW,ICOL,INW,1)
	  WI=WYN(INQ,IROW,ICOL,INW,2)
21      DAT(INQ,INW)=SQRT(WR*WR+WI*WI)
        IF(IK.EQ.1)XMAX=0. ! pow.sp. autoscaling
	  CALL BOXMAP2D(IXPOS,IYPOS,IWDT,IHGH,DAT,NPTS,IWNMAX,XMIN,XMAX)
	ELSE
	 IF(IK.EQ.5.AND.IROW.EQ.ICOL)THEN ! POWER SPECTRA ON DTF DIAGONAL
	  CONTINUE                        ! USED TO BE...
       ELSE
	  Do 22,INQ=1,NPTS
	  Do 22,INW=1,IWNMAX
22      DAT(INQ,INW)=WYN(INQ,IROW,ICOL,INW,1)
	  CALL BOXMAP2D(IXPOS,IYPOS,IWDT,IHGH,DAT,NPTS,IWNMAX,XMIN,XMAX)
       ENDIF
	ENDIF 
      I=SETWRITEMODE($GPSET)
	CALL SETVIEWPORT(0,0,MAXX,MAXY)
	CALL SETLINESTYLE(2#1100110011001100)  ! DASHED LINE
	ISTAT=RECTANGLE($GBORDER,IXPOS,IYPOS-IHGH,IXPOS+IWDT,IYPOS)
	CALL SETLINESTYLE(2#1111111111111111)  ! SOLID LINE
	IF(IROW.EQ.IRE.OR.ICOL.EQ.ICE)THEN
C	 ISTAT=SETFONT("t'modern'h10w5")
	 ISTAT=SETFONT("t'Arial'h10w5")
	 CALL SETGTEXTVECTOR(0,1)
	 CALL MOVETO(0,IYPOS-IWDT/2+8,XY)
	 CALL OUTGTEXT(TRIM(CLABEL(IROW)(1:8)))  ! Shorter labels
	 CALL SETGTEXTVECTOR(1,0)
	 CALL MOVETO(IXPOS+IWDT/2-8,MAXY-8,XY)
	 CALL OUTGTEXT(TRIM(CLABEL(ICOL)(1:8)))  ! Shorter labels
	ENDIF
    2 CONTINUE  
C    5 ISTAT = SETFONT("t'modern'h15w7")
    5 ISTAT = SETFONT("t'Arial'h18w7")
	IIPOS=IWDT*ISIZE+IXM+8
	CALL MOVETO(IIPOS,8,XY)
	CALL OUTGTEXT('File: '//INPFIL)
	CALL MOVETO(IIPOS,24,XY)
	CALL OUTGTEXT(FNNAME(IK))
	CALL MOVETO(IIPOS,40,XY)
	CALL OUTGTEXT('AR model order: '//ARORD)
	CALL MOVETO(IIPOS,56,XY)
	CALL OUTGTEXT('Frequency range (Hz): ')
	CALL MOVETO(IIPOS,72,XY)
	CALL OUTGTEXT('  '//SFMIN(1:LEN_TRIM(SFMIN))//' - '//SFMAX(1:))
	IF(ICRN.GT.0)THEN
	  CALL MOVETO(IIPOS,104,XY)
	  CALL OUTGTEXT('Number of trials: '//SRECN)
	ENDIF
	WRITE(SRECN,'(I4)')IWNMAX
	CALL MOVETO(IIPOS,88,XY)
	CALL OUTGTEXT('Number of windows: '//SRECN)
	DO 7,IL=1,5
	IIY=104+IL*16
	CALL MOVETO(IIPOS,IIY,XY)
7	CALL OUTGTEXT(ADDTXT(IL))
c	READ(ITI,'(A)')J
!      key=getcharqq()
!      if(peekcharqq())then
!       key=getcharqq()
!      elseif(key.eq.'V'.or.key.eq.'v')then
!       goto 6
!      endif
      CALL DoPlotDTFResCMXDialog(IRS,IRE,ICS,ICE,NCHANS,ICRN,
     $                                  EndPlot,IPLOT,
     $                                  .FALSE.,WTK,
     $                                  SMAX,OTHMX)
C     CALL SETVIEWPORT(0,0,VC.NUMXPIXELS,VC.NUMYPIXELS)
	CALL CLEARSCREEN($GCLEARSCREEN)

    3 DEALLOCATE(DAT)
      CALL GRAPHMODE_OFF
    
	RETURN
	END

      SUBROUTINE WAITFORKEY
      USE IFCORE
      CHARACTER*1 KEY
      KEY=GETCHARQQ()
      RETURN
      END
      
      SUBROUTINE ASK4MAX(IROWSTART,IROWEND,ICOLSTART,ICOLEND,
     $                   NCHANS,ICRN,EndPlot,IPLOT,
     $                   CMMP,WTK)
      LOGICAL retlog,EndPlot,CMMP,WTK
      LOGICAL USEGBM
      COMMON /GBLMAX/ USEGBM,SMAX,DMAX,CURSMAX,CURDMAX

      SM=CURSMAX
      DM=CURDMAX
      CALL DoPlotDTFResCMXDialog(IROWSTART,IROWEND,ICOLSTART,ICOLEND,
     $                           NCHANS,ICRN,EndPlot,IPLOT,
     $                           CMMP,WTK,SM,DM)
      USEGBM=.TRUE.
      SMAX=SM
      DMAX=DM
      CURSMAX=SM
      CURDMAX=DM
      RETURN
      END