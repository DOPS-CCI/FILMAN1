C LINCOMB.FOR- GENERATES A MATRIX OF COEFFICIENTS FOR USER-SPECIFIED

C LINEAR COMBINATIONS OF THE INPUT CHANNELS. CURRENTLY SUPPORTED

C OPTIONS ARE: (a) RE-REFERENCING OF SCALP CHANNELS (ONLY!) TO AN 

C ALTERNATE COMMON REFERENCE, AND (b) ARBITRARILY WEIGHTED COMBINATIONS

C OF ANY OF THE INPUT CHANNELS. ANY RELABELING OF THE OUTPUT CHANNELS

C MUST BE HANDLED BY THE CALLING ROUTINE, AND NCOUT MUST BE .LE. NCIN.

	SUBROUTINE LINCOMB(MNTFIL,NCIN,NCOUT,XFM)

	CHARACTER*24 MNTFIL,ICLAB,INFIL,TEMP

	CHARACTER*5 LABELS(64)

	CHARACTER*80 LCOMB,BLANK80

	CHARACTER*1 BLANKS(80)

	CHARACTER*11 FMT  ! MODIFIABLE FORMAT FOR READING CHAN/WGHT SPECS

	DIMENSION XFM(NCIN,NCIN),ICHANS[ALLOCATABLE](:,:)

	EQUIVALENCE (BLANK80,BLANKS)

	DATA FMT/'(I1,1XF6.0)'/

	DATA BLANKS/80*' '/

	DO 50 J=1,NCIN

	DO 50 I=1,NCIN

50    XFM(I,J)=0.

	ALLOCATE (ICHANS(NCIN,2),STAT=IERR)

C OPEN THE MONTAGE FILE

	L=LEN_TRIM(MNTFIL)

	INFIL=MNTFIL(1:L)//'.MNT'

	OPEN(UNIT=22,FILE=INFIL,ERR=1)

	GO TO 5

C ERROR CONDITIONS

1     WRITE(*,'(A)') ' CAN"T OPEN MONTAGE FILE'

	RETURN

2     WRITE(*,'(A)') ' ERROR READING MONTAGE FILE'

	RETURN

5     DO 10 I=1,NCIN

	READ(22,99,ERR=2,END=10)IC,ICLAB

99    FORMAT(I2/A24)    ! TAKEN FROM EKHELM.PRM

	IF(IC.EQ.I)GO TO 8

	WRITE(*,'(A)') ' MONTAGE FILE NOT IN SEQUENCE'

	RETURN

8     CALL READLAB(ICLAB,IROW,ICOL)

	ICHANS(IC,1)=IROW

	ICHANS(IC,2)=ICOL

	LABELS(IC)=ICLAB(1:5)

10    CONTINUE

C FIND OUT WHAT TO DO

	WRITE(*,100)

100   FORMAT('$OPTION:1=RE-REFERENCING/2=OTHER RECOMBINATIONS >'\)

	READ(*,*)MODE

	WRITE(*,101)(I,LABELS(I),I=1,NCIN)

101   FORMAT(8(1XI2,'=',A5))

	GO TO(20,30)MODE

C RE-REFERENCING; NOTE THAT THE NEW REFERENCE CHANNEL IS ZEROED

20    NCOUT=NCIN

	WRITE(*,200)

200   FORMAT('$ENTER CHANNEL NUMBER OF NEW SCALP REFERENCE >'\)

	READ(*,*)NEWREF

22    DO 25 I=1,NCOUT

	XFM(I,I)=1.0

	IF(ICHANS(I,1).EQ.0)GO TO 25  ! DON'T RE-REF NON-SCALP CHANNELS

	XFM(NEWREF,I)=XFM(NEWREF,I)-1.0     ! ZEROES NEWREF

25    CONTINUE      

	GO TO 90

C ARBITRARY RECOMBINATIONS

30    WRITE(*,300)NCIN

300   FORMAT('$NUMBER OF COMBINATIONS (.LE.',I2,') >'\)

	READ(*,*)NCOUT

	IF(NCOUT.GT.NCIN)GO TO 30

	WRITE(*,301)

301   FORMAT('$ENTER EACH IN 1-LINE FORMAT:[<NC1,WT1>...<NCK,WTK>]')

	DO 60 J=1,NCOUT

31    LCOMB=BLANK80

	READ(*,'(A80)')LCOMB

C PROCESS THE STRING BACK TO FRONT

	L0=INDEX(LCOMB,']')

35    L1=L0-2

	L2=INDEX(LCOMB(1:L1),'<',.TRUE.)

	IF(L2.NE.0)GO TO 36

32    WRITE(*,'(A)') ' ERROR IN SPECIFIER; RE-ENTER IT'

	GO TO 31

36    TEMP=LCOMB(L2+1:L1)

	LL=LEN_TRIM(TEMP)

	I=INDEX(TEMP,',')

	IF(I.EQ.0)GO TO 32

	IF(INDEX(TEMP,'>').NE.0)GO TO 32

C MODIFY FORMAT FOR INTERNAL READ

	WRITE(FMT(3:3),'(I1)')I-1

	WRITE(FMT(8:8),'(I1)')LL-I

C      WRITE(*,'(1XA11)')FMT

	READ(TEMP,FMT)NC,WEIGHT

	XFM(NC,J)=WEIGHT

	L0=L2

	IF(L0.GT.2)GO TO 35     ! CHANGE IF WE CHANGE SPEC FORMAT

60    CONTINUE

90    DEALLOCATE(ICHANS)

	RETURN

	END

C ***************

C SUBROUTINE TO EXTRACT POSITION INFO FROM FILMAN LABEL FIELDS; MAY

C NEED TIGHTENING UP TO CHECK FOR IMPOSSIBLE VALUES ETC

	SUBROUTINE READLAB(CLABEL,IROW,ICOL)

	PARAMETER (NCMAX=64)

C IF NOT A SCALP CHANNEL SETS IROW, ICOL TO 0

	CHARACTER*24 CLABEL

	CHARACTER*1 ITBL(11)

	DATA ITBL/'0','1','2','3','4','5','6','7','8','9',','/

	IROW=0

	ICOL=0

	ND=0

	ID1=0

	ID2=0

	IF(CLABEL(1:1).EQ.'*')RETURN    ! (OLD CONVENTION FOR NON-SCALP)

	L=LEN_TRIM(CLABEL)

	DO 20 I=1,L

	DO 15 J=1,11

	IF(CLABEL(I:I).NE.ITBL(J))GO TO 15

5     GO TO(6,6,6,6,6,6,6,6,6,6,12)J

6     GO TO(7,8,9)ND+1

7     ID1=10*ID1+J-1

	GO TO 20

8     ID2=10*ID2+J-1

	GO TO 20

9     RETURN      ! MORE THAN 2 #'S  (?)

12    IF(ID1.NE.0)ND=ND+1

15    CONTINUE

C LAST CHARACTER WAS NOT A DIGIT OR COMMA; IF BOTH DIGITS ALREADY FOUND,

C  EXIT THE LOOP

	IF(ID2.NE.0)GO TO 25

20    CONTINUE

	IF(ID2.EQ.0)RETURN

C ROUGH CHECK FOR WILD NUMBERS

25    IF(ID1*ID2.GT.NCMAX)RETURN

	IROW=ID1

	ICOL=ID2

	RETURN

	END





