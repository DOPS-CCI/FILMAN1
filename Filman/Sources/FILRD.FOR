C FILRD.FOR- CREATES FILMAN FILE FROM TERMINAL AND EDITED EXTERNAL

C DATA FILE CONTAINING JUST DATA RECORDS (WITHOUT MANDATORY GROUP VARS).

C DATA MUST BE ORGANIZED AS A SEQUENCE OF TRIALS, EACH CONTAINING AN

C OPTIONAL LINE OF ID VALUES (GROUP VARS ABOVE #2, PLUS ANY ANCILLARY

C WORDS), FOLLOWED BY A NUMBER OF LINES EQUAL TO THE NUMBER OF SAMPLES

C PER TRIAL, EACH CONTAINING A SINGLE FRAME OF THE DATA.

	CHARACTER*1 INPFIL(64),OUTFIL(64),FMT(80),FMTG(80)

	CHARACTER*64 INFIL

	DIMENSION RDATA[ALLOCATABLE](:,:),ID(8),LAB1(12)

	COMMON/FLDESO/NG,NA,NC,ND,NF,NL,NRO,IS,IBUF(8200)

	COMMON/STDFIL/INPFIL,OUTFIL

	EQUIVALENCE (INPFIL,INFIL)

	EQUIVALENCE (ID(1),NG),(X,IX)

	DATA LAB1/'CHAN',' NUM','BER ',3*'    ',

     +          'MONT','AGE ','FILE',3*'    '/

	DATA IYES/'Y'/

	ITI=5

2       WRITE(ITI,101)

101     FORMAT('$# GROUP VARS(INCLUDING MANDATORY GROUPS 1 & 2) >'\)

	READ(ITI,*)NG

C      WRITE(ITI,103)

C103   FORMAT('$# ANCILLARY WORDS >'\)

C      READ(ITI,*)NA

	NA=0

	WRITE(ITI,104)

104     FORMAT('$# CHANNELS TO READ>'\)

	READ(ITI,*)NC0

	NC=NC0

	IDC=0

	IF(NC0-1)6,6,7

6       WRITE(ITI,1041)

1041    FORMAT('$DUPLICATE INPUT CHANNEL? >'\)

	READ(ITI,301)IANS

	IF(IANS.NE.IYES)GO TO 7

	IDC=1

	NC=2

7       WRITE(ITI,105)

105     FORMAT('$# DATA POINTS >'\)

	READ(ITI,*)ND

	WRITE(ITI,107)

107   FORMAT('$OUTPUT DATA FORMAT(1=INTEGER/2=REAL) >'\)

	READ(ITI,108)AF

108     FORMAT(bz,F6.0)

	NF=AF

C ABOVE USED TO FORCE 'F' CONVERSION ROUTINE INTO LOAD MODULE

	NID=NG+NA

	ND1=NID+1

	NL=NG+NA+ND

	IF(NF.EQ.2)NF=3

30      WRITE(ITI,116)

116     FORMAT('$SAMPLING RATE(TIME DATA) OR MAX FREQ(SPECTRA) >'\)

	READ(ITI,*)IS

	IF(NID.EQ.2)GO TO 35

	WRITE(ITI,1153)

1153  FORMAT(' ENTER 1-LINE FORMAT FOR ID VARS')

	READ(ITI,1152)(FMTG(I),I=1,80)

35    WRITE(ITI,1151)

1151  FORMAT(' ENTER 1-LINE FORMAT FOR SINGLE DATA FRAME') 

	READ(ITI,1152)(FMT(I),I=1,80)

1152    FORMAT(80A1)

	WRITE(ITI,109)

109     FORMAT(' INSERT ID TEXT(6 LINES)')

	READ(ITI,111)(IBUF(I),I=1,108)

111     FORMAT(18A4)

	CALL PUTOPN

	CALL PUTSTD(ID)

	DO 4 I=1,12

4       IBUF(I)=LAB1(I)

	J=13

	L=18

	IF(NG-2)50,50,60

60      DO 40 I=3,NG

	WRITE(ITI,112)I

112     FORMAT('$ENTER LABEL FOR GROUP VAR ',I2,' >'\)

	READ(ITI,113)(IBUF(K),K=J,L)

113     FORMAT(6A4)

	J=J+6

40      L=L+6

50      DO 70 I=1,NC

	WRITE(ITI,114)I

114     FORMAT('$ENTER LABEL FOR CHANNEL ',I2,' >'\)

	READ(ITI,113)(IBUF(K),K=J,L)

	J=J+6

70      L=L+6

	CALL PUTSTD(IBUF)

	ALLOCATE(RDATA(ND,NC0),STAT=IERR)

	NRO=0

C HEADERS FINISHED; NOW READ DATA FROM EXTERNAL FILE

71      WRITE(ITI,115)

115     FORMAT('$NAME OF EXTERNAL INPUT FILE? >'\)

	READ(ITI,120)INFIL

120     FORMAT(A)

	OPEN(UNIT=21,FILE=INFIL,STATUS='OLD',ERR=77)

	GO TO 75

77    WRITE(*,*)'CAN"T OPEN THIS FILE'

	GO TO 71

76    WRITE(ITI,121)

121     FORMAT(' ERROR READING DATA')

	GO TO 90

75    IF(NID.EQ.2)GO TO 78      

	READ(21,FMTG,ERR=76,END=90)(IBUF(I),I=3,NID)

78    DO 25 I=1,ND

	READ(21,FMT,ERR=76,END=90) (RDATA(I,J),J=1,NC0)

25    CONTINUE

C DATA FOR THIS TRIAL IN; NOW MAKE OUTPUT RECORDS

	DO 80 IC=1,NC

	IBUF(1)=IC

	IBUF(2)=0

	IF(IC*IDC-1)26,26,80

26      K1=ND1

	DO 73 I=1,ND

	X=RDATA(I,IC)

	IF(NF.EQ.3)GO TO 79

	IBUF(K1)=INT4(X)        ! LATER WE CAN PACK THE INTEGERS

	GO TO 73

79    IBUF(K1)=IX

73      K1=K1+1

80      CALL PUTSTD(IBUF)

	GO TO 75

90      CLOSE(UNIT=21)

	WRITE(ITI,200)

200     FORMAT('$ANY MORE INPUT FOR THIS OUTPUT FILE? >'\)

	READ(ITI,301)IANS

	IF(IANS-IYES)95,71,95

95      CALL PUTEND

	DEALLOCATE(RDATA)

	WRITE(ITI,300)

300     FORMAT('$ANY MORE FILRDS? >'\)

	READ(ITI,301)IANS

301     FORMAT(A1)

	IF(IANS-IYES)501,2,501

501     STOP  

	END



