C POWSP2.FOR- EXTRACTS 2 EQUAL-LENGTH TIME SERIES FROM EACH CHANNEL

C RECORD (E.G., BEFORE-TRIAL & DURING-TRIAL SEGMENTS), 

C COMPUTES THEIR POWER SPECTRA, AND OUTPUTS RATIO OF SECOND-SEGMENT

C TO FIRST-SEGMENT INTENSITIES IN DB. TAPERING AND TRUNCATION INCLUDED.

C AUTOMATIC DETRENDING OF INPUT DATA ADDED 3/95.

	SUBROUTINE POWSP2

      INCLUDE 'MAX.INC'

	DIMENSION IX(2),WORK(IOMAX-120),WK1((IOMAX-120)/2),WK2((IOMAX-120)/2)

	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(ICHMAX)

	COMMON /FLDES/NG,NA,NC,ND,NF,NL,NR,IS,IBUF(IOMAX)

	COMMON/FLDESO/NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(IOMAX)

	INTEGER*4, SAVE :: NXFM,IT,NID,J1,IFF,IL,IOUT,IO1

	REAL*4, SAVE :: ANPO

	EQUIVALENCE (X,IX(1)),(IX(1),IX1),(IX(2),IX2)

	EQUIVALENCE (WORK,IBUFO(121)),(WK1,WORK),(WK2,WORK((IOMAX-120)/2+1))
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME

C EQUIVALENCE ALLOWS 120 WORDS FOR NGO+NAO- WE DON'T CHECK

	IF(IFLAG1)1,20,60

1     NFO=3
      CURPROCNAME='POWSP2'

	NID=NGO+NAO

	IO1=121-NID  ! POINTS TO FIRST WORD OF OUTPUT RECORD

C MOVE CHANNEL LABELS

	J=6*NGO+109

	DO 12 I=1,NCO

	L=J+5

	K=6*(NG+ICHAN(I))-5

	DO 10 I1=J,L

	IBUFO(I1)=IBUF(K)

10    K=K+1

12    J=J+6

C PARTITION INPUT TIME SERIES

	NPO=NDO
	
	fnyq=float(is)*0.5
	iff=1
	il=npo

13    CONTINUE
      CALL DoPOWSP2Dialog(NPO,IFF,IL,IOUT,IT,FMAX,FNYQ)

!      WRITE(*,100)NPO
!
!100   FORMAT('INPUT SERIES SELECTED HAS ',I4,' POINTS;'/
!
!     1  'ENTER FIRST PT AND # OF PTS FOR FIRST SEGMENT >'\)
!
!	READ(*,*)IFF,IL

	IF(2*IL-NPO)5,5,4

4     CONTINUE
!      WRITE(*,99)
!
!99    FORMAT('TOO MANY PTS REQUESTED; REENTER SPECS'/)
      Call ShowInfoText('Error','TOO MANY PTS REQUESTED; REENTER SPECS')

	GO TO 13

C COULD CHECK FOR POWER OF 2 HERE

5     NXFM=IL

	ISZ=120+2*(NXFM+2)

!	WRITE(*,103)
!
!103   FORMAT('OUTPUT TYPE:1=DIFFERENCES/2=RATIOS(DB) >'\)
!
!	READ(*,*) IOUT
!
!	WRITE(*,102)
!
!102   FORMAT('TAPERING:0=NONE/1=HANN? >'\)
!
!	READ(*,*) IT

	IT=IT+1

	FNYQ=FLOAT(IS)/2.0

7     CONTINUE
!      WRITE(*,104)FNYQ
!
!104   FORMAT('INTEGER FREQUENCY CUTOFF(.LE.',F6.0,') >'\)
!
!	READ(*,105)FMAX
!
!105   FORMAT(F6.0)

	IF(FMAX.EQ.0.0)FMAX=FNYQ

	DF=FLOAT(IS)/FLOAT(NXFM)

	ISO=FMAX

	NDO=FMAX/DF + 1

	ANPO=NDO-1

	RETURN

	

C RUNNING SECTION; FIRST COPY INPUT SEGMENTS TO WORK AREAS

20    J=1

	DO 25 I=IFF,IFF+IL-1

	CALL XVAL(I,XV,XI)

	WK1(J)=XV

	CALL XVAL(I+IL,XV,XI)

	WK2(J)=XV

25    J=J+1

C DO TRANSFORMS AFTER REMOVING OFFSET AND TREND FROM EACH SEGMENT

	CALL DETRND(WK1,NXFM,2)

	CALL DETRND(WK2,NXFM,2)

	CALL FAST(WK1,NXFM)

	CALL FAST(WK2,NXFM)

C CALCULATE SPECTRA

	K=1

	DO 30 I=1,NDO

	WK1(I)=WK1(K)**2 + WK1(K+1)**2

	WK2(I)=WK2(K)**2 + WK2(K+1)**2

30    K=K+2

C SMOOTH IF REQUESTED( THIS IS AWKWARD & SHOULD BE INTEGRATED

C WITH FOLLOWING LOOP TO AVOID ALL THE IN-PLACE SHUFFLING)

	GO TO (40,31) IT

31    TMP1=WK1(1)

	TMP2=WK2(1)

	DO 35 I=2,NDO-1

	X=.5*WK1(I) + .25*(TMP1 + WK1(I+1))

	TMP1=WK1(I)

	WK1(I)=X

	Y=.5*WK2(I) + .25*(TMP2 + WK2(I+1))

	TMP2=WK2(I)

35    WK2(I)=Y

C COMPUTE CHANGES, STORING THEIR AVERAGE IN DC TERM

40    XTOT=0.0

	DO 45 I=2,NDO

	GO TO (41,42) IOUT

41    X=WK2(I)-WK1(I)

	GO TO 43

42    X=10.0*(LOG10(FLR(WK2(I)))-LOG10(FLR(WK1(I))))

43    WK1(I)=X

45    XTOT=XTOT + X

	WK1(1)=XTOT/ANPO

C COPY ID INFO & WRITE RECORD

	J=IO1

	DO 50 I=1,NID

	IBUFO(J)=IBUFO(I)

50    J=J+1

	CALL PUTSTD(IBUFO(IO1))

60    RETURN

	END

	

C FUNCTION TO ASSURE NO NASTY LOGS

	REAL FUNCTION FLR(X)

	FLR=X

	IF(X.LT.1.0) FLR=1.0

	RETURN

	END



