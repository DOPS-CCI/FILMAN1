C FILCNV.FOR-  PROGRAM TO CONVERT 16-BIT FILMAN FILES TO 32-BIT FORM.

C  FOR INTEGER INPUT, THE OUTPUT IS PACKED.

	PARAMETER (IOMAX=8200) ! MAX SIZE OF OLD INPUT/OUTPUT RECORDS

	DIMENSION ID(8),IDO(8)

	INTEGER*2 COUNT,CNTFLG,DUMMY(512),JREC1,IHDR1(116)

	INTEGER*2 NG,NA,NC,ND,NF,NP,NR,IS,IBUF,ID,JJ(2),JJ1,JJ2

	INTEGER*4 COUNT2,CNT2FG,DUM2(512),JREC2

	CHARACTER*64 INPFIL,OUTFIL

	CHARACTER*1 IYES,IIYES,INO,IINO,IANS

	CHARACTER*2 A,B

	COMMON IFLAG1

	COMMON/FLDES/ NG,NA,NC,ND,NF,NP,NR,IS,IBUF(IOMAX)

	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NPO,NRO,ISO,IBUFO(IOMAX)

	COMMON/STDFIL/INPFIL, OUTFIL

	COMMON/CNTR1/ COUNT,CNTFLG,DUMMY,JREC1

	COMMON/CNTR2/ COUNT2,CNT2FG,DUM2,JREC2

	EQUIVALENCE (IHDR1(1),NG),(ID(1),NG),(IDO(1),NGO)

	EQUIVALENCE (IJ,JJ(1)),(JJ(1),JJ1),(JJ(2),JJ2)

	DATA IYES,IIYES,INO,IINO/'Y','y','N','n'/
	
	character*2 cibuf(iomax)
	character*4 cibufo(iomax)
	equivalence (ibufo,cibufo)
	equivalence (ibuf,cibuf)            ! Maciek

	ITI=6

C  IDENTIFY INPUT FILE AND READ FIRST HEADER

100   CALL GETOPN

C*****************************

C*  ADDED 3-16-95 TO TRANSLATE REAL PDP-11 FORMAT TO 

C   PC FORMAT (SWITCH HIGH AND LOW WORD)

C*****************************

	rtflag=0   !IF RTFLAG=1 THEN FILE IS OLD PDP-11 FORMAT

	WRITE(ITI,2102)

2102   FORMAT('$RT-11 FILE?(y/N)>'\)

	READ(ITI,1103) IANS

	IF(IANS.NE.'y' .AND. IANS.NE.'Y')GO TO 2103  

	rtflag=1

2103   continue      

C*****************************

	CALL GETSTD(IHDR1)  

	WRITE(ITI,920)(IBUF(I),I=1,108)

920   FORMAT(1H,36A2)        

	WRITE(ITI,1102)

1102  FORMAT('$FILE OK?(Y/N)>'\)

	READ(ITI,1103) IANS

1103  FORMAT(A1)

	IF(IANS.NE.INO .AND. IANS.NE.IINO)GO TO 189  

	CALL GETEND

	GO TO 100

189   DO 190 I=1,8

190   IDO(I)=ID(I)

	NID=NG+NA      

	GO TO(1,1,2)NF

1     NFO=2

	NPO=NGO+NAO+(NDO+1)/2

	GO TO 5

2     NPO=NGO+NAO+NDO

C COPY ALL THREE LINES OF INPUT TEXT TO OUTPUT BUFFER

5     J=1

	DO 101 I=1,54

!	A=IBUF(J)
!
!	B=IBUF(J+1)
!
!	J=J+2
!
!101   IBUFO(I)=A//B

	A=cIBUF(J)

	B=cIBUF(J+1)

	J=J+2

101   cIBUFO(I)=A//B          ! Maciek

C READ REMAINING LINES, IF ANY, FOR NEW OUTPUT FILE

	WRITE(ITI,1003)

1003  FORMAT(' INSERT ADDITIONAL ID TEXT(3 LINES)')

	READ(ITI,1004)(IBUFO(I),I=55,108)

1004  FORMAT(18A4)

C READ SECOND HEADER WITH GROUP-VAR AND CHANNEL LABELS

	CALL GETSTD(IBUF)

	IF(NG) 102,102,103

102   WRITE(ITI,1002)

1002  FORMAT(' ERROR: FILE NOT IN STANDARD FORMAT')

	CALL GETEND

	GO TO 100

103   NLAB=NG+NC

	J=109

	I=1

	DO 140 L=1,NLAB

	DO 120 K=1,3      ! FIRST 12 CHARS OF OUTPUT LABEL COME FROM IBUF

C	IBUFO(J)=IBUF(I)//IBUF(I+1)
	cIBUFO(J)=cIBUF(I)//cIBUF(I+1)   ! Maciek

	I=I+2

120   J=J+1

	DO 130 K=4,6      ! LAST 12 CHARS OF OUTPUT LABEL ARE BLANK

c	IBUFO(J)='    '
	cIBUFO(J)='    '             ! Maciek

130   J=J+1

140   CONTINUE

C set up output file and write first two headers

	CALL PUTOPN

	CALL PUTSTD(IDO)

	CALL PUTSTD(IBUFO(109))

c everything set up; enter processing phase

	NRO=0

	DO 300 K=1,NR

	CALL GETSTD(IBUF)

C FIRST GET THE ID VARS      

	I=1

	DO 210 J=1,NID

	IBUFO(I)=IBUF(J)

210   I=I+1                   ! KEEP 'I' GOING

	DO 275 J=NID+1,NP,2

	IF(NFO.EQ.3)GO TO 225   ! FOR REAL DATA

C FOR INTEGER DATA PACK THE DATA SAMPLES 2/DWORD      

	CALL PACK(INT4(IBUF(J)),INT4(IBUF(J+1)),IBUFO(I))

	GO TO 250

225   CONTINUE 

	IF(RTFLAG.EQ.0) THEN

	 JJ1=IBUF(J)

	 JJ2=IBUF(J+1)

	ELSE  

	 JJ2=IBUF(J)  !PDP-11 REAL'S NEED THE HIGH AND LOW WORD SWITCHED

	 JJ1=IBUF(J+1)

	ENDIF

	IBUFO(I)=IJ

250   I=I+1

275   CONTINUE

300   CALL PUTSTD(IBUFO)

	CALL GETEND

	CALL PUTEND

	WRITE(ITI,1021) NRO

1021  FORMAT(' NUMBER OF OUTPUT RECORDS=',I6)

	GO TO 100

	END



C STDIO.FOR- OLD 16-BIT VERSION USING FORTRAN 5.1 OF FILMAN'S

C STANDARD I/O FOR FILMAN, SPECTR & MANOVA.

	

	

	SUBROUTINE GETOPN

	CHARACTER*64 INFIL,INBUF,OUTFIL

	COMMON/STDFIL/INFIL,OUTFIL

	COMMON/CNTR1/ COUNT,CNTFLG,DUMMY,JREC

	INTEGER*2 COUNT,DUMMY(512),CNTFLG,JREC

10    WRITE(*,900)

900   FORMAT('$FILCNV INPUT FILE(Q=QUIT) >',\)

	READ(*,905)INBUF

905   FORMAT(A)

	IF(LEN_TRIM(INBUF)-1)15,16,11

11    INFIL=INBUF

15    OPEN(UNIT=21,FILE='C:\EEGDATA\'//INFIL,STATUS='OLD',ERR=20,

     1  ACCESS='DIRECT',RECL=1024,BLOCKSIZE=1024) 

	GO TO 50

16    IF(INBUF.EQ.'Q' .OR. INBUF.EQ.'q')STOP

20    WRITE(*,901)

901   FORMAT(' ERROR: UNABLE TO OPEN FILE; TRY AGAIN')

	GO TO 10

50    COUNT=0

	RETURN

	END

C ***********************************************************

	SUBROUTINE GETSTD(BUF)

	COMMON/CNTR1/ COUNT,CNTFLG,DUMMY,JREC

	INTEGER*2 BUF(1),COUNT,CNTFLG,DUMMY(512),JREC

	IF(COUNT-1)1,2,3

C read 1st header 

1     COUNT=COUNT+1

	JREC=1

	READ(21,REC=JREC)DUMMY

	DO 10 J1=1,116

	BUF(J1)=DUMMY(J1)

10    CONTINUE

	NG=BUF(1)

	NC=BUF(3)

	NW=6*(NG+NC)

	NL=BUF(6)

	CNTFLG=117

	return

2     COUNT=COUNT+1

C read 2nd header, NW words of labels

	CALL FILBUF(BUF,NW)

	return

C read DATA RECORD OF NL words

3     CALL FILBUF(BUF,NL)

	return

	end

C *************************************************

	SUBROUTINE FILBUF(BUF,NW)

	COMMON/CNTR1/ COUNT,CNTFLG,DUMMY,JREC

	INTEGER*2 COUNT,DUMMY(512),CNTFLG,BUF(1),JREC

	DO 100 J1=1,NW

	BUF(J1)=DUMMY(CNTFLG)

	CNTFLG=CNTFLG+1

	IF (CNTFLG.LE.512)GOTO 100

	CNTFLG=1

	JREC=JREC+1

c	READ(21,REC=JREC,END=200)DUMMY
	READ(21,REC=JREC,ERR=200,iostat=iostat)DUMMY  ! Maciek

100   CONTINUE

200   RETURN

	END

C **********************************************

	SUBROUTINE GETEND

	COMMON/CNTR1/ COUNT,CNTFLG,DUMMY,JREC

	INTEGER*2 COUNT,DUMMY(512),CNTFLG,JREC

	COUNT=0

	CLOSE(UNIT=21)

	RETURN

	END

C ******************************************

C *******************************************

C STDIO.FOR- STANDARD I/O FOR FILMAN, SPECTR & MANOVA; 

C PC POWERSTATION FORTRAN VERSION OF OUTPUT ROUTINES

	

	SUBROUTINE PUTSTD(BUFO)

	COMMON/FLDESO/IDO(8)

	COMMON/CNTR2/COUNT,CNTFLG,DUMMY,JREC      

	INTEGER*4 COUNT,CNTFLG,DUMMY(512),BUFO(1) 

	IF(COUNT-1)1,2,3

C write 1st header

1     COUNT=COUNT+1

	JREC=1

	DO 10 J1=1,116

	DUMMY(J1)=BUFO(J1)

10    CONTINUE

	NG=BUFO(1)

	NC=BUFO(3)

	NW=6*(NG+NC)

	NL=BUFO(6)

	CNTFLG=117

	RETURN

C write 2nd header

2     COUNT=COUNT+1

	CALL STOBUF(BUFO,NW)

	RETURN

C store NL words

3     CALL STOBUF(BUFO,NL)

C update count of data records written

	IDO(7)=IDO(7)+1

	return

	end

C ********************************************

	SUBROUTINE STOBUF(BUFO,NW)

	COMMON/CNTR2/COUNT,CNTFLG,DUMMY,JREC 

	INTEGER*4 COUNT,DUMMY(512),CNTFLG,BUFO(1)

	DO 100 J1=1,NW

	DUMMY(CNTFLG)=BUFO(J1)

	CNTFLG=CNTFLG+1

	IF (CNTFLG.LE.512)GOTO 100   

	CNTFLG=1

	WRITE(22,rec=JREC,ERR=5,IOSTAT=IOCHECK)DUMMY

	JREC=JREC+1

100   CONTINUE

	RETURN

5     WRITE(*,501)COUNT,CNTFLG,JREC,IOCHECK

501   FORMAT(' COUNT,CNTFLG,JREC,IOCHECK=',4I6)

	STOP ' STOBUF ERROR'

	END

C **********************************************

	SUBROUTINE PUTEND

	COMMON/FLDESO/IDO(8)

	COMMON/CNTR2/COUNT,CNTFLG,DUMMY,JREC

	INTEGER*4 COUNT,DUMMY(512),CNTFLG  

	COUNT=0

C store last block of data if neccessary

	IF (CNTFLG.EQ.1)GO TO 1

	WRITE(22,rec=JREC)DUMMY

	JREC=JREC+1

C store total # data records in NRO field of header 1

1     READ(22,rec=1)DUMMY

	DUMMY(7)=IDO(7)

	WRITE(22,rec=1)DUMMY

	CLOSE(UNIT=22)

	RETURN

	END

C **********************************************

	SUBROUTINE PUTOPN

	CHARACTER*64 INFIL,OUTFIL

	CHARACTER*1 ARESP

	COMMON/STDFIL/INFIL,OUTFIL

	COMMON/CNTR2/COUNT,CNTFLG,DUMMY,JREC

	INTEGER*4 COUNT,DUMMY(512),CNTFLG  

	COUNT=0

1     CONTINUE

	WRITE(5,900)

900   FORMAT(' Output file >',\)

	READ(5,905)OUTFIL

905   FORMAT(A)

	OPEN (UNIT=22,FILE='C:\EEGDATA\'//OUTFIL,STATUS='old',ERR=3)

	CLOSE (UNIT=22)

	WRITE (5,902)

902   FORMAT ('$File already exists - write over it?  >',\)

	READ (5,903)ARESP

903   FORMAT (A1)

	IF ((ARESP.EQ.'n').OR.(ARESP.EQ.'N')) GOTO 1

3     CONTINUE

	OPEN (UNIT=22,FILE='C:\EEGDATA\'//OUTFIL,BLOCKSIZE=2048, 

     1  ACCESS='DIRECT',RECL=2048)

	JREC=1

	RETURN

	END

C NEW SUBROUTINES TO TRANSLATE BETWEEN 2-BYTE & 4-BYTE INTEGER FORMS

c NB: PACK ASSUMES THE DATA TO LIE IN [-32768, +32767]; SEE TEST.FOR

	SUBROUTINE PACK(I1,I2,IX)

	INTEGER*2 J(2),J1,J2

	INTEGER*4 I1,I2,I3,IX

	EQUIVALENCE (J,I3),(J(1),J1),(J(2),J2)

	J1=INT2(I1)

	J2=INT2(I2)

	IX=I3

	RETURN

	END



