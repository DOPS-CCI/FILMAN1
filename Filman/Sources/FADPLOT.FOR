C FADPLOT.FOR- GRAPHICS ROUTINES WRITTEN BY M. KAMINSKI FOR DISPLAY OF
C FAD PARAMETERS IN MULTICHANNEL FORMAT. USED BY FILMAN AND SPECTR.
	include 'fgraph.fi'
	SUBROUTINE FAD_GRAPHICS(MODE,WYN,LEN,ICHANS,CLABEL,IFAD,
     $ ISTART,IXDIM,IYDIM,MAXX,MAXY,VALMX,ToPlot,ISTOP)
      USE IFQWIN
	include 'fgraph.fd'
	INCLUDE 'MULTAR.INC'
	INCLUDE 'MAX.INC'
	PARAMETER (PI=3.14159265358979323846264338328)
	REAL WYN(0:MAXAR/2+1,IFADNR+1,MCHANS)
	CHARACTER*24 CLABEL(ICHANS),LABEL
	CHARACTER*64 INPFIL
	CHARACTER*9 PARNM(IFADNR+1)
C	INTEGER*1 CHPOW2
C	DIMENSION ISTART(MCHANS,2)
	DIMENSION ISTART(ICHMAX,2)
	RECORD /XYCOORD/ XY
	EXTERNAL FADFUN1,FADFUN2
C	COMMON /DEV/ ITI
	COMMON/DEV/ITI,ILP,IGRAPH
	CHARACTER*4 SRECN*4
	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(1)
	COMMON/FLDES/ NG,NA,NC,NP,NF,NL,NR,IS,IBUF(1)
	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(1)
	COMMON/STDFIL/INPFIL
C	EQUIVALENCE (CHPOW2,PARNM(5)(2:))
c       DATA PARNM /'B','á','í','O','B*exp(-á)'/
	DATA PARNM /'B','ß','Ø','f','B²/ß'/
C	DATA PARNM /'B','?','í','O','B²/?'/
      INTEGER*2 MAXX,MAXY
      LOGICAL ToPlot(5)
      INTEGER DECISION
      CHARACTER*2 SORD
      REAL FMXVLS(5)
      COMMON /FMXVLS/ FMXVLS
	
C	CHPOW2=253    ! NO WAY TO PUT 2ND POWER SIGN DIRECTLY INTO TEXT
	WRITE(SRECN,'(I4)')KNT
	IORD=WYN(0,4,1)
	IF(IORD.GE.100)IORD=IORD-100
	WRITE(SORD,'(I2)')IORD
	IF(MODE.EQ.1.OR.MODE.EQ.0)CALL CLEARSCREEN($GCLEARSCREEN)
	IF(IFAD.EQ.0)THEN
	 IFADSTART=1
	 IFADEND=IFADNR+1
	 !FMXVLS=0.
	ELSE
	 IFADSTART=IFAD
	 IFADEND=IFAD
	ENDIF  
	DO 1,IF=IFADSTART,IFADEND
	IF(IF.EQ.4)GOTO 1
	IF(.NOT.ToPLot(IF))GOTO 1
	FMXVLS(IF)=MAX(FMXVLS(IF),FINDMAXFAD(WYN,INT(WYN(0,1,1)),ICHANS,IF))
	IF(MODE.EQ.1)THEN
	 FADMAXV=FINDMAXFAD(WYN,INT(WYN(0,1,1)),ICHANS,IF)
	ELSE
	 FADMAXV=VALMX 
	ENDIF
	DO 2,IC=1,ICHANS
	IF(WYN(0,1,IC).EQ.0.)GO TO 2   ! SKIPS EMPTY CHANNELS
	CALL SETVIEWPORT(ISTART(IC,1),ISTART(IC,2)-IYDIM,ISTART(IC,1)+
     $ IXDIM,ISTART(IC,2))
	IF(IF.EQ.3)THEN
	CALL FADGRAPH(ISTART(IC,1),ISTART(IC,2),IXDIM,IYDIM,WYN(1,IF,IC),
     $ WYN(1,4,IC),INT(WYN(0,1,IC)),WYN(0,2,IC),-PI,PI,FADFUN2,MODE)
	ELSE
	CALL FADGRAPH(ISTART(IC,1),ISTART(IC,2),IXDIM,IYDIM,WYN(1,IF,IC),
     $ WYN(1,4,IC),INT(WYN(0,1,IC)),WYN(0,2,IC),0.,FADMAXV,FADFUN1,MODE)
	ENDIF
	IF(MODE.EQ.1.OR.MODE.EQ.0)THEN
!	IF(.TRUE.)THEN
	 CALL SETVIEWPORT(0,0,MAXX,MAXY)
	 CALL SETGTEXTVECTOR(0,1)
	 LABEL=CLABEL(IC)(1:8)            ! Shorter label
	 LABLEN=LEN_TRIM(LABEL)
	 CALL MOVETO(ISTART(IC,1)-10,ISTART(IC,2)-(IYDIM-GETGTEXTEXTENT(L
     $ ABEL(1:LABLEN)))/2,XY)
	 CALL OUTGTEXT(TRIM(LABEL))
	 CALL SETGTEXTVECTOR(1,0)
	ENDIF
    2 CONTINUE
	IF(MODE.EQ.1)THEN
	 WRITE(IGRAPH,*)TRIM(PARNM(IF))//' FAD parameter - File: '
     $  //TRIM(INPFIL)//', Recordset '//SRECN
       WRITE(IGRAPH,*)'Model order '//SORD
C	 READ(ITI,'(A)')J
C	 READ(5,'(A)')J
!       READ(IGRAPH,'(A1)')IA
69     CALL DoFADPlotAdvanceDialog(DECISION)
       IF(DECISION.EQ.4)THEN
!        Call ShowInfoText('Info',
!     +      'Press OK to hide this window. Press ENTER when done')
        read(IGRAPH,'(A)')KEY
        GOTO 69
       ENDIF
	 CALL CLEARSCREEN($GCLEARSCREEN)
	 IF(DECISION.EQ.3)THEN
	  ISTOP=1
	  RETURN
	 ELSE
	  ISTOP=0
	 ENDIF
       IF(DECISION.EQ.2)RETURN
	ENDIF
	IF(MODE.EQ.0)THEN
        WRITE(IGRAPH,*)TRIM(PARNM(IF))//' FAD parameter - File: '
     $      //TRIM(INPFIL)
        WRITE(IGRAPH,*)'Model order '//SORD
      ENDIF 
!	IF(MODE.EQ.2)
!     $ WRITE(IGRAPH,*)TRIM(PARNM(IF))//' FAD parameter - File: '
!     $ //TRIM(INPFIL)
    1 CONTINUE
	END
	

	FUNCTION FINDMAXFAD(WYN,LEN,ICHANS,IFAD)
	INCLUDE 'MULTAR.INC'
	REAL WYN(0:MAXAR/2+1,IFADNR+1,MCHANS)
	FNYQ=WYN(0,2,1)
	XMAX=WYN(1,IFAD,1)
	DO 1,I=1,ICHANS
	LEN=INT(WYN(0,1,I))     ! CAN VARY BETWEEN CHANNELS
	DO 1,J=1,LEN
C PATCH TO PREVENT FREQUENCIES 0 & FNYQ FROM DISTORTING SCALES
	F=WYN(J,4,I)
	IF(F.EQ.0. .OR. F.EQ.FNYQ)GO TO 1
	IF(ABS(WYN(J,IFAD,I)).GT.XMAX)XMAX=ABS(WYN(J,IFAD,I))
    1 CONTINUE   
	FINDMAXFAD=XMAX
	RETURN
	END
	
	SUBROUTINE CALCBBETA(WYN,ICHANS)
C NOW IT CALCULATES I=(B**2)/BETA
	INCLUDE 'MULTAR.INC'
	REAL WYN(0:MAXAR/2+1,IFADNR+1,MCHANS)
	DO 1,I=1,ICHANS
	DO 1,J=1,INT(WYN(0,1,I))
c    1 WYN(J,5,I)=WYN(J,1,I)*EXP(-ABS(WYN(J,2,I)))
      IF(ABS(WYN(J,2,I)).EQ.0.)THEN
       WYN(J,5,I)=1.
      ELSE
       WYN(J,5,I)=(WYN(J,1,I)**2)/ABS(WYN(J,2,I))
      ENDIF
    1 CONTINUE   
	RETURN
	END 
	

	FUNCTION IASKUSR(LOW,IHIGH,TEXT,ITI)
	CHARACTER*(*) TEXT
    1 WRITE(ITI,100)TEXT
C	READ(ITI,*)IVAL
!	READ(5,*)IVAL
      IVAL=IGETVALU('(I1)')
      write(*,'(I1)')IVAL
	IF(IVAL.LT.LOW.OR.IVAL.GT.IHIGH)THEN
	 WRITE(ITI,101)
	 GOTO 1
	ENDIF
	IASKUSR=IVAL
  100 FORMAT(1H$,A\)
  101 FORMAT('$INVALID PARAMETER - TRY AGAIN')
	RETURN
	END

	SUBROUTINE FADGRAPH(LX,LY,IWDT,IHGT,DATA,POS,LEN,XRANGE,XMN,XMX,
     $                    FUN,MODE)
C MODES:
C 0 - DRAWS ONLY AXES
C 1 - DRAWS AXES AND BAR GRAPH
C 2 - DRAWS POINTS ONLY     
	INCLUDE 'FGRAPH.FD'
	DIMENSION DATA(LEN),POS(LEN)
	REAL DATA
	CHARACTER*10 NUMB,FMT
	RECORD /XYCOORD/ XY
	INTEGER*2 IX,IY
	EXTERNAL FUN
	DATA FMT /'(I2)'/
											  
	XMIN=XMN
	XMAX=XMX                                                              
	IF(XMIN.EQ.XMAX)THEN
	 XMAX=0.0
	 DO 4,I=1,LEN
	 X=FUN(DATA(I))
	 IF(X.GT.XMAX)XMAX=X
4      CONTINUE
	 XMIN=0.0
	ENDIF
	IF(XMIN.EQ.XMAX)THEN
	 XMIN=XMIN-1.
	 XMAX=XMAX+1.
	ENDIF 
	LCORNLFT=10+1
	LCORNDN=IHGT
	IF(XRANGE.EQ.0.)XRANGE=1.
	XSTEP=(IWDT-LCORNLFT-1)/XRANGE
	YSTEP=(IHGT-18)/(XMAX-XMIN)
	X=LCORNLFT
	Y=YSTEP*(XMIN-FUN(DATA(1)))+LCORNDN
	IEXP=INT(LOG10(XRANGE))
	IF(IEXP.GE.0.AND.IEXP.LE.8)WRITE(FMT(3:3),'(I1)')IEXP+1
	BASE=10**IEXP
	IXRNG=INT(XRANGE/BASE)
	IF(IXRNG.LE.3)THEN
	 BASE=BASE/10.
	 IXRNG=INT(XRANGE/BASE)
	ENDIF 
	 
C  AXIS
	IF(MODE.EQ.2)GOTO 31
	ISTAT=SETFONT("t'tms rmn'h10w5")
	CALL MOVETO(INT2(LCORNLFT),INT2(LCORNDN-18),XY)
	ISTAT=LINETO(INT2(IWDT-1),INT2(LCORNDN-18))
	CALL MOVETO(LCORNLFT-1,LCORNDN-10,XY)
	CALL OUTGTEXT('0')
	DO 1,I=0,IXRNG
	IX=LCORNLFT+XSTEP*I*BASE
	IY=LCORNDN-10
	WRITE(NUMB,FMT)INT(I*BASE)
	IF(I.NE.0.AND.(IWDT.GT.200.OR.I.EQ.IXRNG))THEN
	 IBACK=GETGTEXTEXTENT('5')*(IEXP+1)/2
	 IF(I.EQ.IXRNG.AND.IWDT.LE.200)IBACK=GETGTEXTEXTENT('5')*IEXP
	 CALL MOVETO(IX-IBACK,IY,XY)
	 CALL OUTGTEXT(NUMB) 
	ENDIF 
	CALL MOVETO(IX,IY,XY)
    1 ISTAT=LINETO(INT2(IX),INT2(IY-8))
	BASE=BASE/10.0
	IXRNG=INT(XRANGE/BASE)
	IF(IWDT.LT.2*IXRNG)GOTO 21
	DO 2,I=1,IXRNG
	IX=LCORNLFT+XSTEP*I*BASE
	CALL MOVETO(IX,IY-4,XY)
    2 ISTAT=LINETO(int2(IX),int2(IY-8))
   21 CALL MOVETO(LCORNLFT,LCORNDN-18,XY)
	ISTAT=LINETO(int2(LCORNLFT),0_2)
	CALL SETGTEXTVECTOR(0,1)
	WRITE(NUMB,'(G10.3)')XMIN
	CALL MOVETO(0,LCORNDN-18+10,XY)
	CALL OUTGTEXT(NUMB)
	WRITE(NUMB,'(G10.3)')XMAX
	CALL MOVETO(0,GETGTEXTEXTENT(NUMB(1:LEN_TRIM(NUMB))),XY)
	CALL OUTGTEXT(NUMB)
	CALL SETGTEXTVECTOR(1,0)
	IF(MODE.EQ.0)GOTO 41
C  ENTER THE FAD PARAMS      
   31 DO 3,I=1,LEN
	IX=LCORNLFT+NINT(XSTEP*POS(I))
	IY=NINT(YSTEP*(XMIN-FUN(DATA(I))))+LCORNDN-18
	IF(MODE.EQ.1)THEN
	 ISTAT=RECTANGLE($GFILLINTERIOR,
     $	               INT2(IX-1),INT2(LCORNDN-18),INT2(IX+1),INT2(IY))
	ELSE
	 ISTAT=RECTANGLE($GFILLINTERIOR,
     $	               INT2(IX-1),INT2(IY-1),INT2(IX+1),INT2(IY+1))
	ENDIF
    3 CONTINUE  
C      CALL MOVETO(IX,INT2(LCORNDN-18),XY)
C    3 ISTAT=LINETO(IX,IY)
	  
   41 IF(XMN.NE.0.)THEN  ! NOW IT IS VALID ONLY FOR 3-RD GRAPH (PHASE)
	 IY=NINT(YSTEP*XMIN)+LCORNDN-18
	 CALL MOVETO(LCORNLFT,IY,XY)
	 CALL SETLINESTYLE(2#0100010001000100)  ! DOTTED LINE
	 ISTAT=LINETO(int2(IWDT-1),int2(IY))
	 CALL SETLINESTYLE(2#1111111111111111)  ! SOLID LINE (DEFAULT)
	ENDIF 
	RETURN
	END                                          

	FUNCTION FADFUN1(X)
	FADFUN1=ABS(X)
	RETURN 
	END
	
	FUNCTION FADFUN2(X)
	PARAMETER (PI=3.14159265358979323846264338328)
	FADFUN2=X
	RETURN
	END
		

		

