      SUBROUTINE SPIIRD(IFILT,IBAND,NS,LS,F1,F2,F3,F4,DB,B,A,IERROR)

C-LATEST DATE: 09/25/86

C-IIR LOWPASS, HIGHPASS, BANDPASS, AND BANDSTOP DESIGN OF CHEBYSHEV 1,

C-  CHEBYSHEV 2, AND BUTTERWORTH DIGITAL FILTERS IN CASCADE FORM.

C-IFILT=1(CHEB1-PASSBAND RIPPLE), 2(CHEB2-STOPBAND RIPPLE), OR 

C-      3(BUTTERWORTH-NO RIPPLE).

C-IBAND=1(LOWPASS), 2(HIGHPASS), 3(BANDPASS), OR 4(BANDSTOP).

C-NS   =NUMBER OF SECTIONS IN CASCADE.

C-LS   =ORDER OF EACH SECTION: USUALLY 2(IBAND=1,2) OR 4(IBAND=3,4).

C-F1-F4=FREQ. IN HZ-SEC. (SAMPLING FREQ.=1.0) AS IN PLOTS BELOW.

C

C     LOWPASS        HIGHPASS       BANDPASS        BANDSTOP

C

C         F  F         F  F           F F  F F        F F F F

C         1  2         1  2           1 2  3 4        1 2 3 4

C   0 XXX-------   0 +------XXX   0 +----XX----   0 XX--------X

C     I X .  .       I .  . X       I . .XX. .      IX. . . .X

C     I  X.  .       I .  .X        I . .XX. .      IX. . . .X

C     I...X  .       I....X         I...X..X .      I.X.....X

C     I    X .       I . X          I . X  X .      I  X. .X

C     I     X.       I .X           I .X    X.      I  X. .X

C  DB I......X    DB I.X         DB I.X......X   DB I...XXX

C     I       X      IX             IX        X     I

C

C-      F3 AND F4 ARE NOT USED WITH ANY LOW OR HIGHPASS.

C-      F2 IS NOT USED WITH LOWPASS BUTTERWORTH.

C-      F1 IS NOT USED WITH HIGHPASS BUTTERWORTH.

C-      F1 AND F4 ARE NOT USED WITH BANDPASS BUTTERWORTH.

C-      F2 AND F3 ARE NOT USED WITH BANDSTOP BUTTERWORTH.

C

C-DB   =DB OF STOPBAND REJECTION.  APPLIES TO CHEB. FILTERS ONLY.

C-      NOT USED WITH BUTTERWORTH.  MUST BE GREATER THAT 3 DB.

C-B    =NUMERATOR COEFFICIENTS, ALWAYS DIMENSIONED B(0:LS,NS).

C-A    =DENOMINATOR COEFFICIENTS, ALWAYS DIMENSIONED A(LS,NS).

C-IERROR=0    NO ERRORS.

C-       1-5  SEE SPFBLT ERROR LIST.

C-       6    IFILT OR IBAND OUT OF RANGE.

C-       7    F1-F4 NOT IN SEQUENCE OR NOT BETWEEN O.O AND 0.5,

C-            OR DB NOT GREATER THAN 3.

C-       11+  SEE SPCHBI, SPCBII, OR SPBWCF ERROR LIST.

C-

      DIMENSION B(0:LS,NS),A(LS,NS),D(0:4),C(0:4),WORK(0:4,0:4)

      COSH(X)=0.5*(EXP(X)+EXP(-X))

      COSH1(X)=ALOG(X+SQRT(X*X-1.))

      WARP(F)=TAN(PI*F)

      BPSUB(OM)=(OM*OM-WARP(FH)*WARP(FL))/((WARP(FH)-WARP(FL))*OM)

      OMIN(OM1,OM2)=MIN(ABS(OM1),ABS(OM2))

      PI=4.*ATAN(1.)

      IERROR=6

      IF(0.GE.NS) RETURN

      IF(IFILT.LT.1.OR.IFILT.GT.3) RETURN

      IF(IBAND.LT.1.OR.IBAND.GT.4) RETURN

      IERROR=7

      IF(IBAND.EQ.1.OR.IBAND.EQ.4) FL=F1

      IF(IBAND.EQ.2.OR.IBAND.EQ.3) FL=F2

      IF(IBAND.LE.3) FH=F3

      IF(IBAND.EQ.4) FH=F4

      IF(IBAND.LT.3) THEN

        IF(IFILT.LT.3.AND.(0.0.GE.F1.OR.F1.GE.F2.OR.F2.GE.0.5)) RETURN

        IF(IFILT.EQ.3.AND.(0.0.GE.FL.OR.FL.GE.0.5)) RETURN

      ELSEIF(IFILT.LT.3) THEN

        IF(0.0.GE.F1.OR.F1.GE.F2.OR.F2.GE.F3) RETURN

        IF(F3.GE.F4.OR.F4.GE.0.5) RETURN

      ELSEIF(IFILT.EQ.3) THEN

        IF(0.0.GE.FL.OR.FL.GE.FH.OR.FH.GE.0.5) RETURN

      ENDIF

      IF(IFILT.LT.3.AND.DB.LE.3.) RETURN

      IF(IFILT.LT.3) THEN

        IF(IBAND.LE.2) OMEGA=WARP(F2)/WARP(F1)

        IF(IBAND.EQ.3) OMEGA=OMIN(BPSUB(WARP(F1)),BPSUB(WARP(F4)))

        IF(IBAND.EQ.4) OMEGA=OMIN(1./BPSUB(WARP(F2)),1./BPSUB(WARP(F3)))

        ALAMDA=10.**(DB/20.)

        EPSLON=ALAMDA/COSH(2*NS*COSH1(OMEGA))

      ENDIF

      DO 1 K=1,NS

        IF(IFILT.EQ.1) CALL SPCHBI(2*NS,K,4,EPSLON,D,C,IERROR)

        IF(IFILT.EQ.2) CALL SPCBII(2*NS,K,4,OMEGA,ALAMDA,D,C,IERROR)

        IF(IFILT.EQ.3) CALL SPBWCF(2*NS,K,4,D,C,IERROR)

        IF(IERROR.NE.0) THEN

          IERROR=10*IFILT+IERROR

          RETURN

        ENDIF

        CALL SPFBLT(D,C,LS,IBAND,FL,FH,B(0,K),A(1,K),WORK,IERROR)

        IF(IERROR.NE.0) RETURN

    1 CONTINUE

      RETURN

      END



      SUBROUTINE SPFBLT(D,C,LN,IBAND,FLN,FHN,B,A,WORK,IERROR)

C-LATEST DATE: 05/19/86

C-CONVERTS NORMALIZED LP ANALOG H(S) TO DIGITAL H(Z)

C-      ANALOG TRANSFER FUNCTION           DIGITAL TRANSFER FUNCTION

C-       D(M)*S**M+.....+D(0)               B(0)+.....+B(L)*Z**-L

C-  H(S)=--------------------          H(Z)=--------------------

C-       C(M)*S**M+.....+C(0)                 1+......+A(L)*Z**-L

C-FILTER ORDER L IS COMPUTED INTERNALLY

C-IBAND=1    LOWPASS            FLN=NORMALIZED CUTOFF IN HZ-SEC

C-      2    HIGHPASS           FLN=NORMALIZED CUTOFF IN HZ-SEC

C-      3    BANDPASS           FLN=LOW CUTOFF; FHN=HIGH CUTOFF

C-      4    BANDSTOP           FLN=LOW CUTOFF; FHN=HIGH CUTOFF

C-LN SPECIFIES COEFFICIENT ARRAY SIZE

C-WORK(0:LN,0:LN) IS A WORK ARRAY USED INTERNALLY

C-RETURN IERROR=0    NO ERRORS DETECTED

C-              1    ALL ZERO TRANSFER FUNCTION

C-              2    BILIN: INVALID TRANSFER FUNCTION

C-              3    FILTER ORDER EXCEEDS ARRAY SIZE

C-              4    INVALID FILTER TYPE PARAMETER (IBAND)

C-              5    INVALID CUTOFF FREQUENCY

      DIMENSION D(0:LN),C(0:LN),B(0:LN),A(LN),WORK(0:LN,0:LN)

      PI=4.*ATAN(1.)

      IERROR=0

      IF(IBAND.LT.1.OR.IBAND.GT.4) IERROR=4

      IF(FLN.LE.0..OR.FLN.GT.0.5) IERROR=5

      IF(IBAND.GE.3.AND.FLN.GE.FHN) IERROR=5

      IF(IBAND.GE.3.AND.FHN.GT.0.5) IERROR=5

      IF(IERROR.NE.0) RETURN

      DO 1 I=LN,0,-1

        IF(C(I).NE.0..OR.D(I).NE.0.) GO TO 2

    1 CONTINUE

      IERROR=1

      RETURN

    2 M=I

      W1=TAN(PI*FLN)

      L=M

      IF(IBAND.LE.2) GO TO 3

      L=2*M

      W2=TAN(PI*FHN)

      W=W2-W1

      W02=W1*W2

    3 CONTINUE

      IERROR=3

      IF(L.GT.LN) RETURN

      GO TO (30,20,40,20) IBAND

C-SUBSTITUTION OF 1/S TO GENERATE HIGHPASS (HP,BS)

   20 CONTINUE

      DO 25 MM=0,M/2

        TMP=D(MM)

        D(MM)=D(M-MM)

        D(M-MM)=TMP

        TMP=C(MM)

        C(MM)=C(M-MM)

        C(M-MM)=TMP

   25 CONTINUE

      IF(IBAND.EQ.4) GO TO 40

C-SCALING S/W1 FOR LOWPASS,HIGHPASS

   30 CONTINUE

      DO 35 MM=0,M

        D(MM)=D(MM)/(W1**MM)

        C(MM)=C(MM)/(W1**MM)

   35 CONTINUE

      GO TO 100

C-SUBSTITUTION OF (S**2+W0**2)/(W*S)  BANDPASS,BANDSTOP

   40 CONTINUE

      DO 45 LL=0,L

        WORK(LL,0)=0.

        WORK(LL,1)=0.

   45 CONTINUE

      DO 52 MM=0,M

        TMPD=D(MM)*(W**(M-MM))

        TMPC=C(MM)*(W**(M-MM))

        DO 50 K=0,MM

          LS=M+MM-2*K

          TMP=SPBFCT(MM,MM)/(SPBFCT(K,K)*SPBFCT(MM-K,MM-K))

          WORK(LS,0)=WORK(LS,0)+TMPD*(W02**K)*TMP

          WORK(LS,1)=WORK(LS,1)+TMPC*(W02**K)*TMP

   50   CONTINUE

   52 CONTINUE

      DO 55 LL=0,L

        D(LL)=WORK(LL,0)

        C(LL)=WORK(LL,1)

   55 CONTINUE

C-SUBSTITUTE (Z-1)/(Z+1)

  100 CONTINUE

      CALL SPBILN(D,C,LN,B,A,WORK,IERROR)

      RETURN

      END



      SUBROUTINE SPBILN(D,C,LN,B,A,WORK,IERROR)

C-LATEST DATE: 11/13/85

C-CONVERTS ANALOG H(S) TO DIGITAL H(Z) VIA BILINEAR TRANSFORM

C-     ANALOG TRANSFER FUNCTION         DIGITAL TRANSFER FUNCTION

C-         D(L)*S**L+.....+D(0)             B(0)+......+B(L)*Z**-L

C-   H(S)=---------------------        H(Z)=----------------------

C-         C(L)*S**L+.....+C(0)               1+.......+A(L)*Z**-L

C-H(S) IS ASSUMED TO BE PRE-SCALED AND PRE-WARPED

C-LN SPECIFIES THE LENGTH OF THE COEFFICIENT ARRAYS

C-FILTER ORDER L IS COMPUTED INTERNALLY

C-WORK IS AN INTERNAL ARRAY (2D) SIZED TO MATCH COEF ARRAYS

C-IERROR=0    NO ERRORS DETECTED IN TRANSFORMATION

C-       1    ALL ZERO TRANSFER FUNCTION

C-       2    INVALID TRANSFER FUNCTION; Y(K) COEF=0

      DIMENSION D(0:LN),C(0:LN),B(0:LN),A(LN),WORK(0:LN,0:LN)

      DO 1 I=LN,0,-1

        IF(C(I).NE.0..OR.D(I).NE.0.)GO TO 2

    1 CONTINUE

      IERROR=1

      RETURN

    2 L=I

      DO 5 J=0,L

        WORK(0,J)=1.

    5 CONTINUE

      TMP=1.

      DO 6 I=1,L

        TMP=TMP*FLOAT(L-I+1)/FLOAT(I)

        WORK(I,0)=TMP

    6 CONTINUE

      DO 8 I=1,L

        DO 7 J=1,L

          WORK(I,J)=WORK(I,J-1)-WORK(I-1,J)-WORK(I-1,J-1)

    7   CONTINUE

    8 CONTINUE

      DO 10 I=L,0,-1

        B(I)=0.

        ATMP=0.

        DO 9 J=0,L

          B(I)=B(I)+WORK(I,J)*D(J)

          ATMP=ATMP+WORK(I,J)*C(J)

    9   CONTINUE

        SCALE=ATMP

        IF(I.NE.0) A(I)=ATMP

   10 CONTINUE

      IERROR=2

      IF(SCALE.EQ.0.) RETURN

      B(0)=B(0)/SCALE

      DO 12 I=1,L

        B(I)=B(I)/SCALE

        A(I)=A(I)/SCALE

   12 CONTINUE

      DO 14 I=L+1,LN

        B(I)=0.0

        A(I)=0.0

   14 CONTINUE

      IERROR=0

      RETURN

      END



      SUBROUTINE T2TFILT(B,A,LB,LA,X,N,Z,IERROR)

C

C FILTERS N-POINT ARRAY IN PLACE USING TYPE II TRANSPOSED

C 

C B = ARRAY OF NUM COEFFICIENTS

C A = ARRAY OF DENOM COEFFICIENTS

C LB = LENGTH OF B, LA = LENGTH OF A

C X = DATA TO BE FILTERED

C N = LENGTH OF X

C Z = INITIAL CONDITIONS OF DELAYS

C

      DOUBLE PRECISION XD,YD,B(LB),A(LA),Z(20)

      DIMENSION X(N)

      IERROR=1

      NF=MAX(LA,LB)

      DO 10 K=1,N

       XD=DBLE(X(K))

       YD=B(1)*XD+Z(1)

       DO 5 I=1,NF-1

        Z(I)=(B(I+1)*XD+Z(I+1))-A(I+1)*YD

5      CONTINUE

       X(K)=SNGL(YD)

       IF(ABS(X(K)).GT.1.E10) RETURN

10    CONTINUE                     

      IERROR=0

      RETURN

      END                      



      SUBROUTINE SPCFLT(B,A,LS,NS,X,N,PX,PY,IERROR)

C-LATEST DATE: 11/13/85

C-FILTERS N-POINT DATA SEQUENCE IN PLACE USING ARRAY X

C-TRANSFER FUNCTION IS COMPOSED OF NS SECTIONS IN CASCADE WITH

C-      MTH STAGE TRANSFER FUNCTION

C-           B(0,M)+B(1,M)*Z**(-1)+......+B(LS,M)*Z**(-LS)

C-    H(Z) = -------------------------------------------

C-              1+A(1,M)*Z**(-1)+.......+A(LS,M)*Z**(-LS)

C-PX RETAINS PAST VALUES OF INPUT X

C-PY RETAINS PAST VALUES OF OUTPUT Y

C-IERROR=0    NO ERRORS DETECTED

C-    1 - NS  OUTPUT AT STAGE [IERROR] EXCEEDS 1.E10

      DIMENSION X(0:N-1),B(0:LS,NS),A(LS,NS),PX(0:LS,NS),PY(LS,NS)

      DO 5 M=1,NS

        IERROR=M

        DO 3 K=0,N-1

          PX(0,M)=X(K)

          X(K)=B(0,M)*PX(0,M)

          DO 1 LL=1,LS

            X(K)=X(K)+B(LL,M)*PX(LL,M)-A(LL,M)*PY(LL,M)

    1     CONTINUE

          IF(ABS(X(K)).GT.1.E10) RETURN

          DO 2 LL=LS,2,-1

            PX(LL,M)=PX(LL-1,M)

            PY(LL,M)=PY(LL-1,M)

    2     CONTINUE

          PX(1,M)=PX(0,M)

          PY(1,M)=X(K)

    3   CONTINUE

    5 CONTINUE

      IERROR=0

      RETURN

      END



      FUNCTION SPBFCT(I1,I2)

C-LATEST DATE: 02/14/87

C-GENERATES (I1)!/(I1-I2)!=I1*(I1-1)*...*(I1-I2+1).

C-NOTE: 0!=1 AND SPBFCT(I,I)=SPBFCT(I,I-1)=I!.

      SPBFCT=0.

      IF(I1.LT.0.OR.I2.LT.0.OR.I2.GT.I1) RETURN

      SPBFCT=1.

      IF(I2.EQ.0) RETURN

      DO 1 I=I1,I1-I2+1,-1

        SPBFCT=SPBFCT*I

    1 CONTINUE

      RETURN

      END



      SUBROUTINE SPCHBI(L,K,LN,EP,D,C,IERROR)

C-LATEST DATE: 11/13/85

C-GENERATES KTH SECTION COEFFICIENTS FOR LTH ORDER NORMALIZED

C-            LOWPASS CHEBYSHEV TYPE I ANALOG FILTER

C-SECOND ORDER SECTIONS:  K<=(L+1)/2

C-ODD ORDER L: LAST SECTION WILL CONTAIN SINGLE POLE

C-LN DEFINES COEFFICIENT ARRAY SIZE

C-EP REGULATES THE PASSBAND RIPPLE

C-TRANSFER FUNCTION SCALING IS INCLUDED IN FIRST SECTION (L EVEN)

C-ANALOG COEFFICIENTS ARE RETURNED IN D AND C

C-IERROR=0    NO ERRORS DETECTED

C-       1    INVALID FILTER ORDER L

C-       2    INVALID SECTION NUMBER K

C-       3    INVALID RIPPLE PARAMETER EP

      DIMENSION D(0:LN),C(0:LN)

      PI=4.*ATAN(1.)

      IERROR=0

      IF(L.LE.0) IERROR=1

      IF(K.GT.INT((L+1)/2).OR.K.LE.0) IERROR=2

      IF(EP.LE.0.) IERROR=3

      IF(IERROR.NE.0) RETURN

      GAM=((1.+SQRT(1.+EP**2))/EP)**(1./L)

      SIGMA=.5*(1./GAM-GAM)*SIN((2*K-1)*PI/(2*L))

      OMEGA=.5*(GAM+1./GAM)*COS((2*K-1)*PI/(2*L))

      DO 1 LL=0,LN

        D(LL)=0.

        C(LL)=0.

    1 CONTINUE

      IF(INT(L/2).NE.INT((L+1)/2).AND.K.EQ.(L+1)/2) THEN

        D(0)=-1.*SIGMA

        C(0)=D(0)

        C(1)=1.

        RETURN

      ENDIF

      C(0)=SIGMA**2+OMEGA**2

      C(1)=-2.*SIGMA

      C(2)=1.

      D(0)=C(0)

      IF(INT(L/2).EQ.INT((L+1)/2).AND.K.EQ.1) D(0)=D(0)/SQRT(1.+EP**2)

      RETURN

      END



      SUBROUTINE SPCBII(L,K,LN,WS,ATT,D,C,IERROR)

C-LATEST DATE: 11/13/85

C-GENERATES KTH SECTION COEFFICIENTS FOR LTH ORDER NORMALIZED

C-      LOWPASS CHEBYSHEV TYPE II ANALOG FILTER

C-SECOND ORDER SECTIONS:  K<= (L+1)/2

C-ODD ORDER L:  FINAL SECTION WILL CONTAIN SINGLE POLE

C-LN DEFINES COEFFICIENT ARRAY SIZE

C-WS AND ATT REGULATE STOPBAND ATTENUATION

C-      MAGNITUDE WILL BE 1/ATT AT WS RAD/SEC

C-ANALOG COEFFICIENTS ARE RETURNED IN ARRAYS D AND C

C-IERROR=0      NO ERRORS DETECTED

C-       1      INVALID FILTER ORDER L

C-       2      INVALID SECTION NUMBER K

C-       3      INVALID STOPBAND FREQUENCY WS

C-       4      INVALID ATTENUATION PARAMETER

      DIMENSION D(0:LN),C(0:LN)

      PI=4.*ATAN(1.)

      IERROR=0

      IF(L.LE.0) IERROR=1

      IF(K.GT.INT((L+1)/2).OR.K.LT.1) IERROR=2

      IF(WS.LE.1.) IERROR=3

      IF(ATT.LE.0.) IERROR=4

      IF(IERROR.NE.0) RETURN

      GAM=(ATT+SQRT(ATT**2-1.))**(1./L)

      ALPHA=.5*(1./GAM-GAM)*SIN((2*K-1)*PI/(2*L))

      BETA=.5*(GAM+1./GAM)*COS((2*K-1)*PI/(2*L))

      SIGMA=(WS*ALPHA)/(ALPHA**2+BETA**2)

      OMEGA=(-1.*WS*BETA)/(ALPHA**2+BETA**2)

      DO 1 LL=0,LN

        D(LL)=0.

        C(LL)=0.

    1 CONTINUE

      IF(INT(L/2).NE.INT((L+1)/2).AND.K.EQ.(L+1)/2) THEN

        D(0)=-1.*SIGMA

        C(0)=D(0)

        C(1)=1.

        RETURN

      ENDIF

      SCLN=SIGMA**2+OMEGA**2

      SCLD=(WS/COS((2*K-1)*PI/(2*L)))**2

      D(0)=SCLN*SCLD

      D(2)=SCLN

      C(0)=D(0)

      C(1)=-2.*SIGMA*SCLD

      C(2)=SCLD

      RETURN

      END



      SUBROUTINE SPBWCF(L,K,LN,D,C,IERROR)

C-LATEST DATE: 11/13/85

C-GENERATES KTH SECTION COEFFICIENTS FOR LTH ORDER NORMALIZED

C-      LOWPASS BUTTERWORTH FILTER

C-SECOND ORDER SECTIONS: K<=(L+1)/2

C-ODD ORDER L:  FINAL SECTION WILL CONTAIN 1ST ORDER POLE

C-LN DEFINES COEFFICIENT ARRAY SIZE

C-ANALOG COEFFICIENTS ARE RETURNED IN D AND C

C-IERROR=0      NO ERRORS DETECTED

C-       1      INVALID FILTER ORDER L

C-       2      INVALID SECTION NUMBER K

      DIMENSION D(0:LN),C(0:LN)

      PI=4.*ATAN(1.)

      IERROR=0

      IF(L.LE.0) IERROR=1

      IF(K.LE.0.OR.K.GT.INT((L+1)/2)) IERROR=2

      IF(IERROR.NE.0) RETURN

      D(0)=1.

      C(0)=1.

      DO 1 I=1,LN

        D(I)=0.

        C(I)=0.

    1 CONTINUE

      TMP=K-(L+1.)/2.

      IF(TMP.EQ.0.) THEN

        C(1)=1.

      ELSE

        C(1)=(-2.)*COS((2*K+L-1)*PI/(2*L))

        C(2)=1.

      ENDIF

      RETURN

      END

