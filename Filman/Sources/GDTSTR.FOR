! GDTSTR.FOR- SUBROUTINE TO APPLY GOOD'S SERIAL RANDOMNESS TEST TO GROUPS

	SUBROUTINE GDTSTR

      INCLUDE 'MAX.INC'

!      PARAMETER (NMAX=32786,MAXGRP=15)
      PARAMETER (NMAX=32786,MAXGRP=IGRPMAX)

	CHARACTER*1 INPFIL(64)

	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ

	COMMON/FLDES/NG,NA,NC,ND,NF,NP,NR,IS,IBUF(IOMAX)

	COMMON/FLDESO/NGO,NAO,NCO,NDO,NFO,NPO,NRO,ISO,IBUFO(IOMAX)

	COMMON/GOOD/ANTOT,ITMIN1,ITMAX1,IVMAX1,N(0:NMAX)

!	COMMON/DEV/ITI,IOX
	COMMON/DEV/ ITI,ILP,IGRAPH,IOX

	COMMON/STDFIL/INPFIL

	DIMENSION D2PSI(MAXGRP),IDF(MAXGRP),IVP(MAXGRP)

	INTEGER*4, SAVE :: IK,NTOT,NSO,NGR,IOFF,LBLS(6,MAXGRP)

	INTEGER*4, DIMENSION(MAXGRP), SAVE :: NGRP,ITMIN,ITMAX,IVMAX

	DATA ILP,IRP/'(',')'/
	
	character*255 LINE
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME
      CHARACTER*1024 OUTNAME
      CHARACTER*1024 OUTFNM
	
	IF(IFLAG1)10,20,30

10      IFLAG3=0
      CURPROCNAME='GDTSTR'
      WRITE(*,*) CURPROCNAME
	ISZ=0

      OUTNAME=OUTFNM(CURPROCNAME)
	OPEN(UNIT=IOX,FILE=OUTNAME,ACTION='WRITE',STATUS='REPLACE')

	IK=0

	K=1

	DO 5 J=1,NG

	DO 5 I=1,6

	LBLS(I,J)=IBUF(K)

5       K=K+1

      CALL DoGDTSTRDialog(NGRP,ITMIN,ITMAX,IVMAX,IVP)

!	WRITE(*,200)(J,(LBLS(I,J),I=1,6),J=2,NG)
!
!200     FORMAT('GROUP ',I2,' ID=',6A4)

      MNG=MIN(NG-1,MAXGRP)

!	WRITE(*,201)(ILP,IRP,I=1,MNG)
!
!201     FORMAT('WHICH GROUPS?'/20(A1,2X,A1))
!
!	READ(*,100)(NGRP(I),I=1,MNG)
!
!100     FORMAT(1XI2,9(2XI2))

	NGR=0

	DO 12 I=1,NG-1

	IF(NGRP(I))12,12,11

11      NGR=NGR+1

12      CONTINUE

	DO 15 I=1,NGR

!	WRITE(*,202)NGRP(I)
!
!202   FORMAT('#MIN LVL, #MAX LVL,#MAX ORDER,# TO LIST FOR VAR ',I2,'>')
!
!	READ(*,*)ITMIN(I),ITMAX(I),IVMAX(I),IVP(I)

	CALL IR(ITMIN(I),ITMAX(I),IVMAX(I))

15      CONTINUE

	IOFF=NR/NC ! IOFF=number of record sets

	NSO=NGO+NAO

	ISZ=NGR*IOFF

	NTOT=0

	RETURN

20      IF(IK-KNT)21,25,25

21      IK=KNT

	NTOT=NTOT+1

	J=NSO

	DO 22 I=1,NGR

	IBUFO(J+IK)=IBUF(NGRP(I)) ! IBUFO stores series of group values

22      J=J+IOFF

25      RETURN

30      N1=NSO

	N2=NSO

	DO 50 K=1,NGR

	N1=N2+1 ! Sequence of values is between N1 and N2 in IBUFO

	N2=N2+IOFF

	N3=0

	ITMAX1=ITMAX(K)

	ITMIN1=ITMIN(K)

	IVMAX1=IVMAX(K)

	WRITE(IOX,300)

300     FORMAT('GENERALIZED SERIAL TEST')

	WRITE(IOX,301)NGRP(K),(LBLS(I,NGRP(K)),I=1,6),(INPFIL(I),I=1,64)

301     FORMAT(/' GROUP VAR ',I2,', ID=',6A4/' FROM FILE ',64A1)

	DO 35 I=0,NMAX

35      N(I)=0

	ANTOT=0.0

	DO 40 J=N1,N2 !Accumulate data for this GV

	N3=N3+1

	IF(N3-NTOT)40,40,41

40      CALL GDTST1(IBUFO(J))

41      CALL GDTST2(D2PSI,IDF)

	WRITE(IOX,302)

302     FORMAT(//' OVERALL RESULTS:'/4X,'ORDER',11X,'CHISQUARE',5X,'DF')

	WRITE(IOX,303)(I,D2PSI(I),IDF(I),I=1,IVMAX1)

303     FORMAT(6XI3,E20.5,I8)

	IF(IVP(K))50,50,45

45      WRITE(IOX,400)

400     FORMAT(//' INDIVIDUAL TOTALS BY ORDER:')

	CALL GDTST3(IVP(K))

50      CONTINUE

	WRITE(IOX,500)

500     FORMAT(//' *** END OF JOB ***')

	CLOSE(UNIT=IOX)

	RETURN

	END

! SUBROUTINE TO TRUNCATE OVERSIZE REQUESTS

	SUBROUTINE IR(ITMIN,ITMAX,IV)

      PARAMETER (NMAX=32786)

	COMMON/DEV/ITI

	K=1

	KT=0

	DO 10 I=1,IV

	K=K*(ITMAX-ITMIN+1)

	KT=KT+K

	IF(NMAX-KT)5,10,10

5       IV=I-1

!	WRITE(*,200)IV
	WRITE(LINE,200)IV

200   FORMAT('OVERSIZED REQUEST; # ORDERS REDUCED TO ',I1)

      CALL ShowInfoText('Warning',LINE)

	RETURN

10    CONTINUE

	RETURN

	END

!       ACCUMULATES TOTALS

	SUBROUTINE GDTST1(INEW)

      PARAMETER (NMAX=32786,MAXGRP=15,MAXORD=16)
!      INCLUDE 'MAX.INC'
!      PARAMETER (NMAX=32786,MAXGRP=IGRPMAX,MAXORD=16)
!	INTEGER*4, DIMENSION(MAXGRP) :: ITMIN,ITMAX,IVMAX

	DIMENSION I(MAXORD)

	COMMON/GOOD/ANTOT,ITMIN,ITMAX,IVMAX,N(0:NMAX)

	IF(ANTOT) 1,1,2

1       ANTOT=0.0

	DO 3 K=1,IVMAX

3       I(K)=0

2       IOFF=0

	IT1=1

	ANTOT=ANTOT+1.0

	DO 4 K=1,IVMAX

	J=(INEW-ITMIN)*IT1+I(K)/(ITMAX-ITMIN+1)

	I(K)=J

	IF(ANTOT-K) 5,6,6

6       J=J+IOFF

	N(J)=N(J)+1

5       IT1=IT1*(ITMAX-ITMIN+1)

4       IOFF=IOFF+IT1

	RETURN

	END

!       CALCULATES STAT/DF



	SUBROUTINE GDTST2(D2PSI,IDF)

      PARAMETER (NMAX=32786,MAXGRP=15)

	DIMENSION D2PSI(*),IDF(*)

	COMMON/GOOD/ANTOT,ITMIN,ITMAX,IVMAX,N(0:NMAX)

	I=0

	IT1=1

	DO 1 K=1,IVMAX

	IT1=IT1*(ITMAX-ITMIN+1)

	P=(ANTOT-K+1)/FLOAT(IT1)

	X=0.

	DO 2 J=1,IT1

	X=X+(N(I)-P)**2

2       I=I+1

	IDF(K)=IT1

1       D2PSI(K)=X/P

	I=IVMAX

6       IF(I-2) 3,4,5

5       D2PSI(I)=D2PSI(I)-2.*D2PSI(I-1)+D2PSI(I-2)

	IDF(I)=IDF(I)-2*IDF(I-1)+IDF(I-2)

	I=I-1

	GO TO 6

4       D2PSI(2)=D2PSI(2)-2.*D2PSI(1)

	IDF(2)=IDF(2)-2*IDF(1)+1

3       IDF(1)=ITMAX-ITMIN+1

	RETURN

	END

!       PRINTS OUT TOTALS

	SUBROUTINE GDTST3(IV)

      PARAMETER (NMAX=32786,MAXGRP=15,MAXORD=16)

	DIMENSION KI(MAXORD)

	COMMON/GOOD/ANTOT,ITMIN,ITMAX,IVMAX,N(0:NMAX)

	COMMON/DEV/ITI,ILP,IGRAPH,IOX

	J=0

	IT=ITMAX-ITMIN+1

	IT1=IT

	DO 1 I=1,IV

	WRITE(IOX,300) I

300     FORMAT(/'  ORDER',I3)

	DO 2 K=0,IT1-1

	M=K

	DO 3 L=1,I

	KI(L)=MOD(M,IT)+ITMIN

3       M=M/IT

	WRITE(IOX,100) (KI(L),L=1,I)

	WRITE(IOX,200) N(J)

2       J=J+1

1       IT1=IT1*IT

100     FORMAT($,8I3)

200     FORMAT(T26,I7)

	RETURN

	END



