      SUBROUTINE SAVEDTF(WYN,NPTS,NCHANS,KN,WHICH,IWIN,ITRLN,IWNMAX)
	INCLUDE 'MULTAR.INC'
C      REAL WYN(NPTS,NCHANS,NCHANS,KN)
      REAL WYN(*)
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      LOGICAL WHICH(MKN+1)
      
      IF(IERRCN.NE.0)RETURN
      ILIM=NPTS*NCHANS*NCHANS
      INUMR=(ITRLN-1)*IWNMAX+IWIN  
      INUMR1=(INUMR-1)*(KN)+1
      do 1,irec=1,KN
      WRITE(ICVN,REC=INUMR1,ERR=10,IOSTAT=iostat)
     $            (WYN(I),I=(irec-1)*ILIM+1,irec*ILIM)
    1 INUMR1=INUMR1+1  
      RETURN
10    IERRCN=iostat
      WRITE(*,*)'Write error ',IERRCN
      RETURN      
      END
      
      SUBROUTINE GETDTF(WYN,NPTS,NCHANS,KN,WHICH,IWIN,ITRLN,IWNMAX)
	INCLUDE 'MULTAR.INC'
C      REAL WYN(NPTS,NCHANS,NCHANS,KN)
      REAL WYN(*)
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      LOGICAL WHICH(MKN+1)
      
      IF(IERRCN.NE.0)RETURN
      ILIM=NPTS*NCHANS*NCHANS
      INUMR=(ITRLN-1)*IWNMAX+IWIN  
      INUMR1=(INUMR-1)*(KN)+1
      do 1,irec=1,KN
      READ(ICVN,REC=INUMR1,ERR=10,IOSTAT=iostat)
     $            (WYN(I),I=(irec-1)*ILIM+1,irec*ILIM)
    1 INUMR1=INUMR1+1  
      RETURN
10    IERRCN=iostat
      WRITE(*,*)'Read error ',IERRCN
      RETURN      
      END

      SUBROUTINE GETDTF1(WYN,NPTS,NCHANS,KN,IKN,WHICH,IWIN,ITRLN,IWNMAX)
	INCLUDE 'MULTAR.INC'
C      REAL WYN(NPTS,NCHANS,NCHANS,KN)
      REAL WYN(*)
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      LOGICAL WHICH(MKN+1)
      
      IF(IERRCN.NE.0)RETURN
      ILIM=NPTS*NCHANS*NCHANS
      INUMR=(ITRLN-1)*IWNMAX+IWIN  
      INUMR1=(INUMR-1)*(KN)+1
      INUMR1=INUMR1+IKN-1
      READ(ICVN,REC=INUMR1,ERR=10,IOSTAT=iostat)
     $            (WYN(I),I=1,ILIM)
      RETURN
10    IERRCN=iostat
      WRITE(*,*)'Read error ',IERRCN
      RETURN      
      END



	SUBROUTINE AVGDTF(AWYN,NPTS,NCHANS,KN,WHICH,IWIN,IWNMAX,ITRMX)
	INCLUDE 'MULTAR.INC'
      REAL AWYN(NPTS,NCHANS,NCHANS,KN)
      REAL WYN(:)
      ALLOCATABLE WYN
      LOGICAL WHICH(MKN+1)
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      DOUBLE PRECISION ONE,DIVID
      DATA ONE /1D0/, IEDEN /1/
      
      NX=NPTS*NCHANS*NCHANS
      NXKN=NX*KN
      DIVID=1D0/DBLE(ITRMX)
      ALLOCATE(WYN(NXKN),STAT=ierr)
      
      CALL GETDTF(WYN,NPTS,NCHANS,KN,WHICH,IWIN,1,IWNMAX)
      Do 2,IT=2,ITRMX
      CALL GETDTF(WYN,NPTS,NCHANS,KN,WHICH,IWIN,IT,IWNMAX)
2     CALL DAXPY(NXKN,ONE,WYN,IEDEN,AWYN,IEDEN)
      CALL DSCAL(NXKN,DIVID,AWYN,IEDEN)

      DEALLOCATE(WYN)
      RETURN
      
	END   
      
	SUBROUTINE INITSVDTF(INPFIL,NPTS,IWNSZ,IWNSHF,ITRMAX,NCHANS,IWNMAX)
	CHARACTER*(*) INPFIL
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      CHARACTER*1024 FNAME
      
      ICVN=79
      IRECL=NPTS*NCHANS*NCHANS
      FNAME='C:\EEGDATA\'//INPFIL(1:LEN_TRIM(INPFIL))//'.SDTF.TMP'
      OPEN(UNIT=ICVN,STATUS='REPLACE',FORM='UNFORMATTED',
     $     ACCESS='DIRECT',RECL=IRECL,ERR=10,IOSTAT=iostat,
     $     FILE=FNAME)
      IERRCN=0
      RETURN
10    IERRCN=iostat
      WRITE(*,*)'File ',FNAME(1:LEN_TRIM(FNAME)),' open error ',IERRCN
      RETURN
	END
	
	SUBROUTINE CLOSESVDTF
      COMMON /DTFFIL/ ICVN,IRECCN,IRECL,IERRCN
      
C      CLOSE(UNIT=ICVN)
      CLOSE(UNIT=ICVN,STATUS='DELETE')
	END
      