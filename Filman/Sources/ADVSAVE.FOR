      SUBROUTINE ADVMOPEN(FNAME)
C OPEN SYSTAT FILE      
      COMMON /ADVSV/ IASUNIT,SYSOUTFIL,IERRAD
      COMMON /SYBUF/ BUFFER,IBPNT
      DOUBLE PRECISION BUFFER(16)
      CHARACTER*64 SYSOUTFIL
	CHARACTER*1024 FNAME
      IASUNIT=90
C      FNAME='C:\EEGDATA\'//SYSOUTFIL
      OPEN(UNIT=IASUNIT,STATUS='REPLACE',FORM='BINARY',
     $     ACCESS='SEQUENTIAL',ERR=10,IOSTAT=iostat,
     $     FILE=FNAME)
      IERRAD=0
      IBPNT=0
      RETURN
10    IERRAD=iostat
      WRITE(*,*)'File ',TRIM(FNAME),' open error ',IERRAD
      RETURN
      END
      
      SUBROUTINE SYSWH(IBUFL,IBUFO2,LEN1,IBUFO,LEN2,GIBUF,NG,ISDM)
C WRITE SYSTAT HEADERS FOR MULTAR
      INCLUDE 'MULTAR.INC'
      INTEGER IBUFL(*)
C      INTEGER IBUFO(*)
C      INTEGER IBUFO2(*)
      COMMON /ADVSV/ IASUNIT,SYSOUTFIL,IERRAD,NGO,NCO,IS,NBANDS
      CHARACTER*64 SYSOUTFIL
      CHARACTER*72 IBUFO2(6)
      CHARACTER*24 IBUFO(*)
      CHARACTER*24 GIBUF(NG)
      COMMON /MBANDS/ BANDS,LBF
	DIMENSION BANDS(2,8)
	LOGICAL LBF(8)
	DIMENSION IA0(8)
	CHARACTER*1 ENDCOMREC(72+2)
	DATA ENDCOMREC /72,72*'$',72/
	CHARACTER*12 CVARN
C     CHARACTER*12 CFMIN,CFMAX
C	DATA CFMIN /'   FMIN1    '/, CFMAX /'   FMAX1    '/
      PARAMETER (MAXRNP=1) ! Now we look only for one peak
      LOGICAL ISDM
      
      NGO=IBUFL(1)
      NCO=IBUFL(3)
      IS=IBUFL(8)
C      IA0=0
C      WHERE(LBF)IA0=1
C      NBANDS=SUM(IA0)
      NBANDS=COUNT(LBF)
C      NV=2+6*NBANDS ! Number of stored variables
!      NV=2+1+1+(NG-2)+
!     $ NBANDS*(2+NCO*(1+2*(MAXAR/2+1))+(NCO+3)+(NCO+3)+2*(NCO*(NCO-1)))
      IF(ISDM)THEN
        NV=2+1+1+(NG-2)+
     $      NBANDS*(2+NCO*(1+2*MAXRNP)+(NCO+3)+(NCO+3)+
     $      2*(2+2*MAXRNP)*(NCO*(NCO-1)))
      ELSE
        NV=2+1+1+(NG-2)+
     $      NBANDS*(2+NCO*(1+2*MAXRNP)+(NCO+3)+(NCO+3)
     $      )
      ENDIF
      MTYPE=1  ! Rectangular data
C      NTYPE=1  ! Single precision
      NTYPE=2  ! Double precision
      WRITE(IASUNIT)CHAR(75)
      WRITE(IASUNIT)CHAR(6),INT2(30),INT2(0),INT2(0),CHAR(6)
      DO 1,I=1,6
    1 CALL WRLECHAR(IASUNIT,72,IBUFO2(I))
      IF(NG.GE.3)THEN
        CALL WRLECHAR(IASUNIT,72,'GROUPING VARIABLES')
        DO 5,I=3,NG
        CALL WRLECHAR(IASUNIT,72,GIBUF(I))
    5   CONTINUE
      ENDIF
      CALL WRLECHAR(IASUNIT,72,'CHANNELS LABELS')
      DO 2,I=1,NCO
    2 CALL WRLECHAR(IASUNIT,72,IBUFO(NGO+I))
      WRITE(IASUNIT)ENDCOMREC
      WRITE(IASUNIT)CHAR(6),INT2(NV),INT2(MTYPE),INT2(NTYPE),CHAR(6)
      CALL WRLECHAR(IASUNIT,12,'  NCHANS    ')
      CALL WRLECHAR(IASUNIT,12,' SMPLFRQ    ')
      CALL WRLECHAR(IASUNIT,12,'  NBANDS    ')
      CALL WRLECHAR(IASUNIT,12,'   ORDER    ')
C      DO 4,IB=1,8
C	IF(.NOT.LBF(IB))GOTO 4
C    4 CONTINUE
      DO 51,I=3,NG
      WRITE(CVARN,102)I
   51 CALL WRLECHAR(IASUNIT,12,CVARN)   

      DO 3,IB=1,8
	IF(.NOT.LBF(IB))GOTO 3
 	WRITE(CVARN,103)CHAR(ICHAR('A')+IB-1),'FMIN'
      CALL WRLECHAR(IASUNIT,12,CVARN)
 	WRITE(CVARN,103)CHAR(ICHAR('A')+IB-1),'FMAX'
      CALL WRLECHAR(IASUNIT,12,CVARN)
      DO 34,I=1,NCO     ! Number of peaks found
 	WRITE(CVARN,104)CHAR(ICHAR('A')+IB-1),'NPK',I
      CALL WRLECHAR(IASUNIT,12,CVARN)
 	DO 38,J=1,MAXRNP
 	WRITE(CVARN,106)CHAR(ICHAR('A')+IB-1),'PK',I,J
      CALL WRLECHAR(IASUNIT,12,CVARN)
 	WRITE(CVARN,106)CHAR(ICHAR('A')+IB-1),'PV',I,J
   38 CALL WRLECHAR(IASUNIT,12,CVARN)
   34 CONTINUE
      DO 31,I=1,NCO     ! Power spectra
      WRITE(CVARN,100)CHAR(ICHAR('A')+IB-1),'R','S',I
C      CALL WRLECHAR(IASUNIT,12,CVARN)      
C      WRITE(CVARN(4:4),'(A1)')'I'
   31 CALL WRLECHAR(IASUNIT,12,CVARN)
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','S','DET'
      CALL WRLECHAR(IASUNIT,12,CVARN)
C      CALL WRLECHAR(IASUNIT,12,'  AISDET    ')
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','S','TRC'
      CALL WRLECHAR(IASUNIT,12,CVARN)
C      CALL WRLECHAR(IASUNIT,12,'  AISTRC    ')
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','S','LGR'
      CALL WRLECHAR(IASUNIT,12,CVARN)
      DO 32,I=1,NCO     ! Coherences
      WRITE(CVARN,100)CHAR(ICHAR('A')+IB-1),'R','C',I
   32 CALL WRLECHAR(IASUNIT,12,CVARN)
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','C','DET'
      CALL WRLECHAR(IASUNIT,12,CVARN)
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','C','TRC'
      CALL WRLECHAR(IASUNIT,12,CVARN)
      WRITE(CVARN,105)CHAR(ICHAR('A')+IB-1),'R','C','LGR'
      CALL WRLECHAR(IASUNIT,12,CVARN)
      IF(ISDM)THEN
        DO 35,I=1,NCO     ! DTF
        DO 35,J=1,NCO
        IF(I.NE.J)THEN
            WRITE(CVARN,101)CHAR(ICHAR('A')+IB-1),'D',I,J
            CALL WRLECHAR(IASUNIT,12,CVARN)
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'DNP',I,J
            CALL WRLECHAR(IASUNIT,12,CVARN)
            DO 351,IP=1,MAXRNP
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'DPF',I,J,IP
            CALL WRLECHAR(IASUNIT,12,CVARN)
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'DPV',I,J,IP
            CALL WRLECHAR(IASUNIT,12,CVARN)
351         CONTINUE        
        ENDIF
   35   CONTINUE
        DO 37,I=1,NCO     ! nn-DTF
        DO 37,J=1,NCO
        IF(I.NE.J)THEN
            WRITE(CVARN,101)CHAR(ICHAR('A')+IB-1),'N',I,J
            CALL WRLECHAR(IASUNIT,12,CVARN)
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'NNP',I,J
            CALL WRLECHAR(IASUNIT,12,CVARN)
            DO 371,IP=1,MAXRNP
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'NPF',I,J,IP
            CALL WRLECHAR(IASUNIT,12,CVARN)
            WRITE(CVARN,107)CHAR(ICHAR('A')+IB-1),'NPV',I,J,IP
            CALL WRLECHAR(IASUNIT,12,CVARN)
371         CONTINUE        
        ENDIF  
   37   CONTINUE
      ENDIF
    3 CONTINUE
      
100   FORMAT('  ',A1,A1,A1,I3.3,'    ')
101   FORMAT(A1,A1,I3.3,I3.3,'    ')
102   FORMAT('  GRPV',I2.2,'    ')
103   FORMAT('   ',A1,A4,'    ')
104   FORMAT(' ',A1,A3,I3.3,'    ')
105   FORMAT('  ',A1,A1,A1,A3,'    ')
106   FORMAT(A1,A2,I3.3,I2.2,'    ')
107   FORMAT(A1,A3,I3.3,I3.3,I2.2)
      RETURN
      END
      
      SUBROUTINE ADVANCEDMULTARSAVE(WYN,NPTS,NCHANS,KN,ICRN,IORD,
     $                              IGBUF,NG,ISDM)
C WRITE SYSTAT DATA RECORD     
      INCLUDE 'MULTAR.INC'
      REAL WYN(NPTS,NCHANS,NCHANS,KN)
      COMMON /MBANDS/ BANDS,LBF,IPKTYPE,CRFREQ
      COMMON /ADVSV/ IASUNIT,SYSOUTFIL,IERRAD,NGO,NCO,IS,NBANDS
      CHARACTER*64 SYSOUTFIL
      INTEGER*4 IGBUF(NG)
	DIMENSION BANDS(2,8)
	LOGICAL LBF(8)
	COMPLEX*16 S(:,:)
	DIMENSION A(:,:)
	ALLOCATABLE S,A
	DOUBLE PRECISION A,RNP,PFR,VFR,STR,RLR
C	CHARACTER*12 FLABEL(MKN)
C	DATA FLABEL /'   POWSP    ','            ','    COHS    ',
C     $             '            ','     DTF    ','       V    ',
C     $             '   NNDTF    ','    dDTF    '/
C      COMPLEX CDET,CTRACE
      REAL CDET,CTRACE
      DOUBLE PRECISION CDDET,CDTRACE,DNUMPEAKS,DLRGRT,DDET,DTRACE
C      EXTERNAL CDET,CTRACE,RNUMPEAKS
      EXTERNAL DDET,DTRACE,DNUMPEAKS,DLRGRT
      COMPLEX ZS,CV
      PARAMETER (RMIS=-1.0E36)
C      PARAMETER (DMIS=-1.0D36)
      DOUBLE PRECISION DMIS
      DATA DMIS /-1.0D36/
      !PARAMETER (MAXRNP=MAXAR/2+1)
      PARAMETER (MAXRNP=1) ! Now we look only for one peak
      DIMENSION PFR(MAXRNP),VFR(MAXRNP)
      REAL W1(:,:,:),W2(:,:,:)
      DOUBLE COMPLEX WZ(:,:,:)
      ALLOCATABLE W1,W2,WZ
      INTEGER IPKTYPE(8)
      REAL CRFREQ(8)
	common /vss/ usevss
      logical usevss,ISDM
	
	ALLOCATE(S(NCHANS,NCHANS))
	ALLOCATE(A(NCHANS,NCHANS))
	ALLOCATE(W1(NPTS,NCHANS,NCHANS))
	ALLOCATE(W2(NPTS,NCHANS,NCHANS))
	ALLOCATE(WZ(NPTS,NCHANS,NCHANS))
!      CALL PUSHBUFR(IASUNIT,REAL(NCO))
!      CALL PUSHBUFR(IASUNIT,REAL(IS))
!      CALL PUSHBUFR(IASUNIT,REAL(NBANDS))
!      CALL PUSHBUFR(IASUNIT,REAL(IORD))
      CALL PUSHBUFD(IASUNIT,DBLE(NCO))
      CALL PUSHBUFD(IASUNIT,DBLE(IS))
      CALL PUSHBUFD(IASUNIT,DBLE(NBANDS))
      IF(usevss)THEN
        CALL PUSHBUFD(IASUNIT,DBLE(IORD+100))
      ELSE
        CALL PUSHBUFD(IASUNIT,DBLE(IORD))
      ENDIF
      DO 5,I=3,NG
!    5 CALL PUSHBUFR(IASUNIT,REAL(IGBUF(I)))
    5 CALL PUSHBUFD(IASUNIT,DBLE(IGBUF(I)))
	DO 1,IB=1,8
	IF(.NOT.LBF(IB))GOTO 1
!      CALL PUSHBUFR(IASUNIT,BANDS(1,IB))
!      CALL PUSHBUFR(IASUNIT,BANDS(2,IB))
      CALL PUSHBUFD(IASUNIT,DBLE(BANDS(1,IB)))
      CALL PUSHBUFD(IASUNIT,DBLE(BANDS(2,IB)))
      
	DO 10,IK=1,MKN
	SELECT CASE(IK)
	CASE(1)
C        S=CMPLX(WYN(1,:,:,IK),WYN(1,:,:,IK+1))
        W1=WYN(:,:,:,IK)
        W2=WYN(:,:,:,IK+1)
        WZ=DCMPLX(W1,W2)
        CALL CDINTEG(A,W1,W2,NCHANS,NPTS,
     $               BANDS(1,IB),BANDS(2,IB))
C        write(5103,*)a
C        write(5103,*)'                '
C       write(5103,*)SUM(ABS(CMPLX(WYN(:,:,:,IK),WYN(:,:,:,IK+1))),DIM=1)
        DO 12,J=1,NCHANS
        PFR=0D0
        RNP=DNUMPEAKS(WZ,
     $                NCHANS,NPTS,J,J,BANDS(1,IB),BANDS(2,IB),PFR,VFR,
     $                IPKTYPE(IB),CRFREQ(IB))
!        CALL PUSHBUFR(IASUNIT,RNP)
        RNP=MIN(RNP,DBLE(MAXRNP))
        IF(RNP.EQ.0D0)THEN
            RNP=1D0
            PFR(1)=DMIS
            VFR(1)=DMIS
            CALL PUSHBUFD(IASUNIT,0D0)
        ELSE            
            CALL PUSHBUFD(IASUNIT,RNP)
        ENDIF
        DO 131,IFRQ=1,NINT(RNP)
!        CALL PUSHBUFR(IASUNIT,PFR(IFRQ))
! 131    CALL PUSHBUFR(IASUNIT,VFR(IFRQ))
        CALL PUSHBUFD(IASUNIT,PFR(IFRQ))
 131    CALL PUSHBUFD(IASUNIT,VFR(IFRQ))
        DO 132,IFRQ=NINT(RNP)+1,MAXRNP
C        CALL PUSHBUFR(IASUNIT,RMIS)
C 132    CALL PUSHBUFR(IASUNIT,RMIS)
        CALL PUSHBUFD(IASUNIT,DMIS)
 132    CALL PUSHBUFD(IASUNIT,DMIS)
C      write(3427,*)PFR
  12    CONTINUE   
C        IBIDX=0
        DO 11,J=1,NCHANS
C        ZS=S(J,J)
C        CALL PUSHBUFC(IASUNIT,ZS)
C        CALL PUSHBUFR(IASUNIT,A(J,J))
        CALL PUSHBUFD(IASUNIT,A(J,J))
11      CONTINUE
C        CALL PUSHBUFR(IASUNIT,CDET(S,NCHANS))
C        CALL PUSHBUFR(IASUNIT,CTRACE(S,NCHANS))
        STR=DTRACE(A,NCHANS)
        RLR=DLRGRT(A,NCHANS)
!        CALL PUSHBUFR(IASUNIT,SDET(A,NCHANS)) ! DET destroys A
!        CALL PUSHBUFR(IASUNIT,STR)
!        CALL PUSHBUFR(IASUNIT,RLR)
        CALL PUSHBUFD(IASUNIT,DDET(A,NCHANS)) ! DET destroys A
        CALL PUSHBUFD(IASUNIT,STR)
        CALL PUSHBUFD(IASUNIT,RLR)
	CASE(3)
C        S=CMPLX(WYN(1,:,:,IK),WYN(1,:,:,IK+1))
        W1=WYN(:,:,:,IK)
        W2=WYN(:,:,:,IK+1)
        CALL CDINTEG(A,W1,W2,NCHANS,NPTS,
     $              BANDS(1,IB),BANDS(2,IB))
        FORALL(I=1:NCHANS,J=1:NCHANS,I.GT.J)A(I,J)=A(J,I)
        DO 31,J=1,NCHANS
C        CALL PUSHBUFR(IASUNIT,A(J,J))
        CALL PUSHBUFD(IASUNIT,A(J,J))
31      CONTINUE
        FORALL(I=1:NCHANS,J=1:NCHANS,I.GT.J)A(I,J)=A(J,I)
C        CALL PUSHBUFR(IASUNIT,CDET(S,NCHANS))
C        CALL PUSHBUFR(IASUNIT,CTRACE(S,NCHANS))
!        STR=STRACE(A,NCHANS)
!        RLR=RLRGRT(A,NCHANS)
!        CALL PUSHBUFR(IASUNIT,SDET(A,NCHANS)) ! DET destroys A
!        CALL PUSHBUFR(IASUNIT,STR)
!       CALL PUSHBUFR(IASUNIT,RLR)
        STR=DTRACE(A,NCHANS)
        RLR=DLRGRT(A,NCHANS)
        CALL PUSHBUFD(IASUNIT,DDET(A,NCHANS)) ! DET destroys A
        CALL PUSHBUFD(IASUNIT,STR)
        CALL PUSHBUFD(IASUNIT,RLR)
      CASE(2,4)  
C        GOTO 10
      CASE(5)         ! DTF
        IF(ISDM)THEN
!           CALL SINTEG(A,WYN(:,:,:,IK),NCHANS,NPTS,BANDS(1,IB),BANDS(2,IB))
            W1=WYN(:,:,:,IK)
            W2=0.
            WZ=DCMPLX(W1,W2)
            CALL DINTEG(A,W1,NCHANS,NPTS,BANDS(1,IB),BANDS(2,IB))
            DO 51,I=1,NCHANS
            DO 51,J=1,NCHANS
!        IF(I.NE.J)CALL PUSHBUFR(IASUNIT,A(J,I))
            IF(I.NE.J)THEN
                CALL PUSHBUFD(IASUNIT,A(J,I))

                PFR=0D0
                RNP=DNUMPEAKS(WZ,
     $                NCHANS,NPTS,J,I,BANDS(1,IB),BANDS(2,IB),PFR,VFR,
     $                IPKTYPE(IB),CRFREQ(IB))
                RNP=MIN(RNP,DBLE(MAXRNP))
                IF(RNP.EQ.0D0)THEN
                    RNP=1D0
                    PFR(1)=DMIS
                    VFR(1)=DMIS
                ENDIF
                CALL PUSHBUFD(IASUNIT,RNP)
                DO 531,IFRQ=1,NINT(RNP)
                CALL PUSHBUFD(IASUNIT,PFR(IFRQ))
 531            CALL PUSHBUFD(IASUNIT,VFR(IFRQ))
                DO 532,IFRQ=NINT(RNP)+1,MAXRNP
                CALL PUSHBUFD(IASUNIT,DMIS)
 532            CALL PUSHBUFD(IASUNIT,DMIS)
            ENDIF
51          CONTINUE
        ENDIF
      CASE(7)         ! Non-normalized DTF
        IF(ISDM)THEN
!           CALL SINTEG(A,WYN(:,:,:,IK),NCHANS,NPTS,BANDS(1,IB),BANDS(2,IB))
            W1=WYN(:,:,:,IK)
            W2=0.
            WZ=DCMPLX(W1,W2)
            CALL DINTEG(A,W1,NCHANS,NPTS,BANDS(1,IB),BANDS(2,IB))
            DO 71,I=1,NCHANS
            DO 71,J=1,NCHANS
!        IF(I.NE.J)CALL PUSHBUFR(IASUNIT,A(J,I))
            IF(I.NE.J)THEN
                CALL PUSHBUFD(IASUNIT,A(J,I))

                PFR=0D0
                RNP=DNUMPEAKS(WZ,
     $                NCHANS,NPTS,J,I,BANDS(1,IB),BANDS(2,IB),PFR,VFR,
     $                IPKTYPE(IB),CRFREQ(IB))
                RNP=MIN(RNP,DBLE(MAXRNP))
                IF(RNP.EQ.0D0)THEN
                    RNP=1D0
                    PFR(1)=DMIS
                    VFR(1)=DMIS
                ENDIF
                CALL PUSHBUFD(IASUNIT,RNP)
                DO 731,IFRQ=1,NINT(RNP)
                CALL PUSHBUFD(IASUNIT,PFR(IFRQ))
 731            CALL PUSHBUFD(IASUNIT,VFR(IFRQ))
                DO 732,IFRQ=NINT(RNP)+1,MAXRNP
                CALL PUSHBUFD(IASUNIT,DMIS)
 732            CALL PUSHBUFD(IASUNIT,DMIS)
            ENDIF
71          CONTINUE
        ENDIF
      CASE DEFAULT
        CONTINUE
      ENDSELECT
10    CONTINUE
1     CONTINUE	
!      CALL FLUSHBUF(IASUNIT)
      CALL FLUSHBUFD(IASUNIT)
C      WRITE(IASUNIT)CHAR(130)
      DEALLOCATE(WZ)
      DEALLOCATE(W2)
      DEALLOCATE(W1)
      DEALLOCATE(A)
      DEALLOCATE(S)
100   FORMAT(A12\)
101   FORMAT(\1x,G10.4\)
102   FORMAT(A12,G10.4)
201   FORMAT(\2(1x,G10.4)\)
202   FORMAT(A12,2(G10.4,1X))
103   FORMAT(A12,I6)
      END
      

      SUBROUTINE ADVMCLSE
C CLOSE SYSTAT FILE      
      COMMON /ADVSV/ IASUNIT,SYSOUTFIL,IERRAD
      CHARACTER*64 SYSOUTFIL
!      CALL FLUSHBUF(IASUNIT)
      CALL FLUSHBUFD(IASUNIT)
      WRITE(IASUNIT)CHAR(130)  ! SYSTAT End-of-file
      CLOSE(UNIT=IASUNIT)
      RETURN
      END
      
      
C      COMPLEX FUNCTION CDET(A,M)
      REAL FUNCTION CDET(A,M)
C CALCULATES ABS(DETERMINANT) OF COMPLEX MATRIX A      
      COMPLEX A(M,M),Z
      INTEGER IPIV(:)
      ALLOCATABLE IPIV
C      CDET=(0.,0.)
      CDET=0.
      ALLOCATE(IPIV(M))
      CALL CGETRF(M,M,A,M,IPIV,INFO)
      IF(INFO)10,20,10
20    Z=A(1,1)
      DO 1,I=2,M
1     Z=Z*A(I,I)
C      CDET=Z
      FORALL(I=1:M,IPIV(I).NE.I)IPIV(I)=0
      P=1.
      IF(MOD(COUNT(IPIV.EQ.0),2).NE.0)P=-1.
      CDET=CABS(Z)*P
10    DEALLOCATE(IPIV)
      RETURN
      END
      
C      COMPLEX FUNCTION CTRACE(A,M)
      REAL FUNCTION CTRACE(A,M)
C CALCULATES ABS(TRACE) OF COMPLEX MATRIX A      
      COMPLEX A(M,M),Z
      Z=A(1,1)
      DO 1,I=2,M
1     Z=Z+A(I,I)
C      CTRACE=Z
      CTRACE=CABS(Z)
      RETURN
      END
      
      REAL FUNCTION SDET(A,M)
C CALCULATES DETERMINANT OF REAL MATRIX A      
      REAL A(M,M),Z
      INTEGER IPIV(:)
      ALLOCATABLE IPIV
      SDET=0.
      ALLOCATE(IPIV(M))
      CALL SGETRF(M,M,A,M,IPIV,INFO)
      IF(INFO)10,20,10
20    Z=A(1,1)
      DO 1,I=2,M
1     Z=Z*A(I,I)
      FORALL(I=1:M,IPIV(I).NE.I)IPIV(I)=0
      P=1.
      IF(MOD(COUNT(IPIV.EQ.0),2).NE.0)P=-1.
      SDET=Z*P
10    DEALLOCATE(IPIV)
      RETURN
      END
      
      REAL FUNCTION STRACE(A,M)
C CALCULATES TRACE OF REAL MATRIX A      
      REAL A(M,M),Z
      Z=A(1,1)
      DO 1,I=2,M
1     Z=Z+A(I,I)
      STRACE=Z
      RETURN
      END      
      
      DOUBLE PRECISION FUNCTION DDET(A,M)
C CALCULATES DETERMINANT OF DOUBLE PRECISION MATRIX A      
      DOUBLE PRECISION A(M,M),Z,P
      INTEGER IPIV(:)
      ALLOCATABLE IPIV
      DDET=0D0
      ALLOCATE(IPIV(M))
      CALL DGETRF(M,M,A,M,IPIV,INFO)
      IF(INFO)10,20,10
20    Z=A(1,1)
      DO 1,I=2,M
1     Z=Z*A(I,I)
      FORALL(I=1:M,IPIV(I).NE.I)IPIV(I)=0
      P=1D0
      IF(MOD(COUNT(IPIV.EQ.0),2).NE.0)P=-1D0
      DDET=Z*P
10    DEALLOCATE(IPIV)
      RETURN
      END
      
      DOUBLE PRECISION FUNCTION DTRACE(A,M)
C CALCULATES TRACE OF DOUBLE PRECISION MATRIX A      
      DOUBLE PRECISION A(M,M),Z
      Z=A(1,1)
      DO 1,I=2,M
1     Z=Z+A(I,I)
      DTRACE=Z
      RETURN
      END      
      
      SUBROUTINE WRLECHAR(IU,LEN,STRG)
C WRITES STRING STRG AS A SYSTAT RECORD OF LENGTH LEN
      CHARACTER*(*) STRG
      INTEGER*1 LEN
      WRITE(IU)CHAR(LEN)
      ILG=MIN(LEN_TRIM(STRG),LEN)
      WRITE(IU)STRG(1:ILG)
C      write(5002,*)STRG(1:ILG)
      WRITE(IU)(' ',I=ILG+1,LEN)
      WRITE(IU)CHAR(LEN)
      RETURN
      END
      
!      SUBROUTINE PUSHBUFR(IU,V)
!C BUFFERED WRITE OF THE REAL VARIABLE V TO THE SYSTAT FILE IU
!      COMMON /SYBUF/ BUFFER,IBPNT
!      DATA IBPNT /0/
!      REAL BUFFER(32),V
!      IBPNT=IBPNT+1
!      BUFFER(IBPNT)=V
!      IF(IBPNT.EQ.32)THEN
!        WRITE(IU)CHAR(129)
!        WRITE(IU)BUFFER
!        WRITE(IU)CHAR(129)
!        IBPNT=0
!      ENDIF
!      RETURN
!      END
!      
!      SUBROUTINE PUSHBUFC(IU,V)
!C BUFFERED WRITE OF THE COMPLEX VARIABLE V TO THE SYSTAT FILE IU
!      COMPLEX V
!      CALL PUSHBUFR(IU,REAL(V))
!      CALL PUSHBUFR(IU,AIMAG(V))
!      RETURN
!      END
!
!      SUBROUTINE FLUSHBUF(IU)
!C WRITE REMAINING VALUES TO THE SYSTAT FILE IU
!      COMMON /SYBUF/ BUFFER,IBPNT
!      REAL BUFFER(32)
!      IF(IBPNT.EQ.0)RETURN
!      WRITE(IU)CHAR(IBPNT*4)
!      WRITE(IU)(BUFFER(I),I=1,IBPNT)
!      WRITE(IU)CHAR(IBPNT*4)
!      IBPNT=0
!      RETURN
!      END

      SUBROUTINE PUSHBUFD(IU,V)
C BUFFERED WRITE OF THE DOUBLE PRECISION VARIABLE V TO THE SYSTAT FILE IU
      COMMON /SYBUF/ BUFFER,IBPNT
C      DATA IBPNT /0/
      DOUBLE PRECISION BUFFER(16),V
      IBPNT=IBPNT+1
      BUFFER(IBPNT)=V
C      write(5003,*)v
      IF(IBPNT.GE.16)THEN
        WRITE(IU)CHAR(129)
        WRITE(IU)BUFFER
        WRITE(IU)CHAR(129)
        IBPNT=0
      ENDIF
      RETURN
      END
      
      SUBROUTINE PUSHBUFZ(IU,V)
C BUFFERED WRITE OF THE COMPLEX VARIABLE V TO THE SYSTAT FILE IU
      COMPLEX*16 V
      CALL PUSHBUFD(IU,DBLE(V))
      CALL PUSHBUFD(IU,DIMAG(V))
      RETURN
      END

      SUBROUTINE FLUSHBUFD(IU)
C WRITE REMAINING VALUES TO THE SYSTAT FILE IU
      COMMON /SYBUF/ BUFFER,IBPNT
      DOUBLE PRECISION BUFFER(16)
      IF(IBPNT.EQ.0)RETURN
      WRITE(IU)CHAR(IBPNT*8)
      WRITE(IU)(BUFFER(I),I=1,IBPNT)
      WRITE(IU)CHAR(IBPNT*8)
      IBPNT=0
      RETURN
      END

      SUBROUTINE SINTEG(AO,AI,NCHANS,NPTS,X1,X2)
C CALCULATES INTEGRAL OF REAL MATRIX AI IN RANGE X1:X2
C RESULT IN MATRIX AO      
	INCLUDE 'MULTAR.INC'
      LOGICAL LCORR,RCORR
      DIMENSION AO(NCHANS,NCHANS)
      DIMENSION AI(NPTS,NCHANS,NCHANS)
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
      
      LCORR=.TRUE.
      RCORR=.TRUE.
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      IF(ABS(D1-ANINT(D1)).LT.0.05*DX)THEN
        D1=ANINT(D1)
        N1=D1+1
        LCORR=.FALSE.
      ENDIF  
      IF(ABS(D2-ANINT(D2)).LT.0.05*DX)THEN
        D2=ANINT(D2)
        N2=D2+1
        RCORR=.FALSE.
      ENDIF  
      IF(LCORR)THEN
        N1=INT(D1)+1+1
        XA=RMINF+N1*DX-X1
        XQ=XA/DX
        AO=(AI(N1,:,:)*(1.-XQ)+AI(N1-1,:,:)*XQ)/(2.*XA)
      ELSE
        N1=INT(D1)+1
        AO=.5*AI(N1,:,:)
        N1=N1+1
      ENDIF
      IF(RCORR)THEN
        N2=INT(D2)+1
        XB=X2-(RMINF+N2*DX)
        XQ=XB/DX
        AO=AO+(AI(N2,:,:)*(1.-XQ)+AI(N2+1,:,:)*XQ)/(2.*XB)
      ELSE
        N2=INT(D2)+1
        AO=AO+.5*AI(N2,:,:)
        N2=N2-1
      ENDIF
      AO=AO+SUM(AI(N1:N2,:,:),DIM=1)/DX
      RETURN
      END
      
      SUBROUTINE DINTEG(AO,AI,NCHANS,NPTS,X1,X2)
C CALCULATES INTEGRAL OF REAL MATRIX AI IN RANGE X1:X2
C DOUBLE PRECISION RESULT IN MATRIX AO      
	INCLUDE 'MULTAR.INC'
      LOGICAL LCORR,RCORR
      DOUBLE PRECISION AO(NCHANS,NCHANS)
      DIMENSION AI(NPTS,NCHANS,NCHANS)
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
	DOUBLE PRECISION XQ,XA,XB,DX
      
      LCORR=.TRUE.
      RCORR=.TRUE.
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/DBLE(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      IF(ABS(D1-ANINT(D1)).LT.0.05*DX)THEN
        D1=ANINT(D1)
        N1=D1+1
        LCORR=.FALSE.
      ENDIF  
      IF(ABS(D2-ANINT(D2)).LT.0.05*DX)THEN
        D2=ANINT(D2)
        N2=D2+1
        RCORR=.FALSE.
      ENDIF  
      IF(LCORR)THEN
        N1=INT(D1)+1+1
        XA=RMINF+N1*DX-X1
        XQ=XA/DX
        AO=(AI(N1,:,:)*(1.-XQ)+AI(N1-1,:,:)*XQ)/(2.*XA)
      ELSE
        N1=INT(D1)+1
        AO=.5*AI(N1,:,:)
        N1=N1+1
      ENDIF
      IF(RCORR)THEN
        N2=INT(D2)+1
        XB=X2-(RMINF+N2*DX)
        XQ=XB/DX
        AO=AO+(AI(N2,:,:)*(1.-XQ)+AI(N2+1,:,:)*XQ)/(2.*XB)
      ELSE
        N2=INT(D2)+1
        AO=AO+.5*AI(N2,:,:)
        N2=N2-1
      ENDIF
      AO=AO+SUM(AI(N1:N2,:,:),DIM=1)/DX
      RETURN
      END
      
      SUBROUTINE CINTEG(AO,AIR,AII,NCHANS,NPTS,X1,X2)
C CALCULATES ABS(INTEGRAL) OF COMPLEX MATRIX IN RANGE X1:X2
C AIR AND AII CONTAIN MATRICES OF REAL AND IMAGINARY PATRS
C OF INPUT MATRIX, RESPECTIVELY
C RESULT IN MATRIX AO      
	INCLUDE 'MULTAR.INC'
      LOGICAL LCORR,RCORR
      DIMENSION AO(NCHANS,NCHANS)
      DIMENSION AIR(NPTS,NCHANS,NCHANS),AII(NPTS,NCHANS,NCHANS)
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
      
      LCORR=.TRUE.
      RCORR=.TRUE.
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      IF(ABS(D1-ANINT(D1)).LT.0.05*DX)THEN
        D1=ANINT(D1)
        N1=D1+1
        LCORR=.FALSE.
      ENDIF  
      IF(ABS(D2-ANINT(D2)).LT.0.05*DX)THEN
        D2=ANINT(D2)
        N2=D2+1
        RCORR=.FALSE.
      ENDIF  
      IF(LCORR)THEN
        N1=INT(D1)+1+1
        XA=RMINF+N1*DX-X1
        XQ=XA/DX
        AO=(CABS(CMPLX(AIR(N1,:,:),AII(N1,:,:)))*(1.-XQ)+
     $      CABS(CMPLX(AIR(N1-1,:,:),AII(N1-1,:,:)))*XQ)*XA/2.
      ELSE
        N1=INT(D1)+1
        AO=.5*CABS(CMPLX(AIR(N1,:,:),AII(N1,:,:)))
        N1=N1+1
      ENDIF
      IF(RCORR)THEN
        N2=INT(D2)+1
        XB=X2-(RMINF+N2*DX)
        XQ=XB/DX
        AO=AO+(CABS(CMPLX(AIR(N2,:,:),AII(N2,:,:)))*(1.-XQ)+
     $         CABS(CMPLX(AIR(N2+1,:,:),AII(N2+1,:,:)))*XQ)*XB/2.
      ELSE
        N2=INT(D2)+1
        AO=AO+.5*CABS(CMPLX(AIR(N2,:,:),AII(N2,:,:)))
        N2=N2-1
      ENDIF
      AO=AO+SUM(CABS(CMPLX(AIR(N1:N2,:,:),AII(N1:N2,:,:))),DIM=1)*DX
      AO=AO/(RMXF-RMINF)
      RETURN
      END      
      
      SUBROUTINE CDINTEG(AO,AIR,AII,NCHANS,NPTS,X1,X2)
C CALCULATES ABS(INTEGRAL) OF COMPLEX MATRIX IN RANGE X1:X2
C AIR AND AII CONTAIN MATRICES OF REAL AND IMAGINARY PATRS
C OF INPUT MATRIX, RESPECTIVELY
C DOUBLE PRECISION RESULT IN MATRIX AO      
	INCLUDE 'MULTAR.INC'
      LOGICAL LCORR,RCORR
      DOUBLE PRECISION AO(NCHANS,NCHANS)
      REAL AIR(NPTS,NCHANS,NCHANS),AII(NPTS,NCHANS,NCHANS)
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
	DOUBLE PRECISION DX,XQ,XA,XB
      
      LCORR=.TRUE.
      RCORR=.TRUE.
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      IF(ABS(D1-ANINT(D1)).LT.0.05*DX)THEN
        D1=ANINT(D1)
        N1=D1+1
        LCORR=.FALSE.
      ENDIF  
      IF(ABS(D2-ANINT(D2)).LT.0.05*DX)THEN
        D2=ANINT(D2)
        N2=D2+1
        RCORR=.FALSE.
      ENDIF  
      IF(LCORR)THEN
        N1=INT(D1)+1+1
        XA=RMINF+N1*DX-X1
        XQ=XA/DX
        AO=(CDABS(DCMPLX(AIR(N1,:,:),AII(N1,:,:)))*(1.-XQ)+
     $      CDABS(DCMPLX(AIR(N1-1,:,:),AII(N1-1,:,:)))*XQ)*XA/2.
      ELSE
        N1=INT(D1)+1
        AO=.5*CABS(CMPLX(AIR(N1,:,:),AII(N1,:,:)))
        N1=N1+1
      ENDIF
      IF(RCORR)THEN
        N2=INT(D2)+1
        XB=X2-(RMINF+N2*DX)
        XQ=XB/DX
        AO=AO+(CDABS(DCMPLX(AIR(N2,:,:),AII(N2,:,:)))*(1.-XQ)+
     $         CDABS(DCMPLX(AIR(N2+1,:,:),AII(N2+1,:,:)))*XQ)*XB/2.
      ELSE
        N2=INT(D2)+1
        AO=AO+.5*CDABS(DCMPLX(AIR(N2,:,:),AII(N2,:,:)))
        N2=N2-1
      ENDIF
      AO=AO+SUM(CDABS(DCMPLX(AIR(N1:N2,:,:),AII(N1:N2,:,:))),DIM=1)*DX
      AO=AO/(RMXF-RMINF)
      RETURN
      END      
      
      SUBROUTINE CINTEGT(AO,AIR,AII,NCHANS,NPTS,X1,X2)
C NOT USED
	INCLUDE 'MULTAR.INC'
      LOGICAL LCORR,RCORR
      DIMENSION AO(NCHANS,NCHANS)
      DIMENSION AIR(NPTS,NCHANS,NCHANS),AII(NPTS,NCHANS,NCHANS)
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
      
      LCORR=.TRUE.
      RCORR=.TRUE.
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      IF(ABS(D1-ANINT(D1)).LT.0.05*DX)THEN
        D1=ANINT(D1)
        N1=D1+1
        LCORR=.FALSE.
      ENDIF  
      IF(ABS(D2-ANINT(D2)).LT.0.05*DX)THEN
        D2=ANINT(D2)
        N2=D2+1
        RCORR=.FALSE.
      ENDIF  
      IF(LCORR)THEN
        N1=INT(D1)+1+1
        XA=RMINF+N1*DX-X1
        XQ=XA/DX
        AO=(CABS(CMPLX(AIR(N1,:,:),AII(N1,:,:)))*(1.-XQ)+
     $      CABS(CMPLX(AIR(N1-1,:,:),AII(N1-1,:,:)))*XQ)*XA/2.
      ELSE
        N1=INT(D1)+1
        AO=.5*CABS(CMPLX(AIR(N1,:,:),AII(N1,:,:)))
        N1=N1+1
      ENDIF
      IF(RCORR)THEN
        N2=INT(D2)+1
        XB=X2-(RMINF+N2*DX)
        XQ=XB/DX
        AO=AO+(CABS(CMPLX(AIR(N2,:,:),AII(N2,:,:)))*(1.-XQ)+
     $         CABS(CMPLX(AIR(N2+1,:,:),AII(N2+1,:,:)))*XQ)*XB/2.
      ELSE
        N2=INT(D2)+1
        AO=AO+.5*CABS(CMPLX(AIR(N2,:,:),AII(N2,:,:)))
        N2=N2-1
      ENDIF
      AO=AO+SUM(CABS(CMPLX(AIR(N1:N2,:,:),AII(N1:N2,:,:))),DIM=1)*DX
      AO=AO/(RMXF-RMINF)
      RETURN
      END            
      
      FUNCTION RNUMPEAKS(S,NCHANS,NPTS,ICHAN,X1,X2,PFR,VFR)
C RETURNS NUMBER OF MAXIMA OF ABS(DIAGONAL ELEMENT) OF 
C COMPLEX MATRIX S WITHIN X1:X2 FREQUENCY RANGE
C ON OUTPUT THE PEAKS' FREQUENCIES ARE STORED IN PFR
C ADDITIONALLY EACH PEAK AREA IS STORED IN VFR
	INCLUDE 'MULTAR.INC'
      COMPLEX S(NPTS,NCHANS,NCHANS)
      LOGICAL ISUP1,ISUP2
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
	DIMENSION PFR(*),VFR(*)
	EXTERNAL PEAKAREA
	DIMENSION POUT(2,40)
      
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      N1=ANINT(D1)+1
      N2=ANINT(D2)+1

      V1=CABS(S(N1,ICHAN,ICHAN))
      V2=CABS(S(N1+1,ICHAN,ICHAN))
      ISUP1=V2.GT.V1
      RNUMPEAKS=0.
      DO 1,I=N1+2,N2
      V1=V2
      V2=CABS(S(I,ICHAN,ICHAN))
      ISUP2=V2.GT.V1
      IF(ISUP1.AND..NOT.ISUP2)THEN
        RNUMPEAKS=RNUMPEAKS+1.
        PFR(RNUMPEAKS)=RMINF+FLOAT(I-1)*DX
        VFR(RNUMPEAKS)=PEAKAREA(I,PFR(NUMPEAKS),S(:,ICHAN,ICHAN),NPTS)
      ENDIF
      ISUP1=ISUP2
    1 CONTINUE
! not counting maxima at the borders of frq range
      RETURN
      END
      
      FUNCTION DNUMPEAKS(S,NCHANS,NPTS,ICHAN,JCHAN,X1,X2,PFR,VFR,
     $                   IPKTYPE,CRFREQ)
      DOUBLE PRECISION DNUMPEAKS
C RETURNS NUMBER OF MAXIMA OF ABS(DIAGONAL ELEMENT) OF 
C COMPLEX MATRIX S WITHIN X1:X2 FREQUENCY RANGE
C ON OUTPUT THE PEAKS' FREQUENCIES ARE STORED IN PFR
C ADDITIONALLY EACH PEAK AREA IS STORED IN VFR
	INCLUDE 'MULTAR.INC'
      COMPLEX*16 S(NPTS,NCHANS,NCHANS)
      LOGICAL ISUP1,ISUP2
	COMMON/COHPAR/WHICH,RMINF,RMXF      ! LAST 2 DOUBLE PRECISION
	LOGICAL WHICH(MKN+1)
	DOUBLE PRECISION RMINF,RMXF
	DOUBLE PRECISION PFR(*),VFR(*)
	EXTERNAL DPEAKAREA
	DOUBLE PRECISION V1,V2,DX
	REAL WORK(:),PKMEAS(5),POUT(2,40),DIST(40),RESLT(3),WORK2(:)
	INTEGER PI(1)
	ALLOCATABLE WORK,PINDX,WORK2
      REAL CRFREQ
      
      IF(X1.LT.RMINF)X1=RMINF
      IF(X2.GT.RMXF)X2=RMXF
      DX=(RMXF-RMINF)/REAL(NPTS-1)
      D1=(X1-RMINF)/DX
      D2=(X2-RMINF)/DX
      N1=ANINT(D1)+1
      N2=ANINT(D2)+1

!      V1=CDABS(S(N1,ICHAN,ICHAN))
!      V2=CDABS(S(N1+1,ICHAN,ICHAN))
!      ISUP1=V2.GT.V1
!      DNUMPEAKS=0D0
!      DO 1,I=N1+2,N2
!      V1=V2
!      V2=CDABS(S(I,ICHAN,ICHAN))
!      ISUP2=V2.GT.V1
!      IF(ISUP1.AND..NOT.ISUP2)THEN
!        DNUMPEAKS=DNUMPEAKS+1D0
!        PFR(DNUMPEAKS)=RMINF+DBLE(I-1)*DX
!        VFR(DNUMPEAKS)=DPEAKAREA(I,SNGL(PFR(DNUMPEAKS)),
!     $                           S(:,ICHAN,ICHAN),NPTS)
!      ENDIF
!      ISUP1=ISUP2
!    1 CONTINUE
    
      NTB=N2-N1+1
      ALLOCATE(WORK(NTB))
      ALLOCATE(WORK2(NTB*50))  ! Enough?
      WORK=CDABS(S(N1:N2,ICHAN,JCHAN))
      XMIN=MINVAL(WORK)
      CALL PEKID(WORK,NTB,-1.0,XMIN,-1.0,POUT,NPEAK)
      PKMEAS(1)=NPEAK
      DNUMPEAKS=0D0
	IF(NPEAK.GT.0)THEN
        DNUMPEAKS=1D0
        SELECT CASE(IPKTYPE)
            CASE(1)  ! Highest
                PI=MAXLOC(POUT(2,1:NPEAK))
            CASE(2)  ! Closest
                FORALL(II=1:NPEAK)
     $                  DIST(II)=ABS(POUT(1,II)-CRFREQ)
                PI=MINLOC(DIST(1:NPEAK))
        END SELECT
        PVL=POUT(2,PI(1))
        LOC=POUT(1,PI(1))  
C THIS NEXT ROUTINE WILL REDUCE THE SELECTED PEAK TO CANONICAL FORM
	  CALL CANFRM(WORK(1),NTB,LOC,WORK2,LW)
C THIS NEXT ROUTINE GENERATES THE MEASURES
	  CALL MEASUR(WORK2,LW,RESLT)
C CONVERT ORDINAL UNITS TO FREQUENCIES FOR POSITION & WIDTH
		PKMEAS(2)=X1+DBLE(LOC-1)*DX
		RESLT(3)=RESLT(3)*DX
C COPY RESULTS INTO PKMEAS
        FORALL(J=1:3)PKMEAS(J+2)=RESLT(J)
        PFR(1)=PKMEAS(2)
        VFR(1)=PKMEAS(4)
      ENDIF  
      DEALLOCATE(WORK2)
      DEALLOCATE(WORK)
   
! not counting maxima at the borders of frq range
      RETURN
      END
      
      FUNCTION RLRGRT(A,NCHANS)
C RETURNS LARGEST EIGENVALUE FOR THE REAL MATRIX A
      DIMENSION A(NCHANS,NCHANS)
      DIMENSION Z(1)
      DIMEnSION W(1)
      DIMENSION ISUPPZ(2)
      DIMENSION WORK(:),IWORK(:),A2(:,:)
      ALLOCATABLE WORK,IWORK,A2

      LWORK=-1
      LIWORK=-1
      ABSTOL=0.
      CALL SSYEVR('N','I','L',NCHANS,A,NCHANS,VL,VU,NCHANS,NCHANS,
     $            ABSTOL,M,W,Z,1,ISUPPZ,WORK1,LWORK,
     $            IWORK1,LIWORK,INFO)
      IF(INFO.NE.0)GOTO 10
      LWORK=INT(WORK1)
      LIWORK=IWORK1
      ALLOCATE(A2(NCHANS,NCHANS))
      ALLOCATE(WORK(LWORK))
      ALLOCATE(IWORK(LIWORK))
      A2=A
      CALL SSYEVR('N','I','L',NCHANS,A,NCHANS,VL,VU,NCHANS,NCHANS,
     $            ABSTOL,M,W,Z,1,ISUPPZ,WORK,LWORK,
     $            IWORK,LIWORK,INFO)
      DEALLOCATE(IWORK)
      DEALLOCATE(WORK)
      A=A2
      DEALLOCATE(A2)
      IF(INFO.NE.0.OR.M.EQ.0)GOTO 10
C      RLRGRT=MAXVAL(W)
      RLRGRT=W(1)
      RETURN
10    RLRGRT=0.
      RETURN      
      END
      
      DOUBLE PRECISION FUNCTION DLRGRT(A,NCHANS)
C RETURNS LARGEST EIGENVALUE FOR THE REAL MATRIX A
      DOUBLE PRECISION A(NCHANS,NCHANS)
      DOUBLE PRECISION Z(1)
      DOUBLE PRECISION W(1)
      DIMENSION ISUPPZ(2),IWORK(:)
      DOUBLE PRECISION WORK(:),A2(:,:)
      ALLOCATABLE WORK,IWORK,A2
      DOUBLE PRECISION ABSTOL,VL,VU,WORK1

      LWORK=-1
      LIWORK=-1
      ABSTOL=0D0
      CALL DSYEVR('N','I','L',NCHANS,A,NCHANS,VL,VU,NCHANS,NCHANS,
     $            ABSTOL,M,W,Z,1,ISUPPZ,WORK1,LWORK,
     $            IWORK1,LIWORK,INFO)
      IF(INFO.NE.0)GOTO 10
      LWORK=INT(WORK1)
      LIWORK=IWORK1
      ALLOCATE(A2(NCHANS,NCHANS))
      ALLOCATE(WORK(LWORK))
      ALLOCATE(IWORK(LIWORK))
      A2=A
      CALL DSYEVR('N','I','L',NCHANS,A,NCHANS,VL,VU,NCHANS,NCHANS,
     $            ABSTOL,M,W,Z,1,ISUPPZ,WORK,LWORK,
     $            IWORK,LIWORK,INFO)
      DEALLOCATE(IWORK)
      DEALLOCATE(WORK)
      A=A2
      DEALLOCATE(A2)
      IF(INFO.NE.0.OR.M.EQ.0)GOTO 10
C      RLRGRT=MAXVAL(W)
      DLRGRT=W(1)
      RETURN
10    DLRGRT=0D0
      RETURN      
      END
      
      REAL FUNCTION PEAKAREA(IPOS,FPOS,S,NPTS)
	INCLUDE 'MULTAR.INC'
      COMPLEX S(NPTS)
      DIMENSION WORK(MNPTS),RES(3)
      PARAMETER (RMIS=-1.0E36)
      REAL SS(:)
      ALLOCATABLE SS

      ALLOCATE(SS(NPTS))
      SS=CABS(S)
	CALL CANFRM(SS,NPTS,IPOS-1,WORK,LW)
	CALL MEASUR(WORK,LW,RES)
C      RES(3)=RES(3)*DX
      PEAKAREA=RES(2)
      DEALLOCATE(SS)
      RETURN
      END      
      
      DOUBLE PRECISION FUNCTION DPEAKAREA(IPOS,FPOS,S,NPTS)
	INCLUDE 'MULTAR.INC'
      COMPLEX*16 S(NPTS)
      DIMENSION WORK(MNPTS),RES(3)
      PARAMETER (RMIS=-1.0E36)
      REAL SS(:)
      ALLOCATABLE SS

      ALLOCATE(SS(NPTS))
      SS=SNGL(CDABS(S))
	CALL CANFRM(SS,NPTS,IPOS-1,WORK,LW)
	CALL MEASUR(WORK,LW,RES)
C      RES(3)=RES(3)*DX
      DPEAKAREA=DBLE(RES(2))
      DEALLOCATE(SS)
      RETURN
      END      

!C NOW FIND PEAKS USING DEB'S PEAK-FINDER
!	CALL PEKID(WORK,NTB,-1.0,XMIN,-1.0,POUT,NPEAK)
!CD    WRITE(IOX,506)((POUT(I,J),I=1,2),J=1,3)
!CD506 FORMAT(' POUT:'/1X,6G12.4)
!C FOR EACH OF THE NPEAK MAXIMA THAT FALLS WITHIN BAND, CALCULATE  
!C PEAK MEASURES. TEMPORARILY OBVIATE 0-PEAK CASES
!	IF(NPEAK.GT.0)GO TO 35
!31    CONTINUE
!D     WRITE(IOX,504)L
!D504  FORMAT('  NO PEAKS IN BAND',I3)
!	GO TO 40
!35    NPK=0 !INDEX & COUNTER FOR IN-BAND PEAKS
!	DO 80 M=1,NPEAK
!C THIS ROUTINE WILL REDUCE PEAK TO CANONICAL FORM
!	LOC=POUT(1,M)
!	IF(LOC.LE.NADD)GO TO 80
!	IF(LOC.GT.LAST)GO TO 60
!	NPK=NPK+1
!	CALL CANFRM(WORK(1),NTB,LOC,WORK(NTB+1),LW)
!CD    WRITE(IOX,500)(WORK(I),I=NTB+1,NTB+LW)
!500   FORMAT('  WORK OUTPUT:'/(1X,6G12.4))
!C THIS ROUTINE GENERATES THE MEASURES
!	CALL MEASUR(WORK(NTB+1),LW,RESULT)
!C CONVERT ORDINAL UNITS TO FREQUENCIES FOR POSITION & WIDTH
!		PKMEAS(NPK,1)=VNS(L)+(LOC-1)*DX
!		RESULT(3)=RESULT(3)*DX
!C COPY RESULTS INTO ROW NPK OF PKMEAS
!	DO 55 J=1,3
!55    PKMEAS(NPK,J+1)=RESULT(J)
!D     WRITE(IOX,501)L,NPK,(PKMEAS(NPK,J),J=1,4)
!C IN HERE GOES STUFF TO DECIDE WHAT WE KEEP
!80    CONTINUE
!60    IF(NPK)31,31,40
!C MOVE PEAK MEASURES FOR THIS BAND TO OUTPUT BUFFER
!40    X=FLOAT(NPK)
!	IBUFO(N)=IX       ! N STARTS AT NSO OUTSIDE BAND LOOP
!	N=N+1
!	DO 45 I=1,NPK
!D501  FORMAT('  BAND=',I2,' PEAK=',I2,4(2XG12.4))
!	DO 45 J=1,4
!	X=PKMEAS(I,J)
!	IBUFO(N)=IX
! 45   N=N+1
! 90   CONTINUE
!	CALL PUTSTD(IBUFO)
!	RETURN
!95    CONTINUE
!D     CLOSE(UNIT=IOX)
!	RETURN
!	END
!     