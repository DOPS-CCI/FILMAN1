C  GSTRNG.FOR-  COMPUTES STRINGING ANALYSIS FOR DICHOTOMOUS GROUP

C VARS, INCLUDING WALD-WOLFOWITZ TEST PLUS STRING-LENGTH DATA.

C SEE BURDICK & KELLY HANDBOOK CHAPTER PP105FF FOR DETAILS.

	SUBROUTINE GSTRNG

      INCLUDE 'MAX.INC'

	CHARACTER*1 INPFIL(64)

	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ

	COMMON /FLDES/NG,NA,NC,ND,NF,NP,NR,IS,IBUF(IOMAX)

	COMMON /FLDESO/NGO,NAO,NCO,NDO,NFO,NPO,NRO,ISO,IBUFO(IOMAX)

!	COMMON/DEV/ITI,IOX
	COMMON/DEV/ ITI,ILP,IGRAPH,IOX

	COMMON/STDFIL/INPFIL

	DIMENSION  TITLE(18),LAB(6,20),NGRP(20),IDO(8),ID(8)

	DIMENSION  LO(500),LOT(500),EL(500),ELT(500)

C MAX-PERMISSIBLE LENGTH STRING = 500, SET HERE AND IN PARAMETER 'MAX'

	EQUIVALENCE (ID(1),NG),(LAB(1,1),IBUF(1)),(IDO(1),NGO)

	EQUIVALENCE (LO(1),IBUF(1)),(LOT(1),IBUF(501)),

     1  (EL(1),IBUF(1001)),(ELT(1),IBUF(2001))

!	DATA ILP,IRP /'(',')'/    ! defined in GDTSTR.FOR

	DATA IY/'Y'/
	
	logical ldiv
	character*72 CTITLE
	equivalence (TITLE,CTITLE)
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME
      CHARACTER*1024 OUTNAME
      CHARACTER*1024 OUTFNM
      SAVE K,NSO,NGR,IR,MAX,NL,IRF

	IF(IFLAG1)10,20,30

10      IFLAG3=0
      CURPROCNAME='GSTRNG'

      OUTNAME=OUTFNM(CURPROCNAME)
	OPEN(UNIT=IOX,FILE=OUTNAME,MODE='WRITE')

	MAX=500

	IR=ID(7)/ID(3)
      CALL DoGSTRNGDialog(NGRP,CTITLE,IR,NL,LDIV)

!	WRITE(*,100)(J,(LAB(I,J),I=1,6),J=2,NG)
!
!100     FORMAT(' GROUP ',I2,' ID=',6A4)
!
!	WRITE(*,101)(ILP,IRP,I=2,NG)
!
!101     FORMAT(' WHICH GROUPS(DICHOTOMOUS ONLY)?'/1H$,20(A1,2X,A1),T1\)
!
!	READ(*,102)(NGRP(I),I=1,NG-1)
!
!102     FORMAT(1XI2,19(2XI2))

	NGR=0

	DO 15 I=1,NG-1

	IF(NGRP(I))15,15,14

14      NGR=NGR+1

15      CONTINUE

	WRITE(IOX,1025)(INPFIL(I),I=1,64)

1025    FORMAT(' STRINGING ANALYSIS'/' INPUT FILE:',2X,64A1)

!	WRITE(*,103)
!
!103     FORMAT(' ENTER TITLE, 1 LINE')
!
!	READ(*,104)(TITLE(I),I=1,18)
!
!104     FORMAT(18A4)

	WRITE(IOX,105)(TITLE(I),I=1,18)

105     FORMAT(1H ,18A4)

	WRITE(IOX,106)(NGRP(I),I=1,NGR)

106     FORMAT(/' GROUPS CHOSEN:',10(4XI2))

	DO 16 I=1,NGR

	J1=6*NGRP(I)-5

	J2=J1+5

16      WRITE(IOX,107)NGRP(I),(IBUF(J),J=J1,J2)

107     FORMAT(' GROUP ',I2,' ID=',6A4)

	IR=ID(7)/ID(3)

	IRF=0

	NL=IR

!	WRITE(*,1021)IR
!
!1021    FORMAT('$SUBDIVIDE',I5,' RECSETS INTO RUNS? >'\)
!
!	READ(*,1022)IA
!
!1022    FORMAT(A1)
!
!	IF(IA-IY)18,17,18
      IF(.NOT.LDIV)GOTO 18

!17      WRITE(*,1023)
!
!1023    FORMAT('$RUN LENGTH? >'\)
!
!	READ(*,*)NL

	IRF=1

18      ISZ=NGR*IR

	NSO=NGO+NAO

	K=0

	RETURN

C DURING RUN PHASE, STORE SEQUENCES OF VALUES IN IBUF

20      IF(K-KNT)21,26,26

21      K=KNT

	J=NSO

	DO 25 I=1,NGR

	IBUFO(J+K)=IBUF(NGRP(I))

25      J=J+IR

26      RETURN

C NOW COMPUTE STRINGS ANALYSES FOR SUCCESSIVE GROUP VARS

30      DO 90 L=1,NGR

	N1=NSO+(L-1)*IR

	N2=N1

	NRUN=0

	NTOT=0

	IEND=0

	NHM=0

	ORT=0.0

	EXPRT=0.0

	VARRT=0.0

	DO 32 I=1,MAX

	ELT(I)=0.0

32      LOT(I)=0

	WRITE(IOX,199)NGRP(L)

199     FORMAT(////' ANALYSIS FOR GROUP VAR',I3)

35      N1=N2+1

	NTOT=NTOT+NL

	IF(NTOT-K)36,37,37

C # RECSETS READ = K, POSSIBLY DIFFERENT FROM IR = # IN INPUT FILE

36      NL1=NL

	GO TO 38

37      IEND=1

	NL1=(K+NL-NTOT)

38      N2=N2+NL1

	NRUN=NRUN+1

	WRITE(IOX,200)NRUN,NL1

200     FORMAT(//' SEQUENCE OF VALUES IN RUN',I4,4X,I4,' RECORDS')

	WRITE(IOX,201)(IBUFO(I),I=N1,N2)

201     FORMAT(1H ,40I2)

	CALL STRNG2(IBUFO(N1),NL1,OM,OH,OR,EXPR,VARR,CR,LO,EL,LMAX,MAX)

	WRITE(IOX,202)OM,OH,OR,EXPR,VARR,CR

202     FORMAT(/'  WALD-WOLFOWITZ TEST:'/

     1  '   ONES  TWOS  RUNS   EXPR   VARR   C.R.'/1H ,3F6.0,3F7.2)

	IF(VARR)40,40,45

40      WRITE(IOX,203)

203     FORMAT(/'  STRING-LENGTH ANALYSIS ABORTED')

	IF(OH)70,70,50

C WRITE STRING-LENGTH DATA OUT TO LENGTH = LONGEST STRING

45      IF(IRF)50,50,46

46      WRITE(IOX,204)

204     FORMAT(/'  STRING-LENGTH ANALYSIS:')

	WRITE(IOX,2041)(I,I=1,LMAX)

2041    FORMAT('  NHIT:',14I5)

	WRITE(IOX,2042)(EL(I),I=1,LMAX)

2042    FORMAT('   EXP:',14F5.2)

	WRITE(IOX,2043)(LO(I),I=1,LMAX)

2043    FORMAT('   OBS:',14I5)

50      NH=MIN0(IFIX(OH),MAX)

	DO 60 I=1,NH

	ELT(I)=ELT(I)+EL(I)

60      LOT(I)=LOT(I)+LO(I)

	IF(NHM.LT.NH)NHM=NH

	ORT=ORT+OR

	EXPRT=EXPRT+EXPR

	VARRT=VARRT+VARR

C FINISHED? IF NOT, DO NEXT RUN

70      IF(IEND)35,35,71

71      IF(IRF)77,77,75

C WRITE GRAND TOTALS

75      WRITE(IOX,300)NRUN

300     FORMAT(//' OVERALL RESULTS FOR',I3,' RUNS:')

	DEVT=ORT-EXPRT

	CRT=(DEVT-SIGN(.5,DEVT))/SQRT(VARRT)

	WRITE(IOX,301)ORT,EXPRT,VARRT,CRT

301     FORMAT(/'   OBS # RUNS  EXP # RUNS   VARIANCE     C.R.'/

     1 1H ,F10.0,2XF10.0,2(2XF10.2))

77      WRITE(IOX,302)

302     FORMAT(/'  STRING-LENGTH SUM:'/

     1 4X,'LENGTH  EXPECTED  OBSERVED')

	NHM=MIN0(NHM,MAX)

	DO 80 I=1,NHM

	IF(ELT(I)+FLOAT(LOT(I)))80,80,76

76      WRITE(IOX,303)I,ELT(I),LOT(I)

80      CONTINUE

303     FORMAT(6XI2,2XF10.4,5XI5)

90      CONTINUE

	WRITE(IOX,500)

500     FORMAT(//' END OF OUTPUT')

	CLOSE(UNIT=IOX)

	RETURN

	END

C STRNG2.FTN- SUBROUTINE TO PERFORM STRINGING ANALYSIS OF DICHOTOMIZED

C DATA. DOES WALD-WOLFOWITZ TEST, CALCULATES EXPECTED #'S OF STRINGS

C OF VARIOUS LENGTHS, AND COUNTS THE OBSERVED STRING-LENGTHS

	SUBROUTINE STRNG2(IVEC,L,OM,OH,OR,EXPR,VARR,CR,LO,EL,LMAX,L1)

	DIMENSION IVEC(L),LO(L1),EL(L1),TYPES(2)

	OR=1.

	DO 5 I=1,2

5       TYPES(I)=0.

	TYPES(IVEC(1))=1.

	DO 10 I=2,L

	TYPES(IVEC(I))=TYPES(IVEC(I))+1.

	IF(IVEC(I).NE.IVEC(I-1))OR=OR+1.

10      CONTINUE

	OM=TYPES(1)

	OH=TYPES(2)

	FACT=2.0*OH*OM

	AL=L

	EXPR=FACT/AL+1.

	VARR=FACT*(FACT-AL)/(AL*AL*(AL-1.))

C PATCH FOR DEGENERATE CASE WITH ONLY 1 TYPE OF EVENT

	IF(VARR)11,11,12

11      CR=0.0

	DO 110 I=1,L

	LO(I)=0

110     EL(I)=0.

	IF(OH)60,60,111

111     EL(L)=1.

	LO(L)=1

	GO TO 60

12      DEV=OR-EXPR

	DEV=DEV-SIGN(.5,DEV)

20      CR=DEV/SQRT(VARR)

C STRING-LENGTH DATA; FIRST CALCULATE EXPECTATIONS UP TO OH

	FAC=OM*(OM+1.0)

	NH=OH

	LIM=MIN0(NH,L1)

	FAC2=OH

C FIRST ZERO EL ARRAY OUT TO LIM

	DO 21 K=1,LIM

21      EL(K)=0.0

	EL(1)=FAC*FAC2/(AL*(AL-1.0))

	IF(OH-1.0)26,26,22

22      DO 25 K=2,LIM

	FAC2=FAC2-1.0

	EL(K)=EL(K-1)*(FAC2/(AL-FLOAT(K)))

C TRUNCATE COMPUTATION OF EXPECTATIONS FOR BIG SERIES

	IF(EL(K)-.00001)26,25,25

25      CONTINUE

C NOW COUNT OBSERVED STRING-LENGTHS

26      DO 30 I=1,NH

30      LO(I)=0

	NHT=0

	I=0

	IF=0

31      I=I+1

	IF(IVEC(I)-1)32,32,35

32      IF(IF)40,40,33

33      IF=0

	LO(K)=LO(K)+1

C IF ALL HITS ACCOUNTED FOR, EXIT

	NHT=NHT+K

	IF(NH-NHT)45,45,40

35      IF(IF)36,36,37

36      IF=1

	K=1

	GO TO 40

37      K=K+1

40      IF(I-L)31,50,50

C MAKE SURE TO COUNT TERMINAL STRINGS

50      IF(IF.EQ.1)LO(K)=LO(K)+1

C GET LONGEST STRING

45      DO 55 K=1,LIM

	IF(LO(K))55,55,51

51      LMAX=K

55      CONTINUE

60      RETURN

	END



