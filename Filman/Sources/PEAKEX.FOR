C SUBROUTINE PEAKEX.FIL- ROUTINE TO MEASURE AR SPECTRAL PEAKS; MAY ALSO

C BE EXTENDED FOR MEASURING TIME-DOMAIN DATA, BUT THIS HASNT'T BEEN

C TESTED AS OF 7/92;

C     FURTHER MODIFIED TO WRITE ASCII FILES FOR SUBMISSION TO SAS OR OTHER

C SOFTWARE FOR ADDITIONAL ANALYSIS (10/15/1992); CURRENTLY OUTPUTS (IN THE

C FOLLOWING ORDER): GR VAR LEVEL FOR AMPLITUDE, GR VAR LEVEL FOR FREQ,

C REC-SET, CHANNEL, BAND NUMBER, PEAK NUMBER IN THE BAND, ACTUAL FREQ,

C AMPLITUDE, AREA, BANDWIDTH

C 6/21/93-MODIFIED TO REFLECT GR VARS 2 (AMPLIT) AND 3 (FREQ) 

C IN ACCORD WITH S. FOLGER'S WRITEFILE ROUTINE.  PEAKEX.FOR

C ON THE DATA COLLECTION SYSTEM IS SET UP TO OUTPUT THE POSITION

C AND TYPE (PRESTIM, ADAPT, RECOV) FROM ADAPT. DATASETS

C     FURTHER MODIFIED FOR THE PC (10/31/1992)      

C CONVERTED TO RUN UNDER FL32 BY EK, 8/93, WITH MINIMAL CHANGES      

	SUBROUTINE PEAKEX

      INCLUDE 'MAX.INC'

	DIMENSION WORK(512), POUT(2,50),PKMEAS(15,10), BANDPT(1024)

	DIMENSION NSTART(10),NTOT(10),VNS(10),RESULT(3)

	CHARACTER*64 OUTFIL

	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(ICHMAX)

!	COMMON/DEV/ITI,IOX
	COMMON/DEV/ ITI,ILP,IGRAPH,IOX

!	COMMON/FLDES/NG,NA,NC,ND,NF,NP,NR,IS,IBUF(IOMAX)

	COMMON/FLDES/NG,NA,NC,ND,NF,NP,NR,IS,IBUF(10)

	COMMON/FLDESO/NGO,NAO,NCO,NDO,NFO,NPO,NRO,ISO,IBUFO(IOMAX)

	EQUIVALENCE (X,IX)
	
	character*255 ALINE
      INTEGER SELGRPS(20)
	CHARACTER*24 LINESEL(20)
      COMMON /SELGVS/ SELGRPS,LINESEL
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME
      CHARACTER*1024 OUTNAME
      CHARACTER*1024 OUTFNM
      LOGICAL WPPSF
      SAVE WPPSF,NB

	IF(IFLAG1)165,20,95

165   IFLAG3=0    !NO STANDARD OUTPUT FILE
      CURPROCNAME='PEAKEX'
      WRITE(*,*) CURPROCNAME
10    NFO=3

C MOVE CHANNEL LABELS

	J=6*NGO+109

	DO 15 I=1,NCO

	L=J+5

	K=6*(NG+ICHAN(I))-5

	DO 14 M=J,L

	IBUFO(M)=IBUF(K)

14    K=K+1

15    J=J+6

C     DEFAULTS
      IT=0
      ITYPE=1
      NB=0
      
      WPPSF=.FALSE.
      CALL DoPEAKEXDialog(ITYPE,IT,NB,WPPSF)

!	WRITE (*,100)
!
!100   FORMAT('$DATA TYPE:1=TIME/2=FREQUENCY >'\)
!
!	READ (*,*) ITYPE

	GOTO (1,2) ITYPE

C     DETERMINE SPACING OF DATA POINTS

C     IS=SAMPLE RATE FOR TIME DATA, MAX FREQUENCY FOR SPECTRA

1     DX=1.0/FLOAT(IS)

	NADD=IS/32        ! IMPLICIT EXTENSION OF BANDS TO IMPROVE 

	GO TO 3           ! MEASUREMENTS NEAR BAND EDGES

2     DX=FLOAT(IS)/FLOAT(ND-1)  ! spectra have dc term as first point

	NADD=3.0/DX

3     CONTINUE
!      WRITE(*,300)
!
!300   FORMAT('$NUMBER OF BANDS(.LE.10) >'\)
!
!	READ(*,*)NB

	DO 5 I=1,NB

4     CONTINUE
!      WRITE(*,201)I
!
!201   FORMAT('$FIRST,LAST POINTS FOR BAND ',I2,' IN X-SCALE UNITS>'\)
!
!	READ(*,*) P1,PN
      P1=SELGRPS(I)
      PN=SELGRPS(I+10)

	NSTART(I)=P1/DX +1

	IF(NSTART(I).LE.NADD)GO TO 6

	NSTART(I)=NSTART(I)-NADD

	NL=PN/DX + NADD + 1

	IF(NL.GT.NDO)GO TO 6

	NTOT(I)=NL-NSTART(I) +1

	VNS(I)=P1-3.0

C     AWKWARD LOGIC ABOVE USED TO PATCH CHANGES INTO EXISTING CODE

	GO TO 5

6     CONTINUE
!      WRITE(*,202)
!
!202   FORMAT(' PLEASE ALLOW FOR 3-HZ EXTENSION AT BOTH EDGES')
      Call ShowInfoText('Error',
     +                  'PLEASE ALLOW FOR 3-HZ EXTENSION AT BOTH EDGES')

	GO TO 4

5     CONTINUE

!	WRITE(*,203)
!
!203   FORMAT('$DATA XFORM:0=NONE/1=SQRT/2=LN/3=ARCSIN/4=ABS >'\)
!
!	READ(*,204)IT
!
!204   FORMAT(I1)

	IT=IT+1

	NDO=40*NB         !FINALIZE LATER

	NSO=NGO+NAO+1

	ISZ=80*NB   !6 REAL MEASURES PER BAND FOR BANDS.FIL

!495   WRITE (*,501)
!
!501   FORMAT ('$ENTER OUTPUT FILENAME:  '\)
!
!	READ (*,505) OUTFIL
!
!505   FORMAT(A)
!
!	WRITE (*,498) OUTFIL
!
!498   FORMAT (5X,A)
!      CALL GETVALU(2,IVAL,ALINE,'(A)')
!      WRITE(*,'(A)')ALINE
!      READ(ALINE,505)OUTFIL
!
!	OPEN(UNIT=22,FILE=OUTFIL,STATUS='OLD',ERR=508)
!
!	CLOSE(UNIT=22)
!
!	WRITE (*,506)
!
!506   FORMAT('$FILE ALREADY EXISTS- WRITE OVER IT? (Y/N)>'\)
!
!	READ(*,507) RESP
!
!507   FORMAT(A1)
!      CALL GETVALU(2,IVAL,ALINE,'(A)')
!      WRITE(*,'(A)')ALINE
!      READ(ALINE,507)RESP
!
!	IF (RESP.NE.'Y') GOTO 495

508   OUTNAME=OUTFNM(CURPROCNAME)
      OPEN(UNIT=22,FILE=OUTNAME,STATUS='REPLACE')

	RETURN

C EXECUTION PHASE

20    N=NSO

	IC=IBUFO(1)

	IGVA=IBUF(2)     !AMPLITUDE GROUP VARIABLE LEVEL

	IGVF=IBUF(10)     !GPAST GROUP VAR LEVEL (12/23/94)

	DO 90 L=1,NB      !MAIN LOOP OVER BANDS

	XMIN=1.0E10

	NTB=NTOT(L) !# OF POINTS IN THIS BAND

	J=NSTART(L) !POINTER TO THE FIRST POINT IN THE INPUT

	LAST=NTB-NADD

C INITIALIZE MEASURES TO ZERO

	DO 30 M=1,10

	DO 30 J1=1,5

30    PKMEAS(M,J1)=0.0

	DO 43 K1=1,NTB

43         BANDPT(K1)=0.0

C STORE THIS BAND'S RAW DATA

	DO 50 I=1,NTB

		CALL XVAL(J,XV,XI)

		X=RECODE(XV,IT)

		IF(X.LT.XMIN)XMIN=X

		BANDPT(I)=X

		J=J+1

50    CONTINUE

C NOW FIND PEAKS USING DEB'S PEAK-FINDER

	CALL PEKID(BANDPT,NTB,-1.0,XMIN,-1.0,POUT,NPEAK)

C FOR EACH OF THE NPEAK MAXIMA THAT FALLS WITHIN BAND, CALCULATE  

C PEAK MEASURES. TEMPORARILY OBVIATE 0-PEAK CASES

	IF(NPEAK.GT.0)GO TO 35

31    CONTINUE

	IF (NPEAK.EQ.0) GOTO 120

35    NPK=0 !INDEX & COUNTER FOR IN-BAND PEAKS

	DO 80 M=1,NPEAK

C THIS ROUTINE WILL REDUCE PEAK TO CANONICAL FORM

	LOC=POUT(1,M)

	IF(LOC.LE.NADD)GO TO 80

	IF(LOC.GT.LAST)GO TO 60

	NPK=NPK+1

	CALL CANFRM(BANDPT,NTB,LOC,WORK,LW)

CD    WRITE(IOX,500)(WORK(I),I=1,LW)

C500  FORMAT('  WORK OUTPUT:'/(1X,6G12.4))

C THIS ROUTINE GENERATES THE MEASURES

	CALL MEASUR(WORK,LW,RESULT)

C CONVERT ORDINAL UNITS TO FREQUENCIES FOR POSITION & WIDTH

		PKMEAS(NPK,1)=VNS(L)+(LOC-1)*DX

		RESULT(3)=RESULT(3)*DX

C COPY RESULTS INTO ROW NPK OF PKMEAS

	DO 55 J1=1,3

55    PKMEAS(NPK,J1+1)=RESULT(J1)

CD    WRITE(IOX,501)L,NPK,(PKMEAS(NPK,J1),J=1,4)

C IN HERE GOES STUFF TO DECIDE WHAT WE KEEP

80    CONTINUE

60    GOTO 150

C MOVE PEAK MEASURES FOR THIS BAND TO OUTPUT BUFFER

120   CONTINUE    ! LINES 120-122 HANDLE NPEAK=0 CASE

		I1=1

		WRITE (22,122)IGVA,IGVF,KNT,IC,L,I1,(PKMEAS(I1,J1),J1=1,4)

122         FORMAT(I2,1X,I2,1X,I5,1X,I3,1X,I2,1X,I2,1X,4(1XG12.4)) 

140   GOTO 90     

150   CONTINUE

	DO 45 I1=1,NPK

		WRITE (22,160)IGVA,IGVF,KNT,IC,L,I1,(PKMEAS(I1,J1),J1=1,4)

160         FORMAT(I2,1X,I2,1X,I5,1X,I3,1X,I2,1X,I2,1X,4(1XG12.4)) 

45    CONTINUE

90    CONTINUE

	RETURN

95    CONTINUE

	CLOSE(UNIT=22)

	RETURN

	END

