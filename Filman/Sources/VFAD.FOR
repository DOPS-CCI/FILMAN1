C FAD.FOR- ROUTINE TO FIT AR MODEL & CALCULATE FAD PARAMETERS CHANNEL-
C BY-CHANNEL USING THE METHOD OF FRANASZCZUK AND BLINOWSKA, LINEAR MODEL
C OF BRAIN ELECTRICAL ACTIVITY- EEG AS A SUPERPOSITION OF DAMPED
C OSCILLATORY MODES, BIOLOGICAL CYBERNETICS, 53:19-25,1985. 
C POSTPROCESSOR FADPROCS.FOR PLOTS FAD OUTPUT FILE IN MULTICHANNEL 
C FORMAT USING ROUTINES IN FADPLOT.FOR, INCLUDING ACCUMULATION OF 
C RESULTS ACROSS TRIALS IN 'RHYTHM DIAGRAMS' LIKE THOSE DESCRIBED IN
C BLINOWSKA ET AL A NEW METHOD OF PRESENTATION OF THE AVERAGE SPECTRAL
C PROPERTIES OF THE EEG TIME SERIES, INT J BIOMED COMP 22:97-106, 1988.
	SUBROUTINE VFAD
	IMPLICIT DOUBLE PRECISION (A-H,O-Z)
	INCLUDE 'MULTAR.INC'
C      PARAMETER (MAXAR=20,MCHANS=64,MNPTS=33,MKN=6,IFADNR=4)
C MAXAR  - MAXIMAL AR MODEL ORDER
C MCHANS - MAXIMAL NUMBER OF CHANNELS (SOME SUBROUTINES
C          REQUIRE WORKARRAY)
C MNPTS  - NUMBER OF CALCULATION POINTS IN FREQUENCY DOMAIN (POWER SP)
C MKN    - NUMBER OF FUNCTIONS CALCULATED IN AR_SPECT
C IFADNR - NUMBER OF FAD PARAMETERS (B,BETA,OMEGA,FI)
C      PARAMETER (INTBMX=10)
C INTBMX - MAXIMAL NUMBER OF BORDERS OF DTF INTEGRATION RANGES
	REAL RECODE,XV,XI,X,WYN,XDIM,YDIM,VALMX
	DIMENSION WORK[ALLOCATABLE](:,:)
	DIMENSION Q[ALLOCATABLE](:,:)
	DIMENSION V[ALLOCATABLE](:,:) 
	DIMENSION WYN(0:MAXAR/2+1,IFADNR+1,MCHANS)
	DOUBLE PRECISION WORK
C ORGANIZATION OF WYN: FOR EACH CHANNEL, ROW 0 CONTAINS INFORMATION
C ABOUT THE MODEL; WYN(0,1,.)=# POLES FOUND,WYN(0,2,.)=NYQUIST FREQ,
C WYN(0,3,.)=ERROR CODE, AND WYN(0,4,.)=MODEL ORDER USED. SUCCEEDING
C ROWS CONTAIN THE FAD PARAMETERS CALCULATED, CURRENTLY B=AMPLITUDE,
C BETA=DAMPING, PHI=PHASE, OMEGA=FREQUENCY, AND B*EXP(-BETA) WHICH IS
C CALCULATED ON THE FLY BY FAD_GRAPHICS.
      INCLUDE 'MAX.INC'
	CHARACTER*1 INPFIL(64)
	CHARACTER*24 CLABEL(MCHANS)
C	DIMENSION ICLABS(6,MCHANS),ISTART(MCHANS,2)
	DIMENSION ICLABS(6,ICHMAX),ISTART(ICHMAX,2)
	logical usevss
	common /vss/ usevss
	COMMON IFLAG1,IFLAG2,IFLAG3,KNT,ISZ,ICHAN(1)
	COMMON/DEV/ITI
	COMMON/STDFIL/INPFIL
	COMMON/FLDES/ NG,NA,NC,ND,NF,NL,NR,IS,IBUF(1)
	COMMON/FLDESO/ NGO,NAO,NCO,NDO,NFO,NLO,NRO,ISO,IBUFO(1)
	COMMON /ARERR/ IERR
	EQUIVALENCE (ICLABS,CLABEL)
	EQUIVALENCE (X,IX)      ! AVOID CONVERTING REAL/INTEGER
	SAVE NDO1,WORK,Q,V,WYN,IORD,IORD0,IC,NPTS,KN,I1,N1
      SAVE CLABEL,XDIM,YDIM,ISTART,IFAD,VALMX,MODE,IMODE
      LOGICAL wrtout,OOK
	COMMON/STDFIL2/ OOK
      INTEGER*4 IMUID(4),IINPNM(16)
!	DATA IMUID/'FAD ','OUTP','UT F','OR  '/
	COMMON /FIMU/IMUID,IsOutput,OUTFOR
	EQUIVALENCE (IINPNM,INPFIL)
	Logical IsOutput
      CHARACTER*52 OUTFOR
      SAVE wrtout,IPLOT
	DOUBLE PRECISION F(:,:),WR(:),WI(:),VL(:,:),VR(:,:)
	DOUBLE COMPLEX WC(:),VRC(:,:),VRCI(:,:)
	ALLOCATABLE F,WR,WI,VL,VR,WC,VRC,VRCI
      DOUBLE PRECISION DWORK,IDENT
      ALLOCATABLE DWORK(:),ZWORK(:),IWORK(:),IPIV(:),IDENT(:,:)
      DOUBLE COMPLEX ALPHA,C,ZWORK
      ALLOCATABLE ALPHA(:),C(:,:,:)
      SAVE LDWORK,NCHANS,IALG,NormT
      SAVE F,WC,WR,WI,VL,VR,VRC,VRCI,ALPHA,C
      SAVE DWORK,ZWORK,IWORK,IPIV,IDENT,LZWORK
	DIMENSION R1M(:,:),R2(:,:),RCONST(:,:,:)
	Allocatable R1M,R2,RCONST
	SAVE R1M,R2,RCONST
      LOGICAL NormT
	INTEGER*2 MAXX,MAXY
	PARAMETER (PI=3.14159265358979323846264338328)
	DIMENSION B(:,:,:),BETA(:,:),B2dBETA(:,:,:),OMEGA(:,:)
	ALLOCATABLE B,BETA,B2dBETA,OMEGA
	SAVE B,BETA,B2dBETA,OMEGA,IO2S
	LOGICAL ToPlot(5),WPPSF
	SAVE WPPSF

C INITIALIZATION SECTION WITH USER DIALOGUE      
	IF(IFLAG1) 1,30,80
1     IERR=0
	NDO1=NDO    ! # SELECTED INPUT POINTS
	NFO=3       ! REAL OUTPUT
	ToPlot=.TRUE.
	WPPSF=.FALSE.
!C STORE CHANNEL LABELS FOR USE IN PLOTS
!	DO 15 I=1,NCO
!	K=6*(NG+ICHAN(I))-5
!	DO 15 J=1,6
!	ICLABS(J,I)=IBUF(K)
!15    K=K+1
!C ALSO MOVE LABELS TO OUTPUT FILE, WHICH IS ALWAYS WRITTEN
!	J=6*NGO+109
!	DO 3 I=1,NCO
!	L=J+5
!	K=6*(NG+ICHAN(I))-5
!	DO 2 I1=J,L
!	IBUFO(I1)=IBUF(K)
!2     K=K+1
!3     J=J+6
!
!C Insert original file name as 5th line of description
!      J=5*18+1
!      DO 1603,I3=1,4
!      IBUFO(J)=IMUID(I3)
!1603  J=J+1
!      DO 1604,I3=1,13
!      IBUFO(J)=IINPNM(I3)
!1604  J=J+1
!
!	N1=NGO+NAO+1      ! INDEX TO FIRST OUTPUT POINT IN IBUFO
!	
	IMODE=1
      IF(IsOutput)IMODE=2      
	IPLOT=0
      CALL DoFADParamsDialog(IMODE,IPLOT,wrtout,iord0,NormT,IALG,WPPSF)
	IORD=IORD0
      OOK=wrtout   ! Don't ask for name in PUTOPN, open file
      IF(IMODE.EQ.2)THEN
        CALL FAD_PROCESS(WPPSF)
        RETURN
      ENDIF
		
C SET NUMBER OF OUTPUT FREQUENCIES AND POINTS AS F(MODEL ORDER)
	IF(IORD)5,5,6
C FOR VARIABLE ORDERS ASSUME MAXAR
5     NDO=4*((MAXAR)/2+1+1)
	GO TO 20
6     NDO=4*((IORD)/2+1+1)
20    ISZ=NGO+NAO+NDO
	IC=1        ! CHANNEL COUNTER
	NPTS=MNPTS  ! FROM MULTAR.INC
	KN=MKN      !  "      "
C25    ALLOCATE(WORK(NDO1,NCO),STAT=IERR)
25      ALLOCATE(WORK(NCO,NDO1),STAT=IERR)
	IF(IERR.NE.0)THEN
	 WRITE(ITI,*)'MULTAR ERROR: CANNOT ALLOCATE WORKSPACE (WORK)'
	 RETURN
	ENDIF 
	ALLOCATE(Q(NCO,MAXAR*NCO),STAT=IERR)
	IF(IERR.NE.0)THEN
	 WRITE(ITI,*)'MULTAR ERROR: CANNOT ALLOCATE WORKSPACE (Q)'
	 GOTO 71
	ENDIF 
	ALLOCATE(V(NCO,NCO),STAT=IERR)
	IF(IERR.NE.0)THEN
	 WRITE(ITI,*)'MULTAR ERROR: CANNOT ALLOCATE WORKSPACE (V)'
	 GOTO 72
	ENDIF 

      NCHANS=NCO
	IORD=IORD0
	NPLV=ISLLEV
	NCHANS=NCO

C      IORD=5 !
      IO2S=CEILING(FLOAT(IORD)/2.)

	ALLOCATE(R1M(NCHANS*IORD,NCHANS),STAT=IERR)
	ALLOCATE(R2(NCHANS*IORD,NCHANS*IORD),STAT=IERR)
	ALLOCATE(RCONST(NCHANS,NCHANS,IORD+1),STAT=IERR)
      LDWORK=10*NCHANS*IORD
      LZWORK=ILAENV(1,'ZGETRI','U',NCHANS*IORD,NCHANS*IORD,-1,-1,6,1)*
     $       NCHANS*IORD
      ALLOCATE(F(NCHANS*IORD,NCHANS*IORD),STAT=ierr)
      ALLOCATE(WC(NCHANS*IORD),STAT=ierr)
      ALLOCATE(WR(NCHANS*IORD),STAT=ierr)
      ALLOCATE(WI(NCHANS*IORD),STAT=ierr)
      ALLOCATE(VL(NCHANS*IORD,NCHANS*IORD),STAT=ierr)
      ALLOCATE(VR(NCHANS*IORD,NCHANS*IORD),STAT=ierr)
      ALLOCATE(VRC(NCHANS*IORD,NCHANS*IORD),STAT=ierr)
      ALLOCATE(VRCI(NCHANS*IORD,NCHANS*IORD),STAT=ierr)
      ALLOCATE(DWORK(LDWORK),STAT=ierr)
      ALLOCATE(ZWORK(LZWORK),STAT=ierr)
      ALLOCATE(IWORK(2*NCHANS-2),STAT=ierr)
      ALLOCATE(IPIV(NCHANS*IORD),STAT=ierr)
      ALLOCATE(IDENT(NCHANS,NCHANS),STAT=ierr)
      ALLOCATE(ALPHA(NCHANS*IORD),STAT=ierr)
      ALLOCATE(C(NCHANS,NCHANS,NCHANS*IORD),STAT=ierr)
      ALLOCATE(B(NCHANS,NCHANS,NCHANS*IO2S),STAT=ierr)
      ALLOCATE(BETA(IO2S,NCHANS),STAT=ierr)
      ALLOCATE(B2dBETA(NCHANS,NCHANS,IO2S),STAT=ierr)
      ALLOCATE(OMEGA(IO2S,NCHANS),STAT=ierr)
	RETURN
73	DEALLOCATE(V)
72    DEALLOCATE(Q)	
71    DEALLOCATE(WORK)
      RETURN
      	
C EXECUTION PHASE- FIRST ASSEMBLE THE DATA MATRIX FOR THIS TRIAL
30    IF(IMODE.EQ.2)THEN
        CALL FAD_PROCESS(WPPSF)
        RETURN
      ENDIF
      DO 35 I=1,NDO1
	CALL XVAL(I,XV,XI)
35    WORK(IC,I)=RECODE(XV,IT)
	IC=IC+1
	IF(IC.LE.NCO) RETURN
40    IC=1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                     C
C DATA STORED IN MATRIX FORM; NOW DO THE CALCULATIONS C
C                                                     C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


	CALL normaT(WORK,NCHANS,NDO1,NormT)
	if(IORD.LE.0)IORD=MULTAICT(WORK,NCHANS,NDO1,MAXAR,Q,V,IARES)
	IF(IORD.EQ.0)RETURN
	IERR=0
	IORD=IORD0
	Q=0D0      ! INITIALIZE STORAGE
	V=0D0
	CALL CCORR(WORK,R2,R1M,V,RCONST,NCHANS,NDO1,IORD,IALG)
	CALL SOLVEARYWCOV(R2,Q,R1M,V,NCHANS,IORD,IPIV,IALG)
	F=0D0
	VL=0D0
	VR=0D0
	WR=0D0
	WI=0D0
	WC=(0D0,0D0)
	VRC=(0D0,0D0)
	VRCI=(0D0,0D0)
	DWORK=0D0
	ZWORK=(0D0,0D0)
	IPIV=0
	IWORK=0
	ALPHA=(0D0,0D0)
	C=(0D0,0D0)
	CALL VECTORFAD(F,Q,NCHANS,IORD,WR,WI,WC,VL,VR,VRC,VRCI,DWORK,LDWORK,
     $                     ZWORK,LZWORK,IWORK,IPIV,IDENT,ALPHA,C)


!300   I1=N1
!	DO 400 I=0,LEN
!	DO 400 J=1,4
!	X=WYN(I,J,ICH)        ! AVOID CONVERTING REAL TO INTEGER
!	IBUFO(I1)=IX      !   VIA EQUIVALENCE (X,IX)
!400   I1=I1+1
!	CALL PUTSTD(IBUFO)
500   CONTINUE
C      OMEGA=IMAG(ALPHA)/PI*(5D-1*DBLE(IS))
      CALL FNDCONJGS(ALPHA,IORD,NCHANS,IPIV)
      CALL VOMEGA(ALPHA,IORD,NCHANS,BETA,OMEGA,IO2S,IPIV,IS)
      CALL VFB(C,NCHANS,IORD,B,IO2S,IPIV)
      write(5001,*)B
      write(5001,*)'---'
C      write(5011,*)ABS(WC)
C      write(5011,*)'---'
      write(5002,*)BETA
      write(5002,*)'---'
C      write(5012,*)ABS(C)
C      write(5012,*)'---'
      write(5003,*)ALPHA
      write(5003,*)'---'
C      write(5004,*)VL
C      write(5004,*)'---'
C      write(5005,*)VR
C      write(5005,*)'---'
      write(5006,*)OMEGA
      write(5006,*)'---'

C	IF(IPLOT)90,90,50
	IF(IPLOT)90,90,90
C PLOT ALL RESULTS FOR THIS RECSET, DOING EACH PARAMETER IN TURN IN
C MULTICHANNEL FORMAT AND SCALED TO MAX VALUE IN ARRAY.
50     IFAD=0
	 VALMX=0.
C SET UP FOR FAD GRAPHICS
	 IERR=0
C	CALL GRAPHMODE_ON(MAXX,MAXY,.false.)
	CALL GRAPHMODE_ON(MAXX,MAXY,NROW,NCOL,NBITS,NCOLORS,0)
	IF(IERR.NE.0)STOP
	CALL SETUP(MAXX,MAXY,10,CLABEL,NCO,2,ISTART,XDIM,YDIM)
	MODE=1      ! FAD_GRAPHICS PLOTS EACH PARAMETER IN TURN
55    CALL CALCBBETA(WYN,NCO)
	CALL FAD_GRAPHICS(MODE,WYN,LEN,NCO,CLABEL,IFAD,ISTART,INT(XDIM),
     $                  INT(YDIM),MAXX,MAXY,VALMX,ToPlot,ISTOP)
	CALL GRAPHMODE_OFF
	RETURN
90    CALL SHOWPROGRESS(KNT,NR/NC,70,'#',ITI)
      RETURN

C TERMINATION PHASE
80    IF(IMODE.EQ.2)THEN
        CALL FAD_PROCESS(WPPSF)
        RETURN
      ENDIF
      DEALLOCATE(OMEGA)
      DEALLOCATE(B2dBETA)
      DEALLOCATE(BETA)
      DEALLOCATE(B)
      DEALLOCATE(C)
      DEALLOCATE(ALPHA)
      DEALLOCATE(IDENT)
      DEALLOCATE(IPIV)
      DEALLOCATE(IWORK)
      DEALLOCATE(ZWORK)
      DEALLOCATE(DWORK)
      DEALLOCATE(VRCI)
      DEALLOCATE(VRC)
      DEALLOCATE(VR)
      DEALLOCATE(VL)
      DEALLOCATE(WI)
      DEALLOCATE(WR)
      DEALLOCATE(WC)
      DEALLOCATE(F)
	DEALLOCATE(RCONST)
	DEALLOCATE(R2)
	DEALLOCATE(R1M)
      DEALLOCATE(V)
	DEALLOCATE(Q)
	DEALLOCATE(WORK)
	IERR=0
	RETURN
	END

      