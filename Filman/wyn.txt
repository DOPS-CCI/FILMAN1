Comparing files FILTER_OLD.FOR and FILTER.FOR
***** FILTER_OLD.FOR

      DATA COEFF/2.354683561454284e-01,-3.767493698326856e+00,

     &2.825620273745144e+01,-1.3186227944144e+02,4.285524081846803e+02,

     &-1.028525779643233e+3,1.885630596012593e+3,-2.693757994303704e+03,

     &3.030477743591667e+3,-2.693757994303704e+03,1.885630596012593e+03,

     &-1.028525779643233e+3,4.285524081846803e+2,-1.318622794414401e+02,

     &2.825620273745144e+1,-3.767493698326860e+00,2.354683561454287e-01,

     &1.0000000000000e+00,-1.312062044475557e+01,8.091616678199033e+01,

     &-3.11317907589506e+02,8.36280347764402e+02,-1.663001621342082e+03,

     &2.532175784883837e+3,-3.011292925824418e+03,2.826372262699564e+03,

     &-2.100575460653576e+3,1.231992242724636e+3,-5.641861870570764e+02,

     &1.977546979210619e+2,-5.128559751596994e+01,9.280146051358990e+00,

     &-1.046773745786663e+00,5.544534674583004e-2,3.167334949871758e-09,

     &5.067736452701865e-08,3.800801593456526e-07,1.773707708707661e-06,

     &5.764549115383488e-06,1.383491974138451e-05,2.536401694896994e-05,

     &3.623431268806598e-05,4.076359951454833e-05,3.623431213384265e-05,

     &2.53640177660941e-05,1.383491906636891e-05,5.764549525721918e-06,

     &1.773707565266846e-06,3.800801896547412e-07,5.067735890304514e-08,

     &3.167334918104634e-09,1.0e+00,-8.741921536998909e+00,

     &3.686529043192476e+01,-9.914796985316122e+01,1.89779480477958e+02,

     &-2.73505138673003e+02,3.064294236375896e+02,-2.71838192875174e+02,

     &1.92724299496558e+02,-1.094396453508753e+02,4.95640040774697e+01,

     &-1.769940677261704e+01,4.882031821660637e+00,-1.004856454699e+00,

     &1.454659505001392e-1,-1.322544127515187e-02,5.686386042678259e-04/

      CHARACTER*255 ALINE
      COMMON /CPN/ CURPROCNAME
      CHARACTER*10 CURPROCNAME
      LOGICAL AcceptFilterDialog
        COMMON/DEV/ITI,ILP,IGRAPH

        IF(IFLAG1) 10,30,325
***** FILTER.FOR

        IF(IFLAG1) 10,30,325
*****

***** FILTER_OLD.FOR
10    NFO=3 ! DECIDED TO MAKE OUTPUT ALWAYS REAL TO AVOID QUANTIZATION
      CURPROCNAME='FILTER'

***** FILTER.FOR
10    NFO=3 ! DECIDED TO MAKE OUTPUT ALWAYS REAL TO AVOID QUANTIZATION

*****

***** FILTER_OLD.FOR

13    CONTINUE
      CALL DoFILTERDialog(IFILT,IBAND,CF,NS,DB,IDEC,ISO)

!      WRITE(*,100)
!
!100   FORMAT('$FILTER TYPE:1=CHEBY1/2=CHEBY2/3=BUTTERWORTH/4=BUTTERWORTH
!
!     & HP-LP >'\)
!
!       READ(*,*)IFILT

        IF(IFILT.LT.1 .OR. IFILT.GT.4)GO TO 13

        IF(IFILT.EQ.4)GO TO 200    !USE MATLAB COEFFICIENTS FOR HP-LP

***** FILTER.FOR

13    WRITE(*,100)

100   FORMAT('$FILTER TYPE:1=CHEBY1/2=CHEBY2/3=BUTTERWORTH >'\)
        READ(*,*)IFILT

        IF(IFILT.LT.1 .OR. IFILT.GT.3)GO TO 13

*****

***** FILTER_OLD.FOR

!       WRITE(*,101) !GET FILTER TYPE FOR STEARNS AND DAVID
!
!101   FORMAT('$CHARACTERISTIC:1=LOWPASS/2=HIGHPASS/3=BANDPASS/',
!
!     + '4=BANDSTOP >'\)
!
!       READ(*,*)IBAND

***** FILTER.FOR

        WRITE(*,101) !GET FILTER TYPE FOR STEARNS AND DAVID

101   FORMAT('$CHARACTERISTIC:1=LOWPASS/2=HIGHPASS/3=BANDPASS/',

     + '4=BANDSTOP >'\)

        READ(*,*)IBAND

*****

***** FILTER_OLD.FOR

!       WRITE(*,102)
!
!102   FORMAT('$LOWER, UPPER CRITICAL FREQS(SEE S&D P.325) >'\)      
!
!       READ(*,*)(CF(I),I=1,4)

***** FILTER.FOR

        WRITE(*,102)

102   FORMAT('$LOWER, UPPER CRITICAL FREQS(SEE S&D P.325) >'\)      

        READ(*,*)(CF(I),I=1,4)

*****

***** FILTER_OLD.FOR

!       WRITE(*,103)
!
!103   FORMAT('$# FILTER SECTIONS(.LE.6), REJECTION IN DB(>3) >'\)
!
!       READ(*,*)NS,DB

***** FILTER.FOR

        WRITE(*,103)

103   FORMAT('$# FILTER SECTIONS(.LE.6), REJECTION IN DB(>3) >'\)

        READ(*,*)NS,DB

*****

***** FILTER_OLD.FOR

!       WRITE(*,104)IERR
!
104   FORMAT(' DESIGN PROBLEM #',I3,'; REDO SPECS(SEE S&D P.153)')
        WRITE(ALINE,104)IERR
      CALL ShowInfoText('Error',ALINE)

***** FILTER.FOR

        WRITE(*,104)IERR

104   FORMAT(' DESIGN PROBLEM #',I3,'; REDO SPECS(SEE S&D P.153)')

*****

***** FILTER_OLD.FOR

!       WRITE(*,107)
!
!107   FORMAT('$OK? >'\)
!
!       READ(*,108)IA
!
!108   FORMAT(A1)
!      CALL GETVALU(2,IVAL,ALINE,'(A)')
!      WRITE(*,'(A)')ALINE
!      READ(ALINE,108)IA
!
!       IF(IA.EQ.'N')GO TO 13
        IF(.NOT.AcceptFilterDialog())GOTO 13
        CLOSE(IGRAPH)

***** FILTER.FOR

        WRITE(*,107)

107   FORMAT('$OK? >'\)

        READ(*,108)IA

108   FORMAT(A1)

        IF(IA.EQ.'N')GO TO 13

*****

***** FILTER_OLD.FOR

C SETUP FOR BUTTERWORTH HP-LP IF REQUESTED

200   DO I=1,20

       AH(I)=0D0

       BH(I)=0D0

       AL(I)=0D0

       BL(I)=0D0

       PVH(I)=0D0

       PVL(I)=0D0

      END DO  

C READ COEFFS

      IBH=17

      IAH=17

      IBL=17

      IAL=17

      K=1

      DO 205 I=1,IBH

       BH(I)=COEFF(K)

205    K=K+1

      DO 210 I=1,IAH

       AH(I)=COEFF(K)

210    K=K+1

      DO 215 I=1,IBL

       BL(I)=COEFF(K)

215    K=K+1

      DO 220 I=1,IAL

       AL(I)=COEFF(K)

220    K=K+1

C SETUP FOR INITIAL CONDS ON FILTER DELAYS

      NHFILT=MAX(IBH,IAH)

      DO 225 I=NHFILT,1,-1

225    PVH(I)=PVH(I+1)+BH(I)-AH(I)

      NLFILT=MAX(IBL,IAL)

      DO 226 I=NLFILT,1,-1

226    PVL(I)=PVL(I+1)+BL(I)-AL(I)

C FILTER DESIGN COMPLETE, DETERMINE DECIMATION ROUTINE
***** FILTER.FOR

C FILTER DESIGN COMPLETE, DETERMINE DECIMATION ROUTINE
*****

***** FILTER_OLD.FOR

!      IDEC=0
!
!      WRITE(*,110)
!
!110   FORMAT('$DECIMATE FILTERED DATA? >'\)
!
!       READ(*,108)IA
!
!       IF(IA.NE.'Y' .AND. IA.NE.'y')GO TO 28      

***** FILTER.FOR

      IDEC=0

      WRITE(*,110)

110   FORMAT('$DECIMATE FILTERED DATA? >'\)

        READ(*,108)IA

        IF(IA.NE.'Y' .AND. IA.NE.'y')GO TO 28      

*****

***** FILTER_OLD.FOR

!       WRITE(*,111)ISO1
!
!111   FORMAT('$ENTER FINAL SAMPLE RATE (.LE. ',I4,') >'\)
!
!       READ(*,*)ISO

***** FILTER.FOR

        WRITE(*,111)ISO1

111   FORMAT('$ENTER FINAL SAMPLE RATE (.LE. ',I4,') >'\)

        READ(*,*)ISO

*****

***** FILTER_OLD.FOR

30    IF(IFILT.EQ.4)GO TO 228             !SKIP TO HP-LP

      NFACT=3*LS

      NDO2=NDO1+NFACT
***** FILTER.FOR

30    NFACT=3*LS
      NDO2=NDO1+NFACT
*****

***** FILTER_OLD.FOR

!       WRITE(*,112)KNT,IBUF(1),IERR

***** FILTER.FOR

        WRITE(*,112)KNT,IBUF(1),IERR

*****

***** FILTER_OLD.FOR

!       PAUSE ' <CR> TO CONTINUE'
        WRITE(ALINE,112)KNT,IBUF(1),IERR
      CALL ShowInfoText('Error',ALINE)

***** FILTER.FOR

        PAUSE ' <CR> TO CONTINUE'

*****

***** FILTER_OLD.FOR

!       WRITE(*,112)KNT,IBUF(1),IERR
!
!       PAUSE ' <CR> TO CONTINUE'
        WRITE(ALINE,112)KNT,IBUF(1),IERR
      CALL ShowInfoText('Error',ALINE)

***** FILTER.FOR

        WRITE(*,112)KNT,IBUF(1),IERR

        PAUSE ' <CR> TO CONTINUE'

*****

Resync Failed.  Files are too different.
***** FILTER_OLD.FOR

C RUNNING SECTION FOR HP-LP

228   NFACT=3*(NHFILT-1)

      NDO2=NDO1+NFACT

      K=NFACT+1

C READ DATA AND PREPEND IC'S      

      DO 230 L=1,NDO1

       CALL XVAL(L,XV,XI)

       WORK(K)=XV

230    K=K+1

      WK=2.*WORK(NFACT+1)

      DO 235 I=0,NFACT-1

235    WORK(NFACT-I)=WK-WORK(NFACT+2+I)

C IC'S FOR HP FILTER DELAYS       

      DO 240 I=2,NHFILT

240    ZI(I-1)=PVH(I)*WORK(1)

C FIRST PASS FOR HP

      CALL T2TFILT(BH,AH,IBH,IAH,WORK,NDO2,ZI,IERR)

      IF(IERR.EQ.0) GO TO 241

!      WRITE(*,113)KNT,IBUF(1)

113   FORMAT('$FILTER ERROR, RECSET',I5,' CHANNEL',I4)

!      PAUSE ' <CR> TO CONTINUE'
        WRITE(ALINE,113)KNT,IBUF(1)
      CALL ShowInfoText('Error',ALINE)

241   WK=2*WORK(NDO2)          

C APPEND DATA  IC'S

      DO 245 I=1,NFACT

245    WORK(NDO2+I)=WK-WORK(NDO2-I)

      NDO2=NDO2+NFACT

C FLIP  DATA      

      DO 250 I=1,NDO2/2

       TEMP=WORK(I)

       WORK(I)=WORK(NDO2-I+1)

250    WORK(NDO2-I+1)=TEMP   

C DELAY IC'S FOR FILTER

      DO 255 I=2,NHFILT

255    ZI(I-1)=PVH(I)*WORK(1)  

C HP SECOND PASS

      CALL T2TFILT(BH,AH,IBH,IAH,WORK,NDO2,ZI,IERR)

      IF(IERR.EQ.0)GO TO 260

!      WRITE(*,113)KNT,IBUF(1)

!      PAUSE ' <CR> TO CONTINUE'
        WRITE(ALINE,113)KNT,IBUF(1)
      CALL ShowInfoText('Error',ALINE)

C DELAY IC'S FOR LP FILTER     

260   DO 265 I=2,NLFILT

265    ZI(I-1)=PVL(I)*WORK(1)

C FIRST PASS LP

      CALL T2TFILT(BL,AL,IBL,IAL,WORK,NDO2,ZI,IERR)

      IF(IERR.EQ.0) GO TO 266

      WRITE(*,113)KNT,IBUF(1)

      PAUSE' <CR> TO CONTINUE'

C FLIP DATA      
***** FILTER.FOR

C COPY ID INFO, DECIMATE AND WRITE RECORD      

300   J=J1

        DO 310 I=1,NID

         IBUFO(J)=IBUFO(I)

310     J=J+1

        IF(IDEC.EQ.0) GO TO 320

        L=1

        DO 315 J=2,NDO

         L=L+IOFF

315    WORK(J)=WORK(L)

320   CALL PUTSTD(IBUFO(J1))

325   RETURN

        END

      SUBROUTINE FILPLOT(NS,LS,B,A,ISO)

C

C CALCULATE AND PLOT RESPONSE FOR STEARNS & DAVID CASCADED SECTIONS FILTERS

C

      COMPLEX Z1,BSUM,ASUM,GAIN

      DIMENSION B(0:LS,NS),A(LS,NS),AMP(0:1000),FREQ(0:1000)

      DATA NPT/500/

      SMALL=1.E-10

      BIG=1.E10    

      RSO=REAL(ISO)/(NPT*2)     

      DO 5 I=0,NPT

       AMP(I)=1.

5      FREQ(I)=I*RSO  

      DO 20 IS=1,NS

C GET MAG RESPONSE AT NPT NUM OF PTS AND 0 HZ                 

       DO 20 IM=0,NPT 

        Z1=CEXP(CMPLX(0.,-8.*ATAN(1.)*IM*.5/NPT))

        BSUM=0.

        DO 10 I=LS,1,-1

10       BSUM=(BSUM+B(I,IS))*Z1

        ASUM=0.

        DO 15 I=LS,1,-1

15       ASUM=(ASUM+A(I,IS))*Z1           

        IF(ABS(1.+ASUM).LT.SMALL) GAIN=BIG

        IF(ABS(1.+ASUM).GE.SMALL) GAIN=(B(0,IS)+BSUM)/(1.+ASUM)

C FOR CASCADED SECTIONS JUST MULTIPLY GAINS FOR EACH SECTION       

20      AMP(IM)=AMP(IM)*ABS(GAIN)    

C PLOT FREQ VS. AMP 

      CALL MPLOT(NPT+1,FREQ,AMP)

      RETURN

      END

                   

                   

      SUBROUTINE MPLOT(NPTS,X,Y)

C MONITOR X/Y PLOT ROUTINE WITH AUTO AXIS LABELS AND SCALING 

C NPTS = NUM OF POINTS PLOTTED

C X = ARRAY OF X VALUES
*****

